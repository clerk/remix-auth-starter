{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/compiler/shims/react.ts", "../node_modules/remix/index.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\root.tsx", "../app/components/Header.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\connected-accounts.$id.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/connectedAccounts/ConnectedAccountDetail.tsx", "../../clerkfe/packages/shared/components/avatar/Avatar.tsx", "../../clerkfe/packages/shared/utils/isRetinaDisplay.ts", "../../clerkfe/packages/shared/components/list/List.tsx", "../../clerkfe/packages/shared/assets/icons/index.ts", "../../clerkfe/packages/shared/components/titledCard/TitledCard.tsx", "../../clerkfe/packages/shared/components/card/Card.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/constants.ts", "../node_modules/@clerk/clerk-js/src/ui/contexts/index.ts", "../node_modules/@clerk/clerk-js/src/ui/contexts/CoreClerkContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/utils.ts", "../node_modules/@clerk/clerk-js/src/core/errors.ts", "../node_modules/@clerk/clerk-js/src/ui/contexts/CoreUserContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/ClerkUIComponentsContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/Body.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/ButtonSet.tsx", "../../clerkfe/packages/shared/components/button/Button.tsx", "../../clerkfe/packages/shared/components/button/ButtonWithSpinner.tsx", "../../clerkfe/packages/shared/components/spinner/Spinner.tsx", "../../clerkfe/packages/shared/components/button/ButtonWithTimer.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/Footer.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/Header.tsx", "../../clerkfe/packages/shared/components/label/Label.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/backButton/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/backButton/BackButton.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/icon.tsx", "../app/ui/router.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/error/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/error/Error.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/LoadingScreen.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authForms/Separator.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/authPropHelpers.ts", "../../clerkfe/packages/shared/utils/cookies.ts", "../../clerkfe/packages/shared/utils/noop.ts", "../../clerkfe/packages/shared/utils/object.ts", "../../clerkfe/packages/shared/utils/string.ts", "../node_modules/@clerk/clerk-js/src/ui/common/disabledStrategies.ts", "../node_modules/@clerk/clerk-js/src/ui/common/errorHandler.ts", "../node_modules/@clerk/clerk-js/src/core/resources/internal.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Base.ts", "../node_modules/@clerk/clerk-js/src/core/resources/UserSettings.ts", "../node_modules/@clerk/clerk-js/src/core/resources/AuthConfig.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Client.ts", "../node_modules/@clerk/clerk-js/src/utils/date.ts", "../node_modules/@clerk/clerk-js/src/core/tokenCache.ts", "../node_modules/@clerk/clerk-js/src/core/resources/DisplayConfig.ts", "../node_modules/@clerk/clerk-js/src/core/resources/EmailAddress.ts", "../../clerkfe/packages/shared/utils/poller.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Environment.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Error.ts", "../node_modules/@clerk/clerk-js/src/core/resources/ExternalAccount.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Verification.ts", "../node_modules/@clerk/clerk-js/src/core/resources/IdentificationLink.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Image.ts", "../node_modules/@clerk/clerk-js/src/core/resources/PhoneNumber.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Organization.ts", "../node_modules/@clerk/clerk-js/src/core/resources/OrganizationInvitation.ts", "../node_modules/@clerk/clerk-js/src/core/resources/OrganizationMembership.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Session.ts", "../node_modules/@clerk/clerk-js/src/core/resources/SessionWithActivities.ts", "../node_modules/@clerk/clerk-js/src/core/resources/SignIn.ts", "../node_modules/@clerk/clerk-js/src/utils/index.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/index.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/handler.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/client.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/client_uat.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/initted.ts", "../node_modules/@clerk/clerk-js/src/utils/cookies/session.ts", "../node_modules/@clerk/clerk-js/src/utils/customCss.ts", "../node_modules/@clerk/clerk-js/src/utils/customFont.ts", "../node_modules/@clerk/clerk-js/src/utils/email.ts", "../node_modules/@clerk/clerk-js/src/utils/encoders.ts", "../node_modules/@clerk/clerk-js/src/utils/errors.ts", "../node_modules/@clerk/clerk-js/src/utils/getClerkQueryParam.ts", "../node_modules/@clerk/clerk-js/src/utils/hex.ts", "../node_modules/@clerk/clerk-js/src/utils/iframe.ts", "../node_modules/@clerk/clerk-js/src/utils/ignoreEventValue.ts", "../node_modules/@clerk/clerk-js/src/utils/instance.ts", "../node_modules/@clerk/clerk-js/src/utils/jwt.ts", "../node_modules/@clerk/clerk-js/src/utils/querystring.ts", "../node_modules/@clerk/clerk-js/src/utils/runtime.ts", "../node_modules/@clerk/clerk-js/src/utils/runWithExponentialBackOff.ts", "../node_modules/@clerk/clerk-js/src/utils/safeLock.ts", "../node_modules/@clerk/clerk-js/src/utils/script.ts", "../node_modules/@clerk/clerk-js/src/utils/url.ts", "../node_modules/@clerk/clerk-js/src/utils/web3.ts", "../node_modules/@clerk/clerk-js/src/utils/windowNavigate.ts", "../node_modules/@clerk/clerk-js/src/utils/pageLifecycle.ts", "../node_modules/@clerk/clerk-js/src/utils/beforeUnloadTracker.ts", "../node_modules/@clerk/clerk-js/src/core/resources/SignUp.ts", "../node_modules/@clerk/clerk-js/src/utils/resourceParams.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Token.ts", "../node_modules/@clerk/clerk-js/src/core/resources/User.ts", "../node_modules/@clerk/clerk-js/src/core/resources/Web3Wallet.ts", "../node_modules/@clerk/clerk-js/src/ui/common/forms.ts", "../node_modules/@clerk/clerk-js/src/ui/common/logo/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/logo/Logo.tsx", "../node_modules/@clerk/clerk-js/src/ui/signIn/utils.ts", "../node_modules/@clerk/clerk-js/src/ui/signIn/strategies/factorSortingUtils.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/magicLinkWaitingScreen/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/magicLinkWaitingScreen/MagicLinkWaitingScreen.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/poweredByClerk/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/poweredByClerk/PoweredByClerk.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/redirects.ts", "../node_modules/@clerk/clerk-js/src/ui/common/verification.ts", "../node_modules/@clerk/clerk-js/src/ui/common/verifyMagicLink/index.ts", "../node_modules/@clerk/clerk-js/src/ui/common/verifyMagicLink/VerifyMagicLink.tsx", "../app/ui/hooks.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/verifyMagicLink/MagicLinkVerificationStatusModal.tsx", "../../clerkfe/packages/shared/components/portal/Portal.tsx", "../node_modules/@clerk/clerk-js/src/ui/common/withRedirectToHome.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/EnvironmentContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/OptionsContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/CoreSessionContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/CoreClientContext.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/pageHeading/index.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/pageHeading/PageHeading.tsx", "../../clerkfe/packages/shared/components/heading/Heading.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\email-addresses.$id.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailDetail.tsx", "../../clerkfe/packages/shared/components/tag/Tag.tsx", "../../clerkfe/packages/shared/components/toggle/Toggle.tsx", "../../clerkfe/packages/shared/hooks/useInput.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailAddressVerificationWithMagicLink.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailAddressVerificationWithOTP.tsx", "../../clerkfe/packages/shared/components/oneTimeCodeInput/OneTimeCodeInput.tsx", "../../clerkfe/packages/shared/components/input/Input.tsx", "../../clerkfe/packages/shared/hooks/useDetectClickOutside.ts", "../../clerkfe/packages/shared/hooks/useDomRef.ts", "../../clerkfe/packages/shared/hooks/useLocalStorage.ts", "../../clerkfe/packages/shared/hooks/useMounted.ts", "../../clerkfe/packages/shared/components/input/InputWithIcon.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/utils.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/EditableListFieldRemoveCard.tsx", "../../clerkfe/packages/shared/components/phoneInput/PhoneInput.tsx", "../../clerkfe/packages/shared/components/dropdown/Dropdown.tsx", "../../clerkfe/packages/shared/components/expansionIcon/index.ts", "../../clerkfe/packages/shared/components/expansionIcon/ExpansionIcon.tsx", "../../clerkfe/packages/shared/components/dropdown/DropdownList.tsx", "../../clerkfe/packages/shared/components/dropdown/util.ts", "../../clerkfe/packages/shared/components/phoneInput/countryCodeData.ts", "../../clerkfe/packages/shared/components/phoneInput/utils.ts", "../../clerkfe/packages/shared/components/phoneInput/PhoneViewer.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/util.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\email-addresses.add.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/AddNewEmail.tsx", "../../clerkfe/packages/shared/components/control/Control.tsx", "../../clerkfe/packages/shared/components/form/Form.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\connected-accounts.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/connectedAccounts/ConnectedAccountList.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/connectedAccounts/UnconnectedAccountListItem.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/connectedAccounts/UnverifiedAccountListItem.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/connectedAccounts/VerifiedAccountListItem.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\phone-numbers.$id.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/phoneNumbers/PhoneDetail.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\phone-numbers.add.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/phoneNumbers/AddNewPhone.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/AddVerifiableField.tsx", "../../clerkfe/packages/shared/components/wizard/Wizard.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\email-addresses.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailList.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\phone-numbers.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/phoneNumbers/PhoneList.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\first-name.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/name/FirstName.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/EditableField.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\last-name.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/name/LastName.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\username.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/username/Username.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\account\\index.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/Account.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/personalInformation/index.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/personalInformation/PersonalInformationCard.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/profileCard/index.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/profileCard/ProfileCard.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/avatarWithUploader/index.ts", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/avatarWithUploader/AvatarWithUploader.tsx", "../../clerkfe/packages/shared/components/imageUploader/ImageUploader.tsx", "../../clerkfe/packages/shared/utils/array.ts", "../../clerkfe/packages/shared/utils/mimeTypeExtensions.ts", "../../clerkfe/packages/shared/components/fileDropArea/FileDropArea.tsx", "../../clerkfe/packages/shared/components/modal/Modal.tsx", "../../clerkfe/packages/shared/components/modal/CloseButton.tsx", "../../clerkfe/packages/shared/components/modal/context.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/profileCard/ProfileEmailAddresses.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/account/profileCard/ProfilePhoneNumbers.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\ssr-user-demo.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\user\\index.tsx", "../node_modules/@clerk/clerk-js/src/ui/userProfile/NavBarLinks.tsx", "../node_modules/@clerk/clerk-js/src/ui/contexts/CoreClerkContextWrapper.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\sign-in\\$.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\sign-up\\$.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\ssr-demo.tsx", "C:\\Users\\dvarg\\Developer\\clerkinc\\clerk-remix-starter\\app\\routes\\index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "/**\n * @remix-run/node v1.3.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar node = require('@remix-run/node');\n\n\n\nObject.defineProperty(exports, 'createCookie', {\n  enumerable: true,\n  get: function () { return node.createCookie; }\n});\nObject.defineProperty(exports, 'createCookieSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createCookieSessionStorage; }\n});\nObject.defineProperty(exports, 'createFileSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createFileSessionStorage; }\n});\nObject.defineProperty(exports, 'createMemorySessionStorage', {\n  enumerable: true,\n  get: function () { return node.createMemorySessionStorage; }\n});\nObject.defineProperty(exports, 'createSessionStorage', {\n  enumerable: true,\n  get: function () { return node.createSessionStorage; }\n});\nObject.defineProperty(exports, 'unstable_createFileUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createFileUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_createMemoryUploadHandler', {\n  enumerable: true,\n  get: function () { return node.unstable_createMemoryUploadHandler; }\n});\nObject.defineProperty(exports, 'unstable_parseMultipartFormData', {\n  enumerable: true,\n  get: function () { return node.unstable_parseMultipartFormData; }\n});\n\n/**\n * @remix-run/server-runtime v1.3.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serverRuntime = require('@remix-run/server-runtime');\n\n\n\nObject.defineProperty(exports, 'createSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.createSession; }\n});\nObject.defineProperty(exports, 'isCookie', {\n  enumerable: true,\n  get: function () { return serverRuntime.isCookie; }\n});\nObject.defineProperty(exports, 'isSession', {\n  enumerable: true,\n  get: function () { return serverRuntime.isSession; }\n});\nObject.defineProperty(exports, 'json', {\n  enumerable: true,\n  get: function () { return serverRuntime.json; }\n});\nObject.defineProperty(exports, 'redirect', {\n  enumerable: true,\n  get: function () { return serverRuntime.redirect; }\n});\n\n/**\n * @remix-run/react v1.3.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar react = require('@remix-run/react');\n\n\n\nObject.defineProperty(exports, 'Form', {\n  enumerable: true,\n  get: function () { return react.Form; }\n});\nObject.defineProperty(exports, 'Link', {\n  enumerable: true,\n  get: function () { return react.Link; }\n});\nObject.defineProperty(exports, 'Links', {\n  enumerable: true,\n  get: function () { return react.Links; }\n});\nObject.defineProperty(exports, 'LiveReload', {\n  enumerable: true,\n  get: function () { return react.LiveReload; }\n});\nObject.defineProperty(exports, 'Meta', {\n  enumerable: true,\n  get: function () { return react.Meta; }\n});\nObject.defineProperty(exports, 'NavLink', {\n  enumerable: true,\n  get: function () { return react.NavLink; }\n});\nObject.defineProperty(exports, 'Outlet', {\n  enumerable: true,\n  get: function () { return react.Outlet; }\n});\nObject.defineProperty(exports, 'PrefetchPageLinks', {\n  enumerable: true,\n  get: function () { return react.PrefetchPageLinks; }\n});\nObject.defineProperty(exports, 'RemixBrowser', {\n  enumerable: true,\n  get: function () { return react.RemixBrowser; }\n});\nObject.defineProperty(exports, 'RemixServer', {\n  enumerable: true,\n  get: function () { return react.RemixServer; }\n});\nObject.defineProperty(exports, 'Scripts', {\n  enumerable: true,\n  get: function () { return react.Scripts; }\n});\nObject.defineProperty(exports, 'ScrollRestoration', {\n  enumerable: true,\n  get: function () { return react.ScrollRestoration; }\n});\nObject.defineProperty(exports, 'useActionData', {\n  enumerable: true,\n  get: function () { return react.useActionData; }\n});\nObject.defineProperty(exports, 'useBeforeUnload', {\n  enumerable: true,\n  get: function () { return react.useBeforeUnload; }\n});\nObject.defineProperty(exports, 'useCatch', {\n  enumerable: true,\n  get: function () { return react.useCatch; }\n});\nObject.defineProperty(exports, 'useFetcher', {\n  enumerable: true,\n  get: function () { return react.useFetcher; }\n});\nObject.defineProperty(exports, 'useFetchers', {\n  enumerable: true,\n  get: function () { return react.useFetchers; }\n});\nObject.defineProperty(exports, 'useFormAction', {\n  enumerable: true,\n  get: function () { return react.useFormAction; }\n});\nObject.defineProperty(exports, 'useHref', {\n  enumerable: true,\n  get: function () { return react.useHref; }\n});\nObject.defineProperty(exports, 'useLoaderData', {\n  enumerable: true,\n  get: function () { return react.useLoaderData; }\n});\nObject.defineProperty(exports, 'useLocation', {\n  enumerable: true,\n  get: function () { return react.useLocation; }\n});\nObject.defineProperty(exports, 'useMatches', {\n  enumerable: true,\n  get: function () { return react.useMatches; }\n});\nObject.defineProperty(exports, 'useNavigate', {\n  enumerable: true,\n  get: function () { return react.useNavigate; }\n});\nObject.defineProperty(exports, 'useNavigationType', {\n  enumerable: true,\n  get: function () { return react.useNavigationType; }\n});\nObject.defineProperty(exports, 'useOutlet', {\n  enumerable: true,\n  get: function () { return react.useOutlet; }\n});\nObject.defineProperty(exports, 'useOutletContext', {\n  enumerable: true,\n  get: function () { return react.useOutletContext; }\n});\nObject.defineProperty(exports, 'useParams', {\n  enumerable: true,\n  get: function () { return react.useParams; }\n});\nObject.defineProperty(exports, 'useResolvedPath', {\n  enumerable: true,\n  get: function () { return react.useResolvedPath; }\n});\nObject.defineProperty(exports, 'useSearchParams', {\n  enumerable: true,\n  get: function () { return react.useSearchParams; }\n});\nObject.defineProperty(exports, 'useSubmit', {\n  enumerable: true,\n  get: function () { return react.useSubmit; }\n});\nObject.defineProperty(exports, 'useTransition', {\n  enumerable: true,\n  get: function () { return react.useTransition; }\n});\n\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\root.tsx\";\nimport * as route1 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\connected-accounts.$id.tsx\";\nimport * as route2 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\email-addresses.$id.tsx\";\nimport * as route3 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\email-addresses.add.tsx\";\nimport * as route4 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\connected-accounts.tsx\";\nimport * as route5 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\phone-numbers.$id.tsx\";\nimport * as route6 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\phone-numbers.add.tsx\";\nimport * as route7 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\email-addresses.tsx\";\nimport * as route8 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\phone-numbers.tsx\";\nimport * as route9 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\first-name.tsx\";\nimport * as route10 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\last-name.tsx\";\nimport * as route11 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\username.tsx\";\nimport * as route12 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\account\\\\index.tsx\";\nimport * as route13 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\ssr-user-demo.tsx\";\nimport * as route14 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\user\\\\index.tsx\";\nimport * as route15 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\sign-in\\\\$.tsx\";\nimport * as route16 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\sign-up\\\\$.tsx\";\nimport * as route17 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\ssr-demo.tsx\";\nimport * as route18 from \"C:\\\\Users\\\\dvarg\\\\Developer\\\\clerkinc\\\\clerk-remix-starter\\\\app\\\\routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/user/account/connected-accounts.$id\": {\n      id: \"routes/user/account/connected-accounts.$id\",\n      parentId: \"root\",\n      path: \"user/account/connected-accounts/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/user/account/email-addresses.$id\": {\n      id: \"routes/user/account/email-addresses.$id\",\n      parentId: \"root\",\n      path: \"user/account/email-addresses/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/user/account/email-addresses.add\": {\n      id: \"routes/user/account/email-addresses.add\",\n      parentId: \"root\",\n      path: \"user/account/email-addresses/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/user/account/connected-accounts\": {\n      id: \"routes/user/account/connected-accounts\",\n      parentId: \"root\",\n      path: \"user/account/connected-accounts\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/user/account/phone-numbers.$id\": {\n      id: \"routes/user/account/phone-numbers.$id\",\n      parentId: \"root\",\n      path: \"user/account/phone-numbers/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/user/account/phone-numbers.add\": {\n      id: \"routes/user/account/phone-numbers.add\",\n      parentId: \"root\",\n      path: \"user/account/phone-numbers/add\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/user/account/email-addresses\": {\n      id: \"routes/user/account/email-addresses\",\n      parentId: \"root\",\n      path: \"user/account/email-addresses\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/user/account/phone-numbers\": {\n      id: \"routes/user/account/phone-numbers\",\n      parentId: \"root\",\n      path: \"user/account/phone-numbers\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/user/account/first-name\": {\n      id: \"routes/user/account/first-name\",\n      parentId: \"root\",\n      path: \"user/account/first-name\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/user/account/last-name\": {\n      id: \"routes/user/account/last-name\",\n      parentId: \"root\",\n      path: \"user/account/last-name\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/user/account/username\": {\n      id: \"routes/user/account/username\",\n      parentId: \"root\",\n      path: \"user/account/username\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/user/account/index\": {\n      id: \"routes/user/account/index\",\n      parentId: \"root\",\n      path: \"user/account\",\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/ssr-user-demo\": {\n      id: \"routes/ssr-user-demo\",\n      parentId: \"root\",\n      path: \"ssr-user-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/user/index\": {\n      id: \"routes/user/index\",\n      parentId: \"root\",\n      path: \"user\",\n      index: true,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/sign-in/$\": {\n      id: \"routes/sign-in/$\",\n      parentId: \"root\",\n      path: \"sign-in/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/sign-up/$\": {\n      id: \"routes/sign-up/$\",\n      parentId: \"root\",\n      path: \"sign-up/*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/ssr-demo\": {\n      id: \"routes/ssr-demo\",\n      parentId: \"root\",\n      path: \"ssr-demo\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route18\n    }\n  };", "import { renderToString } from \"react-dom/server\";\r\nimport { RemixServer } from \"remix\";\r\nimport type { EntryContext } from \"remix\";\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  const markup = renderToString(<RemixServer context={remixContext} url={request.url} />);\r\n\r\n  responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n  return new Response(\"<!DOCTYPE html>\" + markup, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import type { MetaFunction } from \"remix\";\r\nimport { Links, LiveReload, LoaderFunction, Meta, Outlet, Scripts, ScrollRestoration } from \"remix\";\r\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\r\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\r\nimport styles from \"~/styles/shared.css\";\r\nimport Header from \"~/components/Header\";\r\n\r\nexport const meta: MetaFunction = () => {\r\n  return { title: \"New Remix App\" };\r\n};\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: \"stylesheet\", href: \"https://unpkg.com/modern-css-reset@1.4.0/dist/reset.min.css\" },\r\n    { rel: \"stylesheet\", href: styles },\r\n  ];\r\n}\r\n\r\nexport const loader: LoaderFunction = (args) => {\r\n  return rootAuthLoader(\r\n    args,\r\n    ({ request }) => {\r\n      const { userId, sessionId, getToken } = request.auth;\r\n      console.log(\"Root loader auth:\", { userId, sessionId, getToken });\r\n      return { message: `Hello from the root loader :)` };\r\n    },\r\n    { loadUser: true }\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Header />\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n\r\nexport default ClerkApp(App);\r\n\r\nexport const CatchBoundary = ClerkCatchBoundary();\r\n", "import { SignedIn, SignedOut, UserButton } from \"@clerk/remix\";\r\nimport { Link } from \"remix\";\r\n\r\n// Header component using <SignedIn> & <SignedOut>.\r\n//\r\n// The SignedIn and SignedOut components are used to control rendering depending\r\n// on whether or not a visitor is signed in.\r\n//\r\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <div className=\"left\">\r\n      <Link to=\"/\">\r\n        <a className=\"logo\">\r\n          <img src=\"/logo.svg\" width=\"32\" height=\"32\" alt=\"Logo\" />\r\n          <span className=\"appName\">Your application</span>\r\n        </a>\r\n      </Link>\r\n    </div>\r\n    <div className=\"right\">\r\n      <SignedOut>\r\n        <Link to=\"/sign-in\">Sign in</Link>\r\n      </SignedOut>\r\n      <SignedIn>\r\n        <UserButton userProfileUrl=\"/user\" afterSignOutAllUrl=\"/\" />\r\n      </SignedIn>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n", "export { ConnectedAccountDetail as default } from \"@clerk/clerk-js/src/ui/userProfile/connectedAccounts/ConnectedAccountDetail\";\r\n", "import { Avatar } from '@clerk/shared/components/avatar';\nimport { List } from '@clerk/shared/components/list';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { ExternalAccountResource } from '@clerk/types';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\nimport { useCoreUser } from 'ui/contexts';\nimport { useRouter } from 'ui/router';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nexport function ConnectedAccountDetail(): JSX.Element | null {\n  const user = useCoreUser();\n  const { params } = useRouter();\n\n  let externalAccount: ExternalAccountResource | null = null;\n\n  for (const ea of user.externalAccounts) {\n    if (ea.id == params.connected_account_id) {\n      externalAccount = ea;\n      break;\n    }\n  }\n\n  if (!externalAccount) {\n    return null;\n  }\n\n  const avatarRow = (\n    <List.Item\n      className='cl-list-item'\n      key='photo'\n      itemTitle='Photo'\n      hoverable={false}\n      detail={false}\n    >\n      <Avatar\n        className='cl-image'\n        profileImageUrl={externalAccount.avatarUrl}\n        size={32}\n      />\n    </List.Item>\n  );\n\n  const emailAddressRow = (\n    <List.Item\n      className='cl-list-item'\n      key='email'\n      itemTitle='Email'\n      hoverable={false}\n      detail={false}\n    >\n      <div>{externalAccount.emailAddress}</div>\n    </List.Item>\n  );\n\n  const usernameRow = (\n    externalAccount.username ?\n      <List.Item\n        className='cl-list-item'\n        key='username'\n        itemTitle='Username'\n        hoverable={false}\n        detail={false}\n      >\n        <div>{externalAccount.username}</div>\n      </List.Item>\n      :\n      <></>\n  )\n\n  return (\n    <>\n      <PageHeading title='Connected account' backTo='./../'/>\n      <TitledCard\n        title={\n          <>\n            <img\n              alt={externalAccount.providerTitle()}\n              src={svgUrl(externalAccount.providerSlug())}\n              className='cl-left-icon-wrapper'\n            />\n            &nbsp; {externalAccount.providerTitle()}\n          </>\n        }\n        subtitle=' '\n        className='cl-themed-card'\n      >\n        <List className='cl-titled-card-list'>\n          {avatarRow}\n          {emailAddressRow}\n          {usernameRow}\n        </List>\n      </TitledCard>\n    </>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { isRetinaDisplay } from '../../utils/isRetinaDisplay';\r\n//@ts-ignore\r\nimport styles from './Avatar.module.scss';\r\n\r\nconst CLERK_IMAGE_URL_REGEX = /https\\:\\/\\/images\\.(lcl)?clerk/i;\r\nconst GRAVATAR_DEFAULT_AVATAR = 'https://www.gravatar.com/avatar?d=mp';\r\n\r\nfunction hasAvatar(profileImageUrl: string | undefined): boolean {\r\n  return CLERK_IMAGE_URL_REGEX.test(profileImageUrl!);\r\n}\r\n\r\nfunction getInitials(\r\n  firstName: string | null | undefined,\r\n  lastName: string | null | undefined,\r\n  name: string | null | undefined,\r\n) {\r\n  return [(firstName || '')[0], (lastName || '')[0]].join('').trim() || (name || '')[0];\r\n}\r\n\r\nfunction getFullName(\r\n  firstName: string | null | undefined,\r\n  lastName: string | null | undefined,\r\n  name: string | null | undefined,\r\n) {\r\n  return name || [firstName, lastName].join(' ').trim() || '';\r\n}\r\n\r\nexport type AvatarProps = {\r\n  firstName?: string | null;\r\n  lastName?: string | null;\r\n  profileImageUrl?: string;\r\n  profileImageFetchSize?: number;\r\n  name?: string | null;\r\n  size?: number;\r\n  className?: string;\r\n  optimize?: boolean;\r\n};\r\n\r\nexport function Avatar({\r\n  size = 24,\r\n  className,\r\n  firstName,\r\n  lastName,\r\n  profileImageFetchSize = 64,\r\n  profileImageUrl,\r\n  name,\r\n  optimize = false,\r\n}: AvatarProps): JSX.Element {\r\n  const [error, setError] = React.useState(false);\r\n  const initials = getInitials(firstName, lastName, name);\r\n  const fullName = getFullName(firstName, lastName, name);\r\n  const avatarExists = hasAvatar(profileImageUrl);\r\n\r\n  if (initials && (!avatarExists || error)) {\r\n    return (\r\n      <InitialsAvatarFallback\r\n        initials={initials}\r\n        className={className}\r\n        fullName={fullName}\r\n        size={size}\r\n      />\r\n    );\r\n  }\r\n\r\n  let src;\r\n\r\n  if (avatarExists) {\r\n    if (optimize) {\r\n      const srcUrl = new URL(profileImageUrl!);\r\n      const optimizedHeight = Math.max(profileImageFetchSize, size) * (isRetinaDisplay() ? 2 : 1);\r\n      srcUrl.searchParams.append('height', optimizedHeight.toString());\r\n      src = srcUrl.toString();\r\n    } else {\r\n      src = profileImageUrl;\r\n    }\r\n  } else {\r\n    src = GRAVATAR_DEFAULT_AVATAR;\r\n  }\r\n\r\n  return (\r\n    <img\r\n      alt={fullName}\r\n      title={fullName}\r\n      src={src}\r\n      className={cn(styles.avatar, className)}\r\n      width={size}\r\n      height={size}\r\n      onError={() => setError(true)}\r\n    />\r\n  );\r\n}\r\n\r\ninterface InitialsAvatarFallbackProps {\r\n  className?: string;\r\n  size?: number;\r\n  fullName: string;\r\n  initials: string;\r\n}\r\n\r\nfunction InitialsAvatarFallback({ className, size, fullName, initials }: InitialsAvatarFallbackProps) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      version='1.1'\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      viewBox='0, 0, 100, 100'\r\n      style={{ width: size, height: size }}\r\n      aria-label={fullName}\r\n    >\r\n      <title>{fullName}</title>\r\n      <circle\r\n        cx='50'\r\n        cy='50'\r\n        r='49'\r\n        fill='currentColor'\r\n        strokeWidth='0'\r\n      />\r\n      <text\r\n        x='50'\r\n        y='71.5'\r\n        fontFamily='inherit'\r\n        fontSize='60'\r\n        fontWeight='400'\r\n        textAnchor='middle'\r\n        fill='#ffffff'\r\n      >\r\n        {initials}\r\n      </text>\r\n    </svg>\r\n  );\r\n}\r\n", "export function isRetinaDisplay(): boolean {\r\n  if (!window.matchMedia) {\r\n    return false;\r\n  }\r\n  const mq = window.matchMedia(\r\n    'only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)',\r\n  );\r\n  return (mq && mq.matches) || window.devicePixelRatio > 1;\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { ArrowRightIcon } from '../../assets/icons';\r\n// @ts-ignore\r\nimport styles from './List.module.scss';\r\n\r\nexport type ListProps = React.PropsWithChildren<{\r\n  className?: string;\r\n}>;\r\n\r\nexport const List: React.FC<ListProps> & { Item: React.FC<ListItemProps> } & {\r\n  EmptyPlaceholder: React.FC;\r\n} = ({ className, children, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={className}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type ListItemProps = {\r\n  itemTitle?: React.ReactNode;\r\n  detail?: boolean;\r\n  detailIcon?: JSX.Element | null;\r\n  hoverable?: boolean;\r\n  disabled?: boolean;\r\n  lines?: boolean;\r\n  onClick?: () => void;\r\n  className?: string;\r\n};\r\n\r\nconst Item: React.FC<ListItemProps> = ({\r\n  detail = true,\r\n  hoverable = true,\r\n  lines = true,\r\n  itemTitle,\r\n  disabled = false,\r\n  detailIcon,\r\n  children,\r\n  className,\r\n  ...rest\r\n}) => {\r\n  const isButton = hoverable;\r\n  const Element = isButton ? 'button' : 'div';\r\n  const [startSlot, endSlot] = React.Children.toArray(children);\r\n\r\n  return (\r\n    <Element\r\n      {...rest}\r\n      disabled={disabled}\r\n      className={cn(className, styles.elementContainer, {\r\n        [styles.button]: isButton,\r\n        [styles.hoverable]: hoverable,\r\n        [styles.disabled]: disabled,\r\n      })}\r\n    >\r\n      {itemTitle && <div className={styles.title}>{itemTitle}</div>}\r\n\r\n      <div\r\n        className={cn(styles.listItem, {\r\n          [styles.line]: lines,\r\n        })}\r\n      >\r\n        {startSlot && <div className={styles.start}>{startSlot}</div>}\r\n        {endSlot && <div className={styles.end}>{endSlot}</div>}\r\n        <div className={styles.iconContainer}>\r\n          {detail &&\r\n            (detailIcon ? <div className={styles.icon}>{detailIcon}</div> : <ArrowRightIcon className={styles.icon} />)}\r\n        </div>\r\n      </div>\r\n    </Element>\r\n  );\r\n};\r\n\r\nList.Item = Item;\r\n\r\nconst EmptyPlaceholder: React.FC = ({ children }) => {\r\n  return <div className={styles.empty}>{children || 'None'}</div>;\r\n};\r\n\r\nList.EmptyPlaceholder = EmptyPlaceholder;\r\n", "// @ts-nocheck\r\n/**\r\n * TypeScript configuration (typings) is not correctly configured for all projects.\r\n * Consequently, the files are correctly imported but the TS checker emits errors.\r\n * The above no-check is safe, as webpack will not allow compilation if for example a file is not resolved.\r\n */\r\nexport { default as ArrowLeftIcon } from './arrow-left.svg';\r\nexport { default as ArrowRightIcon } from './arrow-right.svg';\r\nexport { default as BinIcon } from './bin.svg';\r\nexport { default as CameraIcon } from './camera.svg';\r\nexport { default as CaretIcon } from './caret.svg';\r\nexport { default as CheckCircleIcon } from './check-circle.svg';\r\nexport { default as CheckmarkIcon } from './checkmark.svg';\r\nexport { default as CogIcon } from './cog.svg';\r\nexport { default as CornerDownRightIcon } from './corner-down-right.svg';\r\nexport { default as DesktopIcon } from './desktop.svg';\r\nexport { default as DropletIcon } from './droplet.svg';\r\nexport { default as ExclamationTriangle } from './exclamation-triangle.svg';\r\nexport { default as ImageDefaultIcon } from './image-default.svg';\r\nexport { default as LoaderIcon } from './loader.svg';\r\nexport { default as LogoMarkIcon } from './logo-mark.svg';\r\nexport { default as MailIcon } from './mail.svg';\r\nexport { default as MailOpen } from './mail-open.svg';\r\nexport { default as MobileIcon } from './mobile.svg';\r\nexport { default as MoreVerticalIcon } from './more-vertical.svg';\r\nexport { default as PhoneIcon } from './phone.svg';\r\nexport { default as ServerIcon } from './server.svg';\r\nexport { default as ShieldIcon } from './shield.svg';\r\nexport { default as SignOutIcon } from './sign-out.svg';\r\nexport { default as SwitchArrows } from './switch-arrows.svg';\r\nexport { default as TickShield } from './tick-shield.svg';\r\nexport { default as UploadIcon } from './upload.svg';\r\nexport { default as UserIcon } from './user.svg';\r\nexport { default as UserPlusIcon } from './user-plus.svg';\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { Card } from '../card';\r\n// @ts-ignore\r\nimport styles from './TitledCard.module.scss';\r\n\r\nexport type CardTitleProps = {\r\n  title?: React.ReactNode;\r\n  subtitle?: React.ReactNode;\r\n  notice?: React.ReactNode;\r\n  subtitleClassName?: string;\r\n  noticeClassName?: string;\r\n  className?: string;\r\n};\r\n\r\nexport type TitledCardProps = CardTitleProps & {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function CardTitle({\r\n  title,\r\n  subtitle,\r\n  notice,\r\n  subtitleClassName,\r\n  noticeClassName,\r\n  className,\r\n}: CardTitleProps): JSX.Element | null {\r\n  if (!title && !subtitle && !notice) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={cn(styles.titleContainer, className)}>\r\n      {title && <h1 className={styles.title}>{title}</h1>}\r\n      {subtitle && <p className={cn(styles.subtitle, subtitleClassName)}>{subtitle}</p>}\r\n      {notice && <p className={cn(styles.notice, noticeClassName)}>{notice}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TitledCard({ children, className, ...titleProps }: TitledCardProps): JSX.Element {\r\n  return (\r\n    <Card className={cn(styles.card, className)}>\r\n      <CardTitle {...titleProps} />\r\n      {children}\r\n    </Card>\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n// @ts-ignore\r\nimport styles from './Card.module.scss';\r\n\r\nexport type CardProps = {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const Card: React.FC<CardProps> = ({ children, className }: CardProps) => {\r\n  return <div className={cn(styles.card, className)}>{children}</div>;\r\n};\r\n", "import type { Web3Provider } from '@clerk/types';\n\nconst FirstFactorConfigs = Object.freeze({\n  email_address: {\n    label: 'Email address',\n    fieldType: 'email',\n  },\n  phone_number: {\n    label: 'Phone number',\n    fieldType: 'tel',\n  },\n  username: {\n    label: 'Username',\n    fieldType: 'text',\n  },\n  email_address_phone_number: {\n    label: 'Email or phone',\n    fieldType: 'text',\n  },\n  email_address_username: {\n    label: 'Email or username',\n    fieldType: 'text',\n  },\n  phone_number_username: {\n    label: 'Phone number or username',\n    fieldType: 'text',\n  },\n  email_address_phone_number_username: {\n    label: 'Email, phone, or username',\n    fieldType: 'text',\n  },\n  default: {\n    label: '',\n    fieldType: 'text',\n  },\n} as Record<string, { label: string; fieldType: string }>);\n\nexport const getIdentifierControlDisplayValues = (attributes: string[]) => {\n  const indexKey = attributes.length == 0 ? null : [...attributes].sort().join('_');\n  return FirstFactorConfigs[indexKey || 'default'];\n};\n\nexport const PREFERRED_SIGN_IN_STRATEGIES = Object.freeze({\n  Password: 'password',\n  OTP: 'otp',\n});\n\ninterface Web3ProviderData {\n  id: string;\n  name: string;\n}\n\ntype Web3Providers = {\n  [key in Web3Provider]: Web3ProviderData;\n};\n\nexport const WEB3_PROVIDERS: Web3Providers = Object.freeze({\n  metamask: {\n    id: 'metamask',\n    name: 'Metamask',\n  },\n});\n\nexport function getWeb3ProviderData(name: Web3Provider): Web3ProviderData | undefined | null {\n  return WEB3_PROVIDERS[name];\n}\n\nexport function svgUrl(id: string): string {\n  return `https://images.clerk.dev/static/${id}.svg`;\n}\n\nexport const ERROR_CODES = {\n  FORM_IDENTIFIER_NOT_FOUND: 'form_identifier_not_found',\n  FORM_PASSWORD_INCORRECT: 'form_password_incorrect',\n  INVALID_STRATEGY_FOR_USER: 'strategy_for_user_invalid',\n  NOT_ALLOWED_TO_SIGN_UP: 'not_allowed_to_sign_up',\n  OAUTH_ACCESS_DENIED: 'oauth_access_denied',\n};\n", "export * from './CoreClerkContext';\nexport { useCoreUser, withCoreUserGuard } from './CoreUserContext';\nexport * from './ClerkUIComponentsContext';\nexport * from './EnvironmentContext';\nexport * from './OptionsContext';\nexport { useCoreSession, withCoreSessionSwitchGuard } from './CoreSessionContext';\nexport { useCoreSessionList, useCoreSignIn, useCoreSignUp } from './CoreClientContext';\n", "import type { LoadedClerk } from '@clerk/types';\nimport React from 'react';\nimport { assertContextExists } from 'ui/contexts/utils';\n\nexport type CoreClerkProps = LoadedClerk;\n\nexport const CoreClerkContext = React.createContext<LoadedClerk | undefined>(undefined);\nCoreClerkContext.displayName = 'CoreClerkContext';\n\nexport function useCoreClerk(): CoreClerkProps {\n  const context = React.useContext(CoreClerkContext);\n  assertContextExists(context, 'CoreClerkContextProvider');\n  return context;\n}\n", "import { Clerk } from '@clerk/types';\nimport { clerkCoreErrorContextProviderNotFound, clerkCoreErrorNoClerkSingleton } from 'core/errors';\n\nexport function assertClerkSingletonExists(clerk: Clerk | undefined): asserts clerk is Clerk {\n  if (!clerk) {\n    clerkCoreErrorNoClerkSingleton();\n  }\n}\n\nexport function assertContextExists(contextVal: unknown, providerName: string): asserts contextVal {\n  if (!contextVal) {\n    clerkCoreErrorContextProviderNotFound(providerName);\n  }\n}\n", "export function clerkNetworkError(url: string, e: Error): never {\n  throw new Error(`ClerkJS: Network error at \"${url}\" - ${e}. Please try again or contact support@clerk.dev`);\n}\n\nexport function clerkErrorInitFailed(): never {\n  throw new Error('ClerkJS: Something went wrong initializing Clerk. Please contact support@clerk.dev');\n}\n\nexport function clerkErrorDevInitFailed(msg?: string): never {\n  throw new Error(\n    `ClerkJS: Something went wrong initializing Clerk in development mode${\n      msg && ` - ${msg}`\n    }. Please contact support@clerk.dev`,\n  );\n}\n\nexport function clerkErrorPathRouterMissingPath(componentName: string): never {\n  throw new Error(\n    `ClerkJS: Missing \"path\" option.  The ${componentName} component was mounted with \"path\" routing but no \"path\" attribute was passed.`,\n  );\n}\n\nexport function clerkErrorNoFrontendApi(): never {\n  throw new Error('ClerkJS: Missing frontendAPI option.');\n}\n\nexport function clerkErrorInvalidFrontendApi(): never {\n  throw new Error(\n    'ClerkJS: Invalid frontendAPI option. Go to the instance home page at https://dashboard.clerk.dev and get your Frontend API value.',\n  );\n}\n\nexport function clerkErrorInvalidColor(name: string): never {\n  throw new Error(`ClerkJS: You're using an invalid ${name} color. Change the ${name} color from the dashboard.`);\n}\n\nexport function clerkCoreErrorContextProviderNotFound(providerName: string): never {\n  throw new Error(`ClerkJS: You must wrap your application in a <${providerName}> component.`);\n}\n\nexport function clerkCoreErrorUserIsNotDefined(): never {\n  throw new Error('ClerkJS: User is undefined. Try wrapping your component with `withUserGuard`');\n}\n\nexport function clerkCoreErrorSessionIsNotDefined(): never {\n  throw new Error('ClerkJS: Session is undefined. Try wrapping your component with `withUserGuard`');\n}\n\nexport function clerkCoreErrorNoClerkSingleton(): never {\n  throw new Error('ClerkJS: Clerk is undefined');\n}\n\nexport function clerkUIErrorDOMElementNotFound(): never {\n  throw new Error('ClerkJS: The target element is empty. Provide a valid DOM element.');\n}\n\nexport function clerkMissingFapiClientInResources(): never {\n  throw new Error('ClerkJS: Missing FAPI client in resources.');\n}\n\nexport function clerkCoreErrorExpiredToken(expiresAt: number): never {\n  throw new Error(`ClerkJS: Token has expired (exp='${expiresAt}').`);\n}\n\nexport function clerkCoreErrorTokenRefreshFailed(message: string): never {\n  throw new Error(`ClerkJS: Token refresh failed (error='${message}')`);\n}\n\nexport function clerkOAuthCallbackDidNotCompleteSignInSIgnUp(type: 'sign in' | 'sign up'): never {\n  throw new Error(`ClerkJS: Something went wrong initializing Clerk during the ${type} flow. Please contact support.`);\n}\n\nexport function clerkVerifyEmailAddressCalledBeforeCreate(type: 'SignIn' | 'SignUp'): never {\n  throw new Error(`ClerkJS: You need to start a ${type} flow by calling ${type}.create() first.`);\n}\n\nexport function clerkInvalidStrategy(functionaName: string, strategy: string): never {\n  throw new Error(`ClerkJS: Strategy \"${strategy}\" is not a valid strategy for ${functionaName}.`);\n}\n\nexport function clerkVerifyWeb3WalletCalledBeforeCreate(type: 'SignIn' | 'SignUp'): never {\n  throw new Error(\n    `ClerkJS: You need to start a ${type} flow by calling ${type}.create({ identifier: 'your web3 wallet address' }) first`,\n  );\n}\n\nexport function clerkMissingOptionError(name = ''): never {\n  throw new Error(`ClerkJS: Missing '${name}' option`);\n}\n", "import { UserResource } from '@clerk/types';\nimport { clerkCoreErrorUserIsNotDefined } from 'core/errors';\nimport * as React from 'react';\nimport { assertContextExists } from 'ui/contexts/utils';\n\ntype CoreUserContextValue = { value: UserResource | undefined | null };\nexport const CoreUserContext = React.createContext<CoreUserContextValue | undefined>(undefined);\nCoreUserContext.displayName = 'CoreUserContext';\n\nexport function useCoreUser(): UserResource {\n  console.log('hello');\n  const context = React.useContext(CoreUserContext);\n  assertContextExists(context, 'CoreUserContextProvider');\n  if (!context.value) {\n    clerkCoreErrorUserIsNotDefined();\n  }\n  return context.value;\n}\n\nexport function withCoreUserGuard<P>(Component: React.ComponentType<P>): React.ComponentType<P> {\n  const Hoc = (props: P) => {\n    const context = React.useContext(CoreUserContext);\n    assertContextExists(context, 'CoreUserContextProvider');\n    const user = context.value;\n    if (!user) {\n      return null;\n    }\n    return <Component {...props} />;\n  };\n\n  const displayName = Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  Hoc.displayName = displayName;\n  return Hoc;\n}\n", "import React from 'react';\nimport { buildAuthQueryString, parseAuthProp } from 'ui/common';\nimport { useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport type { ParsedQs } from 'ui/router';\nimport { useRouter } from 'ui/router';\n\nimport type {\n  AvailableComponentCtx,\n  SignInCtx,\n  SignInProps,\n  SignUpCtx,\n  SignUpProps,\n  UserButtonCtx,\n  UserProfileCtx,\n  UserProfileProps,\n} from '../types';\n\nexport const ComponentContext = React.createContext<AvailableComponentCtx | null>(null);\n\nexport type SignUpContextType = SignUpProps & {\n  navigateAfterSignUp: () => any;\n  queryParams: ParsedQs;\n  signInUrl: string;\n  authQueryString: string | null;\n};\nexport const useSignUpContext = (): SignUpContextType => {\n  const { componentName, ...ctx } = React.useContext(ComponentContext) as SignUpCtx;\n  const { navigate } = useNavigate();\n  const { displayConfig } = useEnvironment();\n  const { queryParams } = useRouter();\n\n  if (componentName !== 'SignUp') {\n    throw new Error('Clerk: useSignUpContext called outside of the mounted SignUp component.');\n  }\n\n  // Retrieve values passed through props or qs\n  // props always take priority over qs\n  const afterSignUpUrl = parseAuthProp({\n    ctx,\n    queryParams,\n    displayConfig,\n    field: 'afterSignUpUrl',\n  });\n\n  const afterSignInUrl = parseAuthProp({\n    ctx,\n    queryParams,\n    displayConfig,\n    field: 'afterSignInUrl',\n  });\n\n  const navigateAfterSignUp = () => navigate(afterSignUpUrl);\n\n  let signInUrl = ctx.signInUrl || displayConfig.signInUrl;\n\n  // Add query strings to the sign in URL\n  const authQs = buildAuthQueryString({\n    afterSignInUrl: afterSignInUrl,\n    afterSignUpUrl: afterSignUpUrl,\n    displayConfig: displayConfig,\n  });\n\n  // Todo: Look for a better way than checking virtual\n  if (authQs && ctx.routing != 'virtual') {\n    signInUrl += `#/?${authQs}`;\n  }\n\n  return {\n    ...ctx,\n    signInUrl,\n    afterSignUpUrl,\n    afterSignInUrl,\n    navigateAfterSignUp,\n    queryParams,\n    authQueryString: authQs,\n  };\n};\n\nexport type SignInContextType = SignInProps & {\n  navigateAfterSignIn: () => any;\n  queryParams: ParsedQs;\n  signUpUrl: string;\n  authQueryString: string | null;\n};\nexport const useSignInContext = (): SignInContextType => {\n  const { componentName, ...ctx } = React.useContext(ComponentContext) as SignInCtx;\n  const { navigate } = useNavigate();\n  const { displayConfig } = useEnvironment();\n  const { queryParams } = useRouter();\n\n  if (componentName !== 'SignIn') {\n    throw new Error('Clerk: useSignInContext called outside of the mounted SignIn component.');\n  }\n\n  // Retrieve values passed through props or qs\n  // props always take priority over qs\n  const afterSignUpUrl = parseAuthProp({\n    ctx,\n    queryParams,\n    displayConfig,\n    field: 'afterSignUpUrl',\n  });\n\n  const afterSignInUrl = parseAuthProp({\n    ctx,\n    queryParams,\n    displayConfig,\n    field: 'afterSignInUrl',\n  });\n\n  const navigateAfterSignIn = () => navigate(afterSignInUrl);\n\n  let signUpUrl = ctx.signUpUrl || displayConfig.signUpUrl;\n\n  // Add query strings to the sign in URL\n  const authQs = buildAuthQueryString({\n    afterSignInUrl: afterSignInUrl,\n    afterSignUpUrl: afterSignUpUrl,\n    displayConfig: displayConfig,\n  });\n  if (authQs && ctx.routing !== 'virtual') {\n    signUpUrl += `#/?${authQs}`;\n  }\n\n  return {\n    ...ctx,\n    signUpUrl,\n    afterSignInUrl,\n    afterSignUpUrl,\n    navigateAfterSignIn,\n    queryParams,\n    authQueryString: authQs,\n  };\n};\n\nexport type UserProfileContextType = UserProfileProps & {\n  queryParams: ParsedQs;\n  authQueryString: string | null;\n};\n\n// UserProfile does not accept any props except for\n// `routing` and `path`\n// TODO: remove if not needed during the components v2 overhaul\nexport const useUserProfileContext = (): UserProfileContextType => {\n  const { componentName, ...ctx } = React.useContext(ComponentContext) as UserProfileCtx;\n  const { queryParams } = useRouter();\n\n  if (componentName !== 'UserProfile') {\n    throw new Error('Clerk: useUserProfileContext called outside of the mounted UserProfile component.');\n  }\n\n  return {\n    ...ctx,\n    queryParams,\n    authQueryString: '',\n  };\n};\n\nexport const useUserButtonContext = () => {\n  const { componentName, ...ctx } = React.useContext(ComponentContext) as UserButtonCtx;\n  const { navigate } = useNavigate();\n  const { displayConfig } = useEnvironment();\n\n  if (componentName !== 'UserButton') {\n    throw new Error('Clerk: useUserButtonContext called outside of the mounted UserButton component.');\n  }\n\n  const signInUrl = ctx.signInUrl || displayConfig.signInUrl;\n  const userProfileUrl = ctx.userProfileUrl || displayConfig.userProfileUrl;\n\n  const afterMultiSessionSingleSignOutUrl = ctx.afterMultiSessionSingleSignOutUrl || displayConfig.afterSignOutOneUrl;\n  const navigateAfterMultiSessionSingleSignOut = () => navigate(afterMultiSessionSingleSignOutUrl);\n\n  const afterSignOutUrl = ctx.afterSignOutUrl || displayConfig.afterSignOutAllUrl;\n  const navigateAfterSignOut = () => navigate(afterSignOutUrl);\n\n  const afterSwitchSessionUrl = (ctx.afterSwitchSessionUrl = displayConfig.afterSwitchSessionUrl);\n  const navigateAfterSwitchSession = () => navigate(afterSwitchSessionUrl);\n\n  return {\n    ...ctx,\n    navigateAfterMultiSessionSingleSignOut,\n    navigateAfterSignOut,\n    navigateAfterSwitchSession,\n    signInUrl,\n    userProfileUrl,\n    afterMultiSessionSingleSignOutUrl,\n    afterSignOutUrl,\n    afterSwitchSessionUrl,\n  };\n};\n", "export * from './authForms';\nexport * from './authPropHelpers';\nexport * from './constants';\nexport * from './disabledStrategies';\nexport * from './errorHandler';\nexport * from './forms';\nexport * from './logo';\nexport * from './magicLinkWaitingScreen';\nexport * from './poweredByClerk';\nexport * from './redirects';\nexport * from './verification';\nexport * from './verifyMagicLink';\nexport * from './withRedirectToHome';\n", "export * from './Body';\nexport * from './ButtonSet';\nexport * from './Footer';\nexport * from './Header';\nexport * from './LoadingScreen';\nexport * from './Separator';\n", "import cn from 'classnames';\nimport React from 'react';\n\nexport type BodyProps = {\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Body: React.FC<BodyProps> = ({ children, className }) => {\n  return <div className={cn('cl-auth-form-body', className)}>{children}</div>;\n};\n", "import { ButtonWithSpinner } from '@clerk/shared/components/button';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\n\ntype Flow = 'sign-in' | 'sign-up';\n\nexport interface ButtonSetOptions {\n  id: string;\n  name: string;\n  strategy: string;\n}\n\nexport type ButtonSetProps<T> = {\n  buttonClassName?: string;\n  className?: string;\n  error?: string;\n  flow: Flow;\n  handleClick: (e: React.MouseEvent, provider: T) => void;\n  options: ButtonSetOptions[];\n};\n\nexport function ButtonSet<T>({\n  buttonClassName,\n  className,\n  error,\n  flow,\n  handleClick,\n  options,\n}: ButtonSetProps<T>): JSX.Element | null {\n  const [isLoading, setIsLoading] = React.useState(() => options.map(() => false));\n  const alreadyLoading = isLoading.some(o => o);\n\n  React.useEffect(() => {\n    if (!alreadyLoading) {\n      return;\n    }\n    setIsLoading(options.map(() => false));\n  }, [alreadyLoading, error, options]);\n\n  const handleOptionClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, i: number) => {\n    handleClick(e, options[i].strategy as unknown as T);\n    setIsLoading(() => {\n      const newState = [...isLoading];\n      newState[i] = true;\n      return newState;\n    });\n  };\n\n  if (options.length <= 0) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      {options.map(({ id, name }, index: number) => {\n        return (\n          <ButtonWithSpinner\n            key={`button-set-${id}-${index}`}\n            isLoading={isLoading[index]}\n            disabled={alreadyLoading}\n            onClick={e => handleOptionClick(e, index)}\n            flavor='outline'\n            className={buttonClassName}\n          >\n            <img\n              alt={name}\n              src={svgUrl(id)}\n            />\n            <span>{getButtonLabel(flow, name)}</span>\n          </ButtonWithSpinner>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction getButtonLabel(flow: Flow, provider: string) {\n  switch (flow) {\n    case 'sign-up':\n      return `Sign up with ${provider}`;\n    case 'sign-in':\n    default:\n      return `Sign in with ${provider}`;\n  }\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n//@ts-ignore\r\nimport styles from './Button.module.scss';\r\n\r\nexport type ButtonProps = {\r\n  ref?: React.Ref<HTMLButtonElement>;\r\n  type?: 'submit' | 'reset' | 'button';\r\n  flavor?: 'solid' | 'text' | 'icon' | 'outline' | 'link';\r\n  buttonColor?: 'primary' | 'warning' | 'success' | 'error';\r\n  buttonSize?: 'small';\r\n  value?: string;\r\n  disabled?: boolean;\r\n  hoverable?: boolean;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  children: React.ReactNode;\r\n} & React.HTMLAttributes<HTMLButtonElement> &\r\n  React.AriaAttributes;\r\n\r\nexport const Button = React.forwardRef(\r\n  (\r\n    {\r\n      value,\r\n      type,\r\n      flavor = 'solid',\r\n      buttonColor = 'primary',\r\n      buttonSize,\r\n      disabled,\r\n      className,\r\n      children,\r\n      style,\r\n      hoverable = false,\r\n      ...rest\r\n    }: ButtonProps,\r\n    ref: React.Ref<HTMLButtonElement>,\r\n  ): JSX.Element => {\r\n    const classNames = [\r\n      styles.button,\r\n      styles[flavor],\r\n      styles[buttonColor],\r\n      { [styles.disabled]: disabled },\r\n      { [styles.hoverable]: hoverable },\r\n      className,\r\n    ];\r\n\r\n    if (buttonSize) {\r\n      classNames.push(styles[buttonSize]);\r\n    }\r\n\r\n    return (\r\n      <button\r\n        {...rest}\r\n        ref={ref}\r\n        type={type}\r\n        value={value}\r\n        disabled={disabled}\r\n        className={cn(classNames)}\r\n        style={style}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  },\r\n);\r\n", "import React from 'react';\r\n\r\nimport { Spinner } from '../spinner';\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport type ButtonWithSpinnerProps = {\r\n  isLoading?: boolean;\r\n  children: React.ReactNode;\r\n  /** Custom loading style properties */\r\n  loadingStyles?: React.CSSProperties;\r\n} & ButtonProps;\r\n\r\nexport function ButtonWithSpinner({\r\n  isLoading,\r\n  children,\r\n  loadingStyles = {},\r\n  ...rest\r\n}: ButtonWithSpinnerProps): JSX.Element {\r\n  const [isSpinning, setIsSpinning] = React.useState(isLoading);\r\n\r\n  React.useEffect(() => {\r\n    if (isLoading) {\r\n      setIsSpinning(true);\r\n    }\r\n    if (!isLoading && isSpinning) {\r\n      const timeout = setTimeout(() => {\r\n        setIsSpinning(false);\r\n      }, 400);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [isLoading, isSpinning]);\r\n\r\n  const [width, setWidth] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n  const buttonRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const buttonStyles: React.CSSProperties =\r\n    isSpinning && width > 0 && height > 0\r\n      ? {\r\n          width: width,\r\n          height: height,\r\n          alignItems: 'center',\r\n          ...loadingStyles,\r\n        }\r\n      : {};\r\n\r\n  React.useEffect(() => {\r\n    if (buttonRef.current) {\r\n      const { width, height } = buttonRef.current.getBoundingClientRect();\r\n      setWidth(width);\r\n      setHeight(height);\r\n    }\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <Button\r\n      ref={buttonRef}\r\n      style={{ display: 'flex', ...buttonStyles }}\r\n      disabled={isLoading}\r\n      {...rest}\r\n    >\r\n      {isSpinning ? <Spinner /> : children}\r\n    </Button>\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n// @ts-ignore\r\nimport styles from './Spinner.module.scss';\r\n\r\nexport type SpinnerProps = {\r\n  inverted?: boolean;\r\n  className?: string;\r\n};\r\n\r\nexport function Spinner({ inverted, className }: SpinnerProps): JSX.Element {\r\n  return <div className={cn(styles.spinner, className, { [styles.inverted]: inverted })} />;\r\n}\r\n", "import React from 'react';\r\n\r\nimport { Button, ButtonProps } from './Button';\r\n\r\nexport type ButtonWithTimerProps = {\r\n  throttleTimeInMs: number;\r\n  startingState?: 'enabled' | 'disabled';\r\n} & ButtonProps;\r\n\r\nexport function ButtonWithTimer({\r\n  throttleTimeInMs,\r\n  startingState = 'enabled',\r\n  onClick,\r\n  children,\r\n  ...rest\r\n}: ButtonWithTimerProps): JSX.Element {\r\n  const [isDisabled, setIsDisabled] = React.useState(startingState === 'disabled');\r\n\r\n  React.useEffect(() => {\r\n    if (startingState === 'disabled') {\r\n      disableAndToggleAfterDelay();\r\n    }\r\n  }, []);\r\n\r\n  const throttledClickHandler: React.MouseEventHandler<HTMLButtonElement> = (...args) => {\r\n    disableAndToggleAfterDelay();\r\n    onClick?.(...args);\r\n  };\r\n\r\n  const disableAndToggleAfterDelay = () => {\r\n    setIsDisabled(true);\r\n    setTimeout(() => setIsDisabled(false), throttleTimeInMs);\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      disabled={isDisabled}\r\n      onClick={throttledClickHandler}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n}\r\n", "import React from 'react';\n\nexport type FooterProps = {\n  children: React.ReactNode;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport const Footer: React.FC<FooterProps> = ({ children }) => {\n  return <div className='cl-auth-form-footer'>{children}</div>;\n};\n", "import { Label } from '@clerk/shared/components/label';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Logo } from 'ui/common';\nimport { BackButton } from 'ui/common/backButton';\nimport { Error } from 'ui/common/error';\n\nexport type HeaderProps = {\n  showBack?: boolean;\n  showLogo?: boolean;\n  handleBack?: () => void;\n  welcomeName?: string;\n  error?: string;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport function Header({\n  showBack,\n  showLogo = true,\n  welcomeName,\n  error,\n  handleBack,\n  className,\n}: HeaderProps): JSX.Element {\n  const errorStyle = showBack ? {} : { marginTop: '-4em' };\n  const containerStyle = showLogo || welcomeName ? {} : { marginBottom: '0' };\n\n  return (\n    <div\n      className={cn('cl-auth-form-header', className)}\n      style={containerStyle}\n    >\n      {showBack && (\n        <BackButton\n          className='cl-back-button-absolute'\n          to='../'\n          handleClick={handleBack}\n        />\n      )}\n      {error && <Error style={errorStyle}>{error}</Error>}\n      {showLogo && (\n        <div className='cl-auth-form-header-logo'>\n          <Logo />\n        </div>\n      )}\n      {welcomeName && (\n        <div className='cl-auth-form-header-greeting'>\n          <Label>Welcome, {welcomeName}</Label>\n        </div>\n      )}\n    </div>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n// @ts-ignore\r\nimport styles from './Label.module.scss';\r\n\r\nexport type LabelProps = {\r\n  text?: string;\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n} & React.LabelHTMLAttributes<HTMLLabelElement> &\r\n  React.AriaAttributes;\r\n\r\nexport const Label: React.FC<LabelProps> = ({ text, className, children, htmlFor, ...rest }: LabelProps) => {\r\n  if (!text && !children) {\r\n    return null;\r\n  }\r\n  return (\r\n    <label\r\n      htmlFor={htmlFor}\r\n      className={cn(styles.label, className)}\r\n      {...rest}\r\n    >\r\n      {text || children}\r\n    </label>\r\n  );\r\n};\r\n", "export * from './BackButton';\n", "// @ts-ignore\nimport { default as ArrowLeftIcon } from '@clerk/shared/assets/icons/arrow-left.svg';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Icon } from 'ui/common/icon';\nimport { Link } from 'ui/router';\n\nexport type BackButtonProps = {\n  to?: string;\n  className?: string;\n  handleClick?: () => void;\n};\n\nexport function BackButton({ to = '../', className, handleClick }: BackButtonProps): JSX.Element {\n  const wrappedHandleClick = handleClick\n    ? (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.preventDefault();\n        handleClick();\n      }\n    : undefined;\n\n  return (\n    <Link\n      aria-label='Back Button'\n      className={cn('cl-back-button', className)}\n      to={to}\n      onClick={wrappedHandleClick}\n    >\n      <Icon>\n        <ArrowLeftIcon />\n      </Icon>\n    </Link>\n  );\n}\n", "import cn from 'classnames';\nimport React from 'react';\n\ninterface IconProps {\n  children: React.ReactElement;\n  className?: string;\n}\n\nexport const Icon = ({ children, className }: IconProps): JSX.Element => {\n  return React.cloneElement(children, {\n    className: cn('cl-icon', className),\n  });\n};\n", "import { Link as RemixLink, useMatches, useNavigate } from \"remix\";\r\n\r\nexport type LinkProps = React.PropsWithChildren<{\r\n  to: string;\r\n  toIndex?: boolean;\r\n  className?: string;\r\n  activeClassName?: string;\r\n  iconSvg?: JSX.Element;\r\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>;\r\n}> &\r\n  React.AriaAttributes;\r\n\r\nexport function Link({\r\n  children,\r\n  to,\r\n  toIndex,\r\n  className,\r\n  activeClassName,\r\n  iconSvg,\r\n  onClick,\r\n  ...rest\r\n}: LinkProps): JSX.Element {\r\n  if (!to && !toIndex) {\r\n    throw new Error(\"Link requires either to or toIndex props.\");\r\n  }\r\n\r\n  const matches = useMatches();\r\n  let composedClassName = className ? className : \"\";\r\n\r\n  if (activeClassName && matches.some((m) => m.pathname === to)) {\r\n    composedClassName += \" \" + activeClassName;\r\n  }\r\n\r\n  return (\r\n    <RemixLink {...rest} className={composedClassName} to={to}>\r\n      {iconSvg && <img src={iconSvg.type} />}\r\n      {children}\r\n    </RemixLink>\r\n  );\r\n}\r\n\r\nexport function useRouter() {\r\n  const navigate = useNavigate();\r\n  return { navigate };\r\n}\r\n", "export * from './Error';\n", "import React from 'react';\n\nexport type ErrorProps = {\n  children: React.ReactNode;\n  style?: {};\n} & React.HTMLAttributes<HTMLDivElement>;\n\n// Renders global errors across components, will be replaced by notification snackbars.\nexport const Error: React.FC<ErrorProps> = ({ children, style }) => {\n  if (!children) {\n    return null;\n  }\n  return (\n    <div\n      className='cl-error'\n      style={style}\n    >\n      {children}\n    </div>\n  );\n};\n", "import { Spinner } from '@clerk/shared/components/spinner';\nimport React from 'react';\nimport { Body, Header } from 'ui/common/authForms';\n\ntype LoadingScreenProps = {\n  showHeader?: boolean;\n};\n\nexport function LoadingScreen({ showHeader = true }: LoadingScreenProps): JSX.Element {\n  return (\n    <>\n      {showHeader && <Header showBack />}\n      <Body>\n        <div className='cl-auth-form-spinner'>\n          <Spinner />\n        </div>\n      </Body>\n    </>\n  );\n}\n", "import React from 'react';\n\nexport function Separator(): JSX.Element {\n  return <div className='cl-auth-form-separator' />;\n}\n", "import { camelToSnake } from '@clerk/shared/utils';\nimport type { DisplayConfigResource } from '@clerk/types';\nimport type { ParsedQs } from 'qs';\nimport qs from 'qs';\nimport type { SignInCtx, SignUpCtx } from 'ui/types';\n\ntype ParseAuthPropArgs =\n  | {\n      ctx: Omit<SignUpCtx, 'componentName'>;\n      queryParams: ParsedQs;\n      displayConfig: DisplayConfigResource;\n      field: keyof Pick<SignUpCtx, 'afterSignUpUrl' | 'afterSignInUrl'>;\n    }\n  | {\n      ctx: Omit<SignInCtx, 'componentName'>;\n      queryParams: ParsedQs;\n      displayConfig: DisplayConfigResource;\n      field: keyof Pick<SignUpCtx, 'afterSignUpUrl' | 'afterSignInUrl'>;\n    };\n\nexport const parseAuthProp = ({ ctx, queryParams, displayConfig, field }: ParseAuthPropArgs): string => {\n  const snakeCaseField = camelToSnake(field);\n  const queryParamValue = queryParams[snakeCaseField];\n\n  return (\n    (typeof queryParamValue === 'string' ? queryParamValue : null) ||\n    (typeof queryParams.redirect_url === 'string' ? queryParams.redirect_url : null) ||\n    ctx[field] ||\n    ctx.redirectUrl ||\n    displayConfig[field]\n  );\n};\n\ninterface BuildAuthQueryStringArgs {\n  afterSignInUrl?: string;\n  afterSignUpUrl?: string;\n  displayConfig: DisplayConfigResource;\n}\n\nexport const buildAuthQueryString = (data: BuildAuthQueryStringArgs): string | null => {\n  const parseValue = (field: keyof Omit<BuildAuthQueryStringArgs, 'displayConfig'>) => {\n    const passed = data[field];\n    if (!passed) {\n      return undefined;\n    }\n\n    // We don't need to modify the query string at all\n    // if the URL matches displayConfig\n    if (passed === data.displayConfig[field]) {\n      return undefined;\n    }\n\n    // Convert relative urls to absolute ones\n    // Needed because auth modals the hosted pages sso-callback,\n    // so an absolute redirectUrl is necessary\n    if (passed.startsWith('/')) {\n      return window.location.origin + passed;\n    }\n\n    return passed;\n  };\n\n  const parsedAfterSignInUrl = parseValue('afterSignInUrl');\n  const parsedAfterSignUpUrl = parseValue('afterSignUpUrl');\n\n  // Build the query string\n  const query: Record<string, string> = {};\n  if (parsedAfterSignInUrl && parsedAfterSignInUrl === parsedAfterSignUpUrl) {\n    query.redirect_url = parsedAfterSignInUrl;\n  } else {\n    if (parsedAfterSignUpUrl) {\n      query.after_sign_up_url = parsedAfterSignUpUrl;\n    }\n    if (parsedAfterSignInUrl) {\n      query.after_sign_in_url = parsedAfterSignInUrl;\n    }\n  }\n  return Object.keys(query).length === 0 ? null : qs.stringify(query);\n};\n", "import Cookies, { CookieAttributes } from 'js-cookie';\r\n\r\ntype LocationAttributes = {\r\n  path?: string;\r\n  domain?: string;\r\n};\r\n\r\nexport function createCookieHandler(cookieName: string) {\r\n  return {\r\n    get() {\r\n      return Cookies.get(cookieName);\r\n    },\r\n    /**\r\n     * Setting a cookie will use some defaults such as path being set to \"/\".\r\n     */\r\n    set(newValue: string, options: CookieAttributes = {}) {\r\n      return Cookies.set(cookieName, newValue, options);\r\n    },\r\n    /**\r\n     * On removing a cookie, you have to pass the exact same path/domain attributes used to set it initially\r\n     * @see https://github.com/js-cookie/js-cookie#basic-usage\r\n     */\r\n    remove(locationAttributes?: LocationAttributes) {\r\n      Cookies.remove(cookieName, locationAttributes);\r\n    },\r\n  };\r\n}\r\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-empty-function */\r\nexport const noop = (..._args: any[]): void => {};\r\n", "import { camelToSnake, snakeToCamel } from './string';\r\n\r\nconst createDeepObjectTransformer = (transform: any) => {\r\n  const deepTransform = (obj: any): any => {\r\n    if (!obj) {\r\n      return obj;\r\n    }\r\n\r\n    if (Array.isArray(obj)) {\r\n      return obj.map(el => {\r\n        if (typeof el === 'object' || Array.isArray(el)) {\r\n          return deepTransform(el);\r\n        }\r\n        return el;\r\n      });\r\n    }\r\n\r\n    const copy = { ...obj };\r\n    const keys = Object.keys(copy) as string[];\r\n    for (const oldName of keys) {\r\n      const newName = transform(oldName.toString());\r\n      if (newName !== oldName) {\r\n        copy[newName] = copy[oldName];\r\n        delete copy[oldName];\r\n      }\r\n      if (typeof copy[newName] === 'object') {\r\n        copy[newName] = deepTransform(copy[newName]);\r\n      }\r\n    }\r\n    return copy;\r\n  };\r\n\r\n  return deepTransform;\r\n};\r\n\r\n/**\r\n * Transforms camelCased objects/ arrays to snake_cased.\r\n * This function recursively traverses all objects and arrays of the passed value\r\n * camelCased keys are removed.\r\n */\r\nexport const deepCamelToSnake = createDeepObjectTransformer(camelToSnake);\r\n\r\n/**\r\n * Transforms snake_cased objects/ arrays to camelCased.\r\n * This function recursively traverses all objects and arrays of the passed value\r\n * camelCased keys are removed.\r\n */\r\nexport const deepSnakeToCamel = createDeepObjectTransformer(snakeToCamel);\r\n", "const IP_V4_ADDRESS_REGEX =\r\n  /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\r\n\r\nexport function isIPV4Address(str: string | undefined | null): boolean {\r\n  return IP_V4_ADDRESS_REGEX.test(str || '');\r\n}\r\n\r\nexport function titleize(str: string | undefined | null): string {\r\n  const s = str || '';\r\n  return s.charAt(0).toUpperCase() + s.slice(1);\r\n}\r\n\r\nexport function snakeToCamel(str: string): string {\r\n  return str.replace(/([-_][a-z])/g, match => match.toUpperCase().replace(/-|_/, ''));\r\n}\r\n\r\nexport function camelToSnake(str: string): string {\r\n  return str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\r\n}\r\n", "import type { SignInContextType, SignUpContextType } from 'ui/contexts';\n\n// Check if the provided strategy is one of the SignUpContext or SignInContext\n// disabled ones.\n// This is only for internal use and shouldn't be exposed as a type.\nexport function shouldDisableStrategy<T extends SignUpContextType | SignInContextType>(\n  ctx: T,\n  strategy: string,\n): boolean {\n  const { disabledStrategies } = ctx as T & { disabledStrategies: string[] };\n  return disabledStrategies && disabledStrategies.includes(strategy);\n}\n", "import { ClerkAPIError } from '@clerk/types';\nimport { isClerkAPIResponseError } from 'core/resources/internal';\n\nimport type { FieldState } from './forms';\n\ninterface ParserErrors {\n  fieldErrors: ClerkAPIError[];\n  globalErrors: ClerkAPIError[];\n}\n\nfunction clearFieldErrors(fieldStates: Array<FieldState<string>>) {\n  fieldStates.forEach(field => {\n    field.setError(undefined);\n  });\n}\n\nfunction setFieldErrors(fieldStates: Array<FieldState<string>>, errors: ClerkAPIError[]) {\n  if (!errors || errors.length < 1) {\n    return;\n  }\n\n  fieldStates.forEach(field => {\n    const error = errors.find(err => err.meta!.paramName === field.name);\n    if (error) {\n      field.setError(error.message);\n    }\n  });\n}\n\nfunction parseErrors(errors: ClerkAPIError[]): ParserErrors {\n  return (errors || []).reduce(\n    (memo, err) => {\n      if (err.meta!.paramName) {\n        memo.fieldErrors.push(err);\n      } else {\n        memo.globalErrors.push(err);\n      }\n      return memo;\n    },\n    {\n      fieldErrors: Array<ClerkAPIError>(0),\n      globalErrors: Array<ClerkAPIError>(0),\n    },\n  );\n}\n\nexport function handleError(\n  err: Error,\n  fieldStates: Array<FieldState<string>>,\n  setGlobalError?: React.Dispatch<React.SetStateAction<string | undefined>>,\n): void {\n  // Throw unknown errors\n  if (!isClerkAPIResponseError(err)) {\n    throw err;\n  }\n\n  // Clear global and field errors\n  if (typeof setGlobalError === 'function') {\n    setGlobalError(undefined);\n  }\n  clearFieldErrors(fieldStates);\n\n  // Group errors to field and global\n  const { fieldErrors, globalErrors } = parseErrors(err.errors);\n\n  // Show field errors if applicable\n  setFieldErrors(fieldStates, fieldErrors);\n\n  // Show only the first global error until we have snack bar stacks if applicable\n  if (typeof setGlobalError === 'function' && globalErrors[0]) {\n    setGlobalError(globalErrors[0].longMessage || globalErrors[0].message);\n  }\n}\n\n// Returns the first global API error or undefined if none exists.\nexport function getGlobalError(err: Error): ClerkAPIError | undefined {\n  if (!isClerkAPIResponseError(err)) {\n    return;\n  }\n  const { globalErrors } = parseErrors(err.errors);\n  if (!globalErrors.length) {\n    return;\n  }\n  return globalErrors[0];\n}\n\nexport function getClerkAPIErrorMessage(err: ClerkAPIError): string {\n  return err.longMessage || err.message;\n}\n", "export type { default as Clerk } from '../clerk';\nexport * from './Base';\nexport * from './UserSettings';\nexport * from './AuthConfig';\nexport * from './Client';\nexport * from './DisplayConfig';\nexport * from './EmailAddress';\nexport * from './Environment';\nexport * from './Error';\nexport * from './ExternalAccount';\nexport * from './IdentificationLink';\nexport * from './Image';\nexport * from './PhoneNumber';\nexport * from './Organization';\nexport * from './OrganizationInvitation';\nexport * from './OrganizationMembership';\nexport * from './Session';\nexport * from './SessionWithActivities';\nexport * from './SignIn';\nexport * from './SignUp';\nexport * from './Token';\nexport * from './User';\nexport * from './Verification';\nexport * from './Web3Wallet';\n", "import type { ClerkAPIErrorJSON, ClerkResourceJSON } from '@clerk/types';\nimport type { FapiClient, FapiRequestInit, FapiResponseJSON, HTTPMethod } from 'core/fapiClient';\n\nimport { clerkMissingFapiClientInResources } from '../errors';\nimport type { Clerk } from './internal';\nimport { ClerkAPIResponseError, Client } from './internal';\n\nexport type BaseFetchOptions = { forceUpdateClient?: boolean };\n\ninterface BaseMutateParams {\n  action?: string;\n  body?: any;\n  method?: HTTPMethod;\n  path?: string;\n}\n\nexport abstract class BaseResource {\n  static clerk: Clerk;\n  id?: string;\n  pathRoot = '';\n\n  static get fapiClient(): FapiClient {\n    return BaseResource.clerk.getFapiClient();\n  }\n\n  protected static async _fetch<J extends ClerkResourceJSON | null>(\n    requestInit: FapiRequestInit,\n    opts: BaseFetchOptions = {},\n  ): Promise<FapiResponseJSON<J> | null> {\n    if (!BaseResource.fapiClient) {\n      clerkMissingFapiClientInResources();\n    }\n\n    const { payload, status, statusText } = await BaseResource.fapiClient.request<J>(requestInit);\n\n    // TODO: Link to Client payload piggybacking design document\n    if (requestInit.method !== 'GET' || opts.forceUpdateClient) {\n      this._updateClient<J>(payload);\n    }\n\n    if (status >= 200 && status <= 299) {\n      return payload;\n    }\n\n    if (status === 401) {\n      await BaseResource.clerk.handleUnauthenticated();\n    }\n\n    if (status >= 400) {\n      throw new ClerkAPIResponseError(statusText, {\n        data: payload?.errors as ClerkAPIErrorJSON[],\n        status: status,\n      });\n    }\n\n    return null;\n  }\n\n  protected static _updateClient<J>(responseJSON: FapiResponseJSON<J> | null): void {\n    if (!responseJSON) {\n      return;\n    }\n\n    // TODO: Revise Client piggybacking\n    const client = responseJSON.client || responseJSON.meta?.client;\n\n    if (client && BaseResource.clerk) {\n      BaseResource.clerk.updateClient(Client.getInstance().fromJSON(client));\n    }\n  }\n\n  isNew(): boolean {\n    return !this.id;\n  }\n\n  protected path(action?: string): string {\n    const base = this.pathRoot;\n\n    if (this.isNew()) {\n      return base;\n    }\n    const baseWithId = base.replace(/[^/]$/, '$&/') + encodeURIComponent(this.id as string);\n\n    if (!action) {\n      return baseWithId;\n    }\n\n    return baseWithId.replace(/[^/]$/, '$&/') + encodeURIComponent(action);\n  }\n\n  protected abstract fromJSON(data: ClerkResourceJSON | null): this;\n\n  protected async _baseGet<J extends ClerkResourceJSON | null>(opts: BaseFetchOptions = {}): Promise<this> {\n    const json = await BaseResource._fetch<J>(\n      {\n        method: 'GET',\n        path: this.path(),\n      },\n      opts,\n    );\n    return this.fromJSON((json?.response || json) as J);\n  }\n\n  protected async _baseMutate<J extends ClerkResourceJSON | null>({\n    action,\n    body,\n    method = 'POST',\n    path,\n  }: BaseMutateParams): Promise<this> {\n    const json = await BaseResource._fetch<J>({\n      method,\n      path: path || this.path(action),\n      body,\n    });\n    return this.fromJSON((json?.response || json) as J);\n  }\n\n  protected async _basePost<J extends ClerkResourceJSON | null>(params: BaseMutateParams = {}): Promise<this> {\n    return this._baseMutate<J>({ ...params, method: 'POST' });\n  }\n\n  protected async _basePut<J extends ClerkResourceJSON | null>(params: BaseMutateParams = {}): Promise<this> {\n    return this._baseMutate<J>({ ...params, method: 'PUT' });\n  }\n\n  protected async _basePatch<J extends ClerkResourceJSON>(params: BaseMutateParams = {}): Promise<this> {\n    return this._baseMutate<J>({ ...params, method: 'PATCH' });\n  }\n\n  protected async _baseDelete<J extends ClerkResourceJSON | null>(params: BaseMutateParams = {}): Promise<void> {\n    await this._baseMutate<J>({ ...params, method: 'DELETE' });\n  }\n\n  public async reload(): Promise<this> {\n    return this._baseGet({ forceUpdateClient: true });\n  }\n}\n", "import type {\n  Attributes,\n  OAuthProviders,\n  OAuthStrategy,\n  SignInData,\n  SignUpData,\n  UserSettingsJSON,\n  UserSettingsResource,\n  Web3Strategy,\n} from '@clerk/types';\n\nimport { BaseResource } from './internal';\n\n/**\n * @internal\n */\nexport class UserSettings extends BaseResource implements UserSettingsResource {\n  id = undefined;\n  social!: OAuthProviders;\n  attributes!: Attributes;\n  signIn!: SignInData;\n  signUp!: SignUpData;\n\n  socialProviderStrategies: OAuthStrategy[] = [];\n  web3FirstFactors: Web3Strategy[] = [];\n  enabledFirstFactorIdentifiers: Array<keyof UserSettingsResource['attributes']> = [];\n\n  public constructor(data: UserSettingsJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  get instanceIsPasswordBased() {\n    return this.attributes.password.enabled && this.attributes.password.required;\n  }\n\n  protected fromJSON(data: UserSettingsJSON): this {\n    this.social = data.social;\n    this.attributes = data.attributes;\n    this.signIn = data.sign_in;\n    this.signUp = data.sign_up;\n    this.socialProviderStrategies = this.getSocialProviderStrategies(data.social);\n    this.web3FirstFactors = this.getWeb3FirstFactors(data.attributes);\n    this.enabledFirstFactorIdentifiers = this.getEnabledFirstFactorIdentifiers(data.attributes);\n    return this;\n  }\n\n  private getEnabledFirstFactorIdentifiers(attributes: Attributes): Array<keyof UserSettingsResource['attributes']> {\n    if (!attributes) {\n      return [];\n    }\n\n    return Object.entries(attributes)\n      .filter(([name, attr]) => attr.used_for_first_factor && !name.startsWith('web3'))\n      .map(([name]) => name) as Array<keyof UserSettingsResource['attributes']>;\n  }\n\n  private getWeb3FirstFactors(attributes: Attributes): Web3Strategy[] {\n    if (!attributes) {\n      return [];\n    }\n\n    return Object.entries(attributes)\n      .filter(([name, attr]) => attr.used_for_first_factor && name.startsWith('web3'))\n      .map(([, desc]) => desc.first_factors)\n      .flat() as any as Web3Strategy[];\n  }\n\n  private getSocialProviderStrategies(social: OAuthProviders): OAuthStrategy[] {\n    if (!social) {\n      return [];\n    }\n\n    return Object.entries(social)\n      .filter(([, desc]) => desc.enabled)\n      .map(([, desc]) => desc.strategy)\n      .sort();\n  }\n}\n", "import type { AuthConfigJSON, AuthConfigResource } from '@clerk/types';\n\nimport { BaseResource } from './internal';\n\nexport class AuthConfig extends BaseResource implements AuthConfigResource {\n  singleSessionMode!: boolean;\n\n  public constructor(data: AuthConfigJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  protected fromJSON(data: AuthConfigJSON | null): this {\n    this.singleSessionMode = data ? data.single_session_mode : true;\n    return this;\n  }\n}\n", "import type { ActiveSessionResource, ClientJSON, ClientResource, SignInResource, SignUpResource } from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { SessionTokenCache } from '../tokenCache';\nimport { BaseResource, Session, SignIn, SignUp } from './internal';\n\nexport class Client extends BaseResource implements ClientResource {\n  private static instance: Client;\n\n  pathRoot = '/client';\n\n  sessions: Session[] = [];\n  signUp: SignUpResource = new SignUp();\n  signIn: SignInResource = new SignIn();\n  lastActiveSessionId: string | null = null;\n  createdAt: Date | null = null;\n  updatedAt: Date | null = null;\n\n  public static getInstance(): Client {\n    if (!Client.instance) {\n      Client.instance = new Client();\n    }\n    return Client.instance;\n  }\n\n  static isClientResource(resource: unknown): resource is Client {\n    return !!resource && resource instanceof Client;\n  }\n\n  private constructor(data: ClientJSON | null = null) {\n    super();\n    this.fromJSON(data);\n  }\n\n  get signUpAttempt(): SignUpResource {\n    return this.signUp;\n  }\n\n  get signInAttempt(): SignInResource {\n    return this.signIn;\n  }\n\n  get activeSessions(): ActiveSessionResource[] {\n    return this.sessions.filter(s => s.status === 'active') as ActiveSessionResource[];\n  }\n\n  create(): Promise<this> {\n    return this._basePut();\n  }\n\n  fetch(): Promise<this> {\n    return this._baseGet();\n  }\n\n  async destroy(): Promise<void> {\n    // TODO: Make it restful by introducing a DELETE /client/:id endpoint\n    return this._baseDelete({ path: '/client' }).then(() => {\n      SessionTokenCache.clear();\n      this.sessions = [];\n    });\n  }\n\n  fromJSON(data: ClientJSON | null): this {\n    if (data) {\n      this.id = data.id;\n      this.sessions = (data.sessions || []).map(s => new Session(s));\n      this.signUp = new SignUp(data.sign_up);\n      this.signIn = new SignIn(data.sign_in);\n      this.lastActiveSessionId = data.last_active_session_id;\n      this.createdAt = unixEpochToDate(data.created_at);\n      this.updatedAt = unixEpochToDate(data.updated_at);\n    }\n\n    return this;\n  }\n\n  protected path(): string {\n    return this.pathRoot;\n  }\n}\n", "function isValidDate(d: Date | unknown) {\n  return d instanceof Date && !isNaN(d.getTime());\n}\n\nexport function unixEpochToDate(epochInSeconds?: number): Date {\n  const date = new Date(epochInSeconds || new Date());\n  return isValidDate(date) ? date : new Date();\n}\n", "import type { TokenResource } from '@clerk/types';\n\nimport { clerkCoreErrorExpiredToken } from './errors';\n\ninterface TokenCacheKeyJSON {\n  audience?: string;\n  tokenId: string;\n}\n\ninterface TokenCacheEntry extends TokenCacheKeyJSON {\n  tokenResolver: Promise<TokenResource>;\n}\n\ninterface TokenCacheValue {\n  entry: TokenCacheEntry;\n  expiresAt?: number;\n  expiresIn?: number;\n}\n\ninterface TokenCache {\n  set(entry: TokenCacheEntry): void;\n\n  get(cacheKeyJSON: TokenCacheKeyJSON, leeway?: number): TokenCacheEntry | undefined;\n\n  clear(): void;\n\n  size(): number;\n}\n\nconst KEY_PREFIX = 'clerk';\nconst DELIMITER = '::';\nconst LEEWAY = 10;\n\nexport class TokenCacheKey {\n  static fromKey(key: string): TokenCacheKey {\n    const [prefix, tokenId, audience = ''] = key.split(DELIMITER);\n    return new TokenCacheKey(prefix, { audience, tokenId });\n  }\n\n  constructor(public prefix: string, public data: TokenCacheKeyJSON) {\n    this.prefix = prefix;\n    this.data = data;\n  }\n\n  toKey(): string {\n    const { tokenId, audience } = this.data;\n    return [this.prefix, tokenId, audience || ''].join(DELIMITER);\n  }\n}\n\nexport function MemoryTokenCache(prefix = KEY_PREFIX): TokenCache {\n  let cache: Record<string, TokenCacheValue> = {};\n\n  const size = () => {\n    return Object.keys(cache).length;\n  };\n\n  const clear = () => {\n    cache = {};\n  };\n\n  const set = (entry: TokenCacheEntry) => {\n    const cacheKey = new TokenCacheKey(prefix, {\n      audience: entry.audience,\n      tokenId: entry.tokenId,\n    });\n\n    const key = cacheKey.toKey();\n    const value: TokenCacheValue = { entry };\n\n    const deleteKey = () => {\n      if (cache[key] === value) {\n        delete cache[key];\n      }\n    };\n\n    entry.tokenResolver\n      .then(newToken => {\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        const expiresAt = newToken.jwt.claims.exp;\n        const expiresIn = expiresAt - nowSeconds;\n\n        if (expiresIn <= 0) {\n          clerkCoreErrorExpiredToken(expiresAt);\n        }\n\n        // Mutate cached value and set expirations\n        value.expiresAt = expiresAt;\n        value.expiresIn = expiresIn;\n        setTimeout(deleteKey, expiresIn * 1000);\n      })\n      .catch(() => {\n        deleteKey();\n      });\n\n    cache[key] = value;\n  };\n\n  const get = (cacheKeyJSON: TokenCacheKeyJSON, leeway = LEEWAY): TokenCacheEntry | undefined => {\n    const cacheKey = new TokenCacheKey(prefix, cacheKeyJSON);\n    const key = cacheKey.toKey();\n    const value: TokenCacheValue = cache[key];\n\n    if (!value) {\n      return;\n    }\n\n    const nowSeconds = Math.floor(Date.now() / 1000);\n    const willExpireSoon = value.expiresAt && value.expiresAt - leeway < nowSeconds;\n\n    if (willExpireSoon) {\n      delete cache[key];\n      return;\n    }\n\n    return value.entry;\n  };\n\n  return { get, set, clear, size };\n}\n\nexport const SessionTokenCache = MemoryTokenCache();\n", "import type {\n  DisplayConfigJSON,\n  DisplayConfigResource,\n  DisplayThemeJSON,\n  ImageJSON,\n  PreferredSignInStrategy,\n} from '@clerk/types';\n\nimport { BaseResource } from './internal';\n\nexport class DisplayConfig extends BaseResource implements DisplayConfigResource {\n  id!: string;\n  instanceEnvironmentType!: string;\n  applicationName!: string;\n  theme!: DisplayThemeJSON;\n  preferredSignInStrategy!: PreferredSignInStrategy;\n  logoImage!: ImageJSON;\n  faviconImage!: ImageJSON;\n  backendHost!: string;\n  homeUrl!: string;\n  signInUrl!: string;\n  signUpUrl!: string;\n  userProfileUrl!: string;\n  afterSignInUrl!: string;\n  afterSignUpUrl!: string;\n  afterSignOutUrl!: string;\n  afterSignOutOneUrl!: string;\n  afterSignOutAllUrl!: string;\n  afterSwitchSessionUrl!: string;\n  branded!: boolean;\n\n  public constructor(data: DisplayConfigJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  protected fromJSON(data: DisplayConfigJSON): this {\n    this.id = data.id;\n    this.instanceEnvironmentType = data.instance_environment_type;\n    this.applicationName = data.application_name;\n    this.theme = data.theme;\n    this.preferredSignInStrategy = data.preferred_sign_in_strategy;\n    this.logoImage = data.logo_image;\n    this.faviconImage = data.favicon_image;\n    this.backendHost = data.backend_host;\n    this.homeUrl = data.home_url;\n    this.signInUrl = data.sign_in_url;\n    this.signUpUrl = data.sign_up_url;\n    this.userProfileUrl = data.user_profile_url;\n    this.afterSignInUrl = data.after_sign_in_url;\n    this.afterSignUpUrl = data.after_sign_up_url;\n    this.afterSignOutUrl = data.after_sign_out_url;\n    this.afterSignOutOneUrl = data.after_sign_out_one_url;\n    this.afterSignOutAllUrl = data.after_sign_out_all_url;\n    this.afterSwitchSessionUrl = data.after_switch_session_url;\n    this.branded = data.branded;\n    return this;\n  }\n}\n", "import { Poller } from '@clerk/shared/utils/poller';\nimport type {\n  AttemptEmailAddressVerificationParams,\n  CreateMagicLinkFlowReturn,\n  EmailAddressJSON,\n  EmailAddressResource,\n  IdentificationLinkResource,\n  PrepareEmailAddressVerificationParams,\n  StartMagicLinkFlowParams,\n  VerificationResource,\n} from '@clerk/types';\nimport { clerkVerifyEmailAddressCalledBeforeCreate } from 'core/errors';\n\nimport { BaseResource, IdentificationLink, Verification } from './internal';\n\nexport class EmailAddress extends BaseResource implements EmailAddressResource {\n  id!: string;\n  emailAddress = '';\n  linkedTo: IdentificationLinkResource[] = [];\n  verification!: VerificationResource;\n\n  public constructor(data: Partial<EmailAddressJSON>, pathRoot: string);\n  public constructor(data: EmailAddressJSON, pathRoot: string) {\n    super();\n    this.pathRoot = pathRoot;\n    this.fromJSON(data);\n  }\n\n  create(): Promise<this> {\n    return this._basePost({\n      body: { email_address: this.emailAddress },\n    });\n  }\n\n  prepareVerification = (params: PrepareEmailAddressVerificationParams): Promise<this> => {\n    return this._basePost<EmailAddressJSON>({\n      action: 'prepare_verification',\n      body: { ...params },\n    });\n  };\n\n  attemptVerification = (params: AttemptEmailAddressVerificationParams): Promise<this> => {\n    const { code } = params || {};\n    return this._basePost<EmailAddressJSON>({\n      action: 'attempt_verification',\n      body: { code },\n    });\n  };\n\n  createMagicLinkFlow = (): CreateMagicLinkFlowReturn<StartMagicLinkFlowParams, EmailAddressResource> => {\n    const { run, stop } = Poller();\n\n    const startMagicLinkFlow = async ({ redirectUrl }: StartMagicLinkFlowParams): Promise<EmailAddressResource> => {\n      if (!this.id) {\n        clerkVerifyEmailAddressCalledBeforeCreate('SignUp');\n      }\n      await this.prepareVerification({\n        strategy: 'email_link',\n        redirectUrl: redirectUrl,\n      });\n      return new Promise((resolve, reject) => {\n        void run(() => {\n          return this.reload()\n            .then(async res => {\n              if (res.verification.status === 'verified') {\n                stop();\n                resolve(res);\n              }\n            })\n            .catch(err => {\n              stop();\n              reject(err);\n            });\n        });\n      });\n    };\n    return { startMagicLinkFlow, cancelMagicLinkFlow: stop };\n  };\n\n  destroy(): Promise<void> {\n    return this._baseDelete();\n  }\n\n  toString(): string {\n    return this.emailAddress;\n  }\n\n  protected fromJSON(data: EmailAddressJSON): this {\n    this.id = data.id;\n    this.emailAddress = data.email_address;\n    this.verification = new Verification(data.verification);\n    this.linkedTo = (data.linked_to || []).map(link => new IdentificationLink(link));\n    return this;\n  }\n}\n", "export type PollerStop = () => void;\r\nexport type PollerCallback = (stop: PollerStop) => Promise<unknown>;\r\nexport type PollerRun = (cb: PollerCallback) => Promise<void>;\r\n\r\ntype PollerOptions = {\r\n  delayInMs: number;\r\n};\r\n\r\nexport type Poller = {\r\n  run: PollerRun;\r\n  stop: PollerStop;\r\n};\r\n\r\nexport function Poller({ delayInMs }: PollerOptions = { delayInMs: 1000 }): Poller {\r\n  let timerId: number | undefined;\r\n  let stopped = false;\r\n\r\n  const stop: PollerStop = () => {\r\n    clearTimeout(timerId);\r\n    stopped = true;\r\n  };\r\n\r\n  const run: PollerRun = async cb => {\r\n    stopped = false;\r\n    await cb(stop);\r\n    if (stopped) {\r\n      return;\r\n    }\r\n    timerId = setTimeout(() => run(cb), delayInMs) as any as number;\r\n  };\r\n\r\n  return { run, stop };\r\n}\r\n", "import type {\n  AuthConfigResource,\n  DisplayConfigResource,\n  EnvironmentJSON,\n  EnvironmentResource,\n  UserSettingsResource,\n} from '@clerk/types';\n\nimport { AuthConfig, BaseResource, DisplayConfig, UserSettings } from './internal';\n\nexport class Environment extends BaseResource implements EnvironmentResource {\n  private static instance: Environment;\n\n  pathRoot = '/environment';\n  authConfig!: AuthConfigResource;\n  displayConfig!: DisplayConfigResource;\n  userSettings!: UserSettingsResource;\n\n  public static getInstance(): Environment {\n    if (!Environment.instance) {\n      Environment.instance = new Environment();\n    }\n\n    return Environment.instance;\n  }\n\n  private constructor(data: EnvironmentJSON | null = null) {\n    super();\n    this.fromJSON(data);\n  }\n\n  fetch({ touch = false }: { touch: boolean }): Promise<Environment> {\n    if (touch) {\n      return this._basePatch({});\n    }\n    return this._baseGet();\n  }\n\n  isSingleSession = (): boolean => {\n    return this.authConfig.singleSessionMode;\n  };\n\n  isProduction = (): boolean => {\n    return this.displayConfig.instanceEnvironmentType === 'production';\n  };\n\n  onWindowLocationHost = (): boolean => {\n    return this.displayConfig.backendHost === window.location.host;\n  };\n\n  protected fromJSON(data: EnvironmentJSON | null): this {\n    if (data) {\n      this.authConfig = new AuthConfig(data.auth_config);\n      this.displayConfig = new DisplayConfig(data.display_config);\n      this.userSettings = new UserSettings(data.user_settings);\n    }\n    return this;\n  }\n}\n", "import type { ClerkAPIError, ClerkAPIErrorJSON } from '@clerk/types';\n\ninterface ClerkAPIResponseOptions {\n  data: ClerkAPIErrorJSON[];\n  status: number;\n}\n\nexport function isClerkAPIResponseError(object: any): object is ClerkAPIResponseError {\n  return 'clerkError' in object;\n}\n\nexport function parseErrors(data: ClerkAPIErrorJSON[] = []): ClerkAPIError[] {\n  return data.length > 0 ? data.map(parseError) : [];\n}\n\nexport function parseError(error: ClerkAPIErrorJSON): ClerkAPIError {\n  return {\n    code: error.code,\n    message: error.message,\n    longMessage: error.long_message,\n    meta: {\n      paramName: error?.meta?.param_name,\n      sessionId: error?.meta?.session_id,\n    },\n  };\n}\n\nexport class ClerkAPIResponseError extends Error {\n  clerkError: true;\n\n  status: number;\n  message: string;\n\n  errors: ClerkAPIError[];\n\n  constructor(message: string, { data, status }: ClerkAPIResponseOptions) {\n    super(message);\n\n    Object.setPrototypeOf(this, ClerkAPIResponseError.prototype);\n\n    this.status = status;\n    this.message = message;\n    this.clerkError = true;\n    this.errors = parseErrors(data);\n  }\n}\n\nexport class MagicLinkError extends Error {\n  code: string;\n\n  constructor(code: string) {\n    super(code);\n    this.code = code;\n    Object.setPrototypeOf(this, MagicLinkError.prototype);\n  }\n}\n\n// Check if the error is a MagicLinkError.\nexport function isMagicLinkError(err: Error): err is MagicLinkError {\n  return err instanceof MagicLinkError;\n}\n\nexport const MagicLinkErrorCode = {\n  Expired: 'expired',\n  Failed: 'failed',\n};\n", "import { titleize } from '@clerk/shared/utils/string';\nimport type { ExternalAccountJSON, ExternalAccountResource, OAuthProvider, VerificationResource } from '@clerk/types';\nimport { Verification } from 'core/resources/Verification';\n\nimport { BaseResource } from './Base';\n\nexport class ExternalAccount extends BaseResource implements ExternalAccountResource {\n  id!: string;\n  identificationId!: string;\n  provider!: OAuthProvider;\n  providerUserId = '';\n  emailAddress = '';\n  approvedScopes = '';\n  firstName = '';\n  lastName = '';\n  avatarUrl = '';\n  username = '';\n  publicMetadata = {};\n  label = '';\n  verification: VerificationResource | null = null;\n\n  public constructor(data: Partial<ExternalAccountJSON>, pathRoot: string);\n  public constructor(data: ExternalAccountJSON, pathRoot: string) {\n    super();\n    this.pathRoot = pathRoot;\n    this.fromJSON(data);\n  }\n\n  destroy = (): Promise<void> => this._baseDelete();\n\n  protected fromJSON(data: ExternalAccountJSON): this {\n    this.id = data.id;\n    this.identificationId = data.identification_id;\n    this.providerUserId = data.provider_user_id;\n    this.approvedScopes = data.approved_scopes;\n    this.avatarUrl = data.avatar_url;\n    this.emailAddress = data.email_address;\n    this.firstName = data.first_name;\n    this.lastName = data.last_name;\n    // TODO: Send the provider name the `oauth` prefix from FAPI\n    this.provider = (data.provider || '').replace('oauth_', '') as OAuthProvider;\n    this.username = data.username;\n    this.publicMetadata = data.public_metadata;\n    this.label = data.label;\n\n    if (data.verification) {\n      this.verification = new Verification(data.verification);\n    }\n\n    return this;\n  }\n\n  providerSlug(): OAuthProvider {\n    return this.provider;\n  }\n\n  providerTitle(): string {\n    return [titleize(this.providerSlug()), 'Account'].join(' ');\n  }\n}\n", "import type {\n  ClerkAPIError,\n  SignUpVerificationJSON,\n  SignUpVerificationResource,\n  SignUpVerificationsJSON,\n  SignUpVerificationsResource,\n  VerificationJSON,\n  VerificationResource,\n  VerificationStatus,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { BaseResource, parseError } from './internal';\n\nexport class Verification extends BaseResource implements VerificationResource {\n  pathRoot = '';\n\n  status: VerificationStatus | null = null;\n  strategy: string | null = null;\n  nonce: string | null = null;\n  externalVerificationRedirectURL: URL | null = null;\n  attempts: number | null = null;\n  expireAt: Date | null = null;\n  error: ClerkAPIError | null = null;\n  verifiedAtClient: string | null = null;\n\n  constructor(data: VerificationJSON | null) {\n    super();\n    this.fromJSON(data);\n  }\n\n  verifiedFromTheSameClient = (): boolean => {\n    return this.verifiedAtClient === BaseResource.clerk?.client?.id;\n  };\n\n  protected fromJSON(data: VerificationJSON | null): this {\n    if (data) {\n      this.status = data.status;\n      this.verifiedAtClient = data.verified_at_client;\n      this.strategy = data.strategy;\n      this.nonce = data.nonce || null;\n      if (data.external_verification_redirect_url) {\n        this.externalVerificationRedirectURL = new URL(data.external_verification_redirect_url);\n      } else {\n        this.externalVerificationRedirectURL = null;\n      }\n      this.attempts = data.attempts;\n      this.expireAt = unixEpochToDate(data.expire_at);\n      this.error = data.error ? parseError(data.error) : null;\n    }\n    return this;\n  }\n}\n\nexport class SignUpVerifications implements SignUpVerificationsResource {\n  emailAddress: SignUpVerificationResource;\n  phoneNumber: SignUpVerificationResource;\n  web3Wallet: SignUpVerificationResource;\n  externalAccount: VerificationResource;\n\n  constructor(data: SignUpVerificationsJSON | null) {\n    if (data) {\n      this.emailAddress = new SignUpVerification(data.email_address);\n      this.phoneNumber = new SignUpVerification(data.phone_number);\n      this.web3Wallet = new SignUpVerification(data.web3_wallet);\n      this.externalAccount = new Verification(data.external_account);\n    } else {\n      this.emailAddress = new SignUpVerification(null);\n      this.phoneNumber = new SignUpVerification(null);\n      this.web3Wallet = new SignUpVerification(null);\n      this.externalAccount = new Verification(null);\n    }\n  }\n}\n\nexport class SignUpVerification extends Verification {\n  nextAction: string;\n  supportedStrategies: string[];\n\n  constructor(data: SignUpVerificationJSON | null) {\n    super(data);\n    if (data) {\n      this.nextAction = data.next_action;\n      this.supportedStrategies = data.supported_strategies;\n    } else {\n      this.nextAction = '';\n      this.supportedStrategies = [];\n    }\n  }\n}\n", "import type { IdentificationLinkJSON } from '@clerk/types';\n\nexport class IdentificationLink {\n  id: string;\n  type: string;\n\n  constructor(data: IdentificationLinkJSON) {\n    this.id = data.id;\n    this.type = data.type;\n  }\n}\n", "import type { ImageJSON, ImageResource } from '@clerk/types';\n\nimport { BaseResource } from './internal';\n\nexport class Image extends BaseResource implements ImageResource {\n  id?: string;\n  name: string | null = null;\n  publicUrl: string | null = null;\n\n  static async create(path: string, body: any = {}): Promise<ImageResource> {\n    let fd = body;\n\n    if (body['file']) {\n      fd = new FormData();\n      fd.append('file', body['file']);\n    }\n\n    const json = (await BaseResource._fetch<ImageJSON>({\n      path,\n      method: 'POST',\n      body: fd,\n    })) as unknown as ImageJSON;\n\n    return new Image(json);\n  }\n\n  constructor(data: ImageJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  protected fromJSON(data: ImageJSON): this {\n    this.id = data.id;\n    this.name = data.name;\n    this.publicUrl = data.public_url;\n    return this;\n  }\n}\n", "import type {\n  AttemptPhoneNumberVerificationParams,\n  IdentificationLinkResource,\n  PhoneNumberJSON,\n  PhoneNumberResource,\n  SetReservedForSecondFactorParams,\n  VerificationResource,\n} from '@clerk/types';\n\nimport { BaseResource, IdentificationLink, Verification } from './internal';\n\nexport class PhoneNumber extends BaseResource implements PhoneNumberResource {\n  id!: string;\n  phoneNumber = '';\n  reservedForSecondFactor = false;\n  defaultSecondFactor = false;\n  linkedTo: IdentificationLinkResource[] = [];\n  verification!: VerificationResource;\n\n  public constructor(data: Partial<PhoneNumberJSON>, pathRoot: string);\n  public constructor(data: PhoneNumberJSON, pathRoot: string) {\n    super();\n    this.pathRoot = pathRoot;\n    this.fromJSON(data);\n  }\n\n  create = (): Promise<this> =>\n    this._basePost({\n      body: { phone_number: this.phoneNumber },\n    });\n\n  prepareVerification = (): Promise<PhoneNumberResource> => {\n    return this._basePost<PhoneNumberJSON>({\n      action: 'prepare_verification',\n      body: { strategy: 'phone_code' },\n    });\n  };\n\n  attemptVerification = (params: AttemptPhoneNumberVerificationParams): Promise<PhoneNumberResource> => {\n    const { code } = params || {};\n    return this._basePost<PhoneNumberJSON>({\n      action: 'attempt_verification',\n      body: { code },\n    });\n  };\n  setReservedForSecondFactor = (params: SetReservedForSecondFactorParams): Promise<PhoneNumberResource> => {\n    const { reserved } = params || {};\n    return this._basePatch<PhoneNumberJSON>({\n      body: { reserved_for_second_factor: reserved },\n    });\n  };\n\n  makeDefaultSecondFactor = (): Promise<PhoneNumberResource> => {\n    return this._basePatch<PhoneNumberJSON>({\n      body: { default_second_factor: true },\n    });\n  };\n\n  destroy = (): Promise<void> => this._baseDelete();\n\n  toString = (): string => {\n    // Filter only numbers from the input\n    const match = this.phoneNumber.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n\n    if (match) {\n      return '(' + match[1] + ') ' + match[2] + '-' + match[3];\n    }\n\n    return this.phoneNumber;\n  };\n\n  protected fromJSON(data: PhoneNumberJSON): this {\n    this.id = data.id;\n    this.phoneNumber = data.phone_number;\n    this.reservedForSecondFactor = data.reserved_for_second_factor;\n    this.defaultSecondFactor = data.default_second_factor;\n    this.verification = new Verification(data.verification);\n    this.linkedTo = (data.linked_to || []).map(link => new IdentificationLink(link));\n    return this;\n  }\n}\n", "import type {\n  GetMembershipsParams,\n  MembershipRole,\n  OrganizationInvitationJSON,\n  OrganizationJSON,\n  OrganizationMembershipJSON,\n  OrganizationResource,\n  UpdateOrganizationParams,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { BaseResource, OrganizationInvitation, OrganizationMembership } from './internal';\n\nexport class Organization extends BaseResource implements OrganizationResource {\n  pathRoot = '/organizations';\n\n  id!: string;\n  name!: string;\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  constructor(data: OrganizationJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  static async create(name: string): Promise<OrganizationResource> {\n    const json = (\n      await BaseResource._fetch<OrganizationJSON>({\n        path: '/organizations',\n        method: 'POST',\n        body: { name } as any,\n      })\n    )?.response as unknown as OrganizationJSON;\n\n    return new Organization(json);\n  }\n\n  update = async (params: UpdateOrganizationParams): Promise<OrganizationResource> => {\n    return this._basePatch({\n      body: params,\n    });\n  };\n\n  getMemberships = async (getMemberhipsParams?: GetMembershipsParams): Promise<OrganizationMembership[]> => {\n    return await BaseResource._fetch({\n      path: `/organizations/${this.id}/memberships`,\n      method: 'GET',\n      search: getMemberhipsParams as any,\n    })\n      .then(res => {\n        const members = res?.response as unknown as OrganizationMembershipJSON[];\n        return members.map(member => new OrganizationMembership(member));\n      })\n      .catch(() => []);\n  };\n\n  getPendingInvitations = async (): Promise<OrganizationInvitation[]> => {\n    return await BaseResource._fetch({\n      path: `/organizations/${this.id}/invitations/pending`,\n      method: 'GET',\n    })\n      .then(res => {\n        const pendingInvitations = res?.response as unknown as OrganizationInvitationJSON[];\n        return pendingInvitations.map(pendingInvitation => new OrganizationInvitation(pendingInvitation));\n      })\n      .catch(() => []);\n  };\n\n  inviteMember = async (inviteMemberParams: InviteMemberParams) => {\n    return await OrganizationInvitation.create(this.id, inviteMemberParams);\n  };\n\n  updateMember = async ({ userId, role }: UpdateMembershipParams): Promise<OrganizationMembership> => {\n    return await BaseResource._fetch({\n      method: 'PATCH',\n      path: `/organizations/${this.id}/memberships/${userId}`,\n      body: { role } as any,\n    }).then(res => new OrganizationMembership(res?.response as OrganizationMembershipJSON));\n  };\n\n  removeMember = async (userId: string): Promise<OrganizationMembership> => {\n    return await BaseResource._fetch({\n      method: 'DELETE',\n      path: `/organizations/${this.id}/memberships/${userId}`,\n    }).then(res => new OrganizationMembership(res?.response as OrganizationMembershipJSON));\n  };\n\n  protected fromJSON(data: OrganizationJSON): this {\n    this.id = data.id;\n    this.name = data.name;\n    this.createdAt = unixEpochToDate(data.created_at);\n    this.updatedAt = unixEpochToDate(data.updated_at);\n    return this;\n  }\n}\n\nexport type GetOrganizationParams = {\n  limit?: number;\n  offset?: number;\n};\n\nexport type InviteMemberParams = {\n  emailAddress: string;\n  role: MembershipRole;\n  redirectUrl?: string;\n};\n\nexport type UpdateMembershipParams = {\n  userId: string;\n  role: MembershipRole;\n};\n", "import {\n  MembershipRole,\n  OrganizationInvitationJSON,\n  OrganizationInvitationResource,\n  OrganizationInvitationStatus,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { BaseResource } from './internal';\n\nexport class OrganizationInvitation extends BaseResource implements OrganizationInvitationResource {\n  id!: string;\n  emailAddress!: string;\n  organizationId!: string;\n  status!: OrganizationInvitationStatus;\n  role!: MembershipRole;\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  static async create(\n    organizationId: string,\n    { emailAddress, role, redirectUrl }: CreateOrganizationInvitationParams,\n  ): Promise<OrganizationInvitationResource> {\n    const json = (\n      await BaseResource._fetch<OrganizationInvitationJSON>({\n        path: `/organizations/${organizationId}/invitations`,\n        method: 'POST',\n        body: {\n          email_address: emailAddress,\n          role,\n          redirect_url: redirectUrl,\n        } as any,\n      })\n    )?.response as unknown as OrganizationInvitationJSON;\n\n    return new OrganizationInvitation(json);\n  }\n\n  constructor(data: OrganizationInvitationJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  revoke = async (): Promise<OrganizationInvitation> => {\n    return await this._basePost({\n      path: `/organizations/${this.organizationId}/invitations/${this.id}/revoke`,\n    });\n  };\n\n  protected fromJSON(data: OrganizationInvitationJSON): this {\n    this.id = data.id;\n    this.emailAddress = data.email_address;\n    this.organizationId = data.organization_id;\n    this.role = data.role;\n    this.status = data.status;\n    this.createdAt = unixEpochToDate(data.created_at);\n    this.updatedAt = unixEpochToDate(data.updated_at);\n    return this;\n  }\n}\n\nexport type CreateOrganizationInvitationParams = {\n  emailAddress: string;\n  role: MembershipRole;\n  redirectUrl?: string;\n};\n", "import {\n  MembershipRole,\n  OrganizationMembershipJSON,\n  OrganizationMembershipResource,\n  PublicUserData,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { BaseResource, Organization } from './internal';\n\nexport class OrganizationMembership extends BaseResource implements OrganizationMembershipResource {\n  id!: string;\n  publicUserData!: PublicUserData;\n  organization!: Organization;\n  role!: MembershipRole;\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  constructor(data: OrganizationMembershipJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  static async retrieve(retrieveMembershipsParams?: RetrieveMembershipsParams): Promise<OrganizationMembership[]> {\n    return await BaseResource._fetch({\n      path: '/me/organization_memberships',\n      method: 'GET',\n      search: retrieveMembershipsParams as any,\n    })\n      .then(res => {\n        const organizationMembershipsJSON = res?.response as unknown as OrganizationMembershipJSON[];\n        return organizationMembershipsJSON.map(orgMem => new OrganizationMembership(orgMem));\n      })\n      .catch(() => []);\n  }\n\n  destroy = async (): Promise<OrganizationMembership> => {\n    // FIXME: Revise the return type of _baseDelete\n    return (await this._baseDelete({\n      path: `/organizations/${this.organization.id}/memberships/${this.publicUserData.userId}`,\n    })) as unknown as OrganizationMembership;\n  };\n\n  update = async ({ role }: UpdateOrganizationMembershipParams): Promise<OrganizationMembership> => {\n    return await this._basePatch({\n      path: `/organizations/${this.organization.id}/memberships/${this.publicUserData.userId}`,\n      body: { role },\n    });\n  };\n\n  protected fromJSON(data: OrganizationMembershipJSON): this {\n    this.id = data.id;\n    this.organization = new Organization(data.organization);\n    this.publicUserData = {\n      firstName: data.public_user_data.first_name,\n      lastName: data.public_user_data.last_name,\n      profileImageUrl: data.public_user_data.profile_image_url,\n      identifier: data.public_user_data.identifier,\n      userId: data.public_user_data.user_id,\n    };\n    this.role = data.role;\n    this.createdAt = unixEpochToDate(data.created_at);\n    this.updatedAt = unixEpochToDate(data.updated_at);\n    return this;\n  }\n}\n\nexport type UpdateOrganizationMembershipParams = {\n  role: MembershipRole;\n};\n\nexport type RetrieveMembershipsParams = {\n  limit?: number;\n  offset?: number;\n};\n", "import { deepSnakeToCamel } from '@clerk/shared/utils';\nimport type { PublicUserData, SessionJSON, SessionResource, SessionStatus } from '@clerk/types';\nimport { GetToken, GetTokenOptions, UserResource } from '@clerk/types/src';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { SessionTokenCache } from '../tokenCache';\nimport { BaseResource, Token, User } from './internal';\n\nexport class Session extends BaseResource implements SessionResource {\n  pathRoot = '/client/sessions';\n\n  id!: string;\n  status!: SessionStatus;\n  lastActiveAt!: Date;\n  lastActiveToken!: Token | null;\n  user!: UserResource | null;\n  publicUserData!: PublicUserData;\n  expireAt!: Date;\n  abandonAt!: Date;\n  createdAt!: Date;\n  updatedAt!: Date;\n\n  static isSessionResource(resource: unknown): resource is Session {\n    return !!resource && resource instanceof Session;\n  }\n\n  constructor(data: SessionJSON) {\n    super();\n\n    this.fromJSON(data);\n    this.#hydrateCache(this.lastActiveToken);\n  }\n\n  end = (): Promise<SessionResource> => {\n    SessionTokenCache.clear();\n    return this._basePost({\n      action: 'end',\n    });\n  };\n\n  remove = (): Promise<SessionResource> => {\n    SessionTokenCache.clear();\n    return this._basePost({\n      action: 'remove',\n    });\n  };\n\n  touch = (): Promise<SessionResource> => {\n    return this._basePost({\n      action: 'touch',\n    });\n  };\n\n  getToken: GetToken = async (options?: GetTokenOptions): Promise<string | null> => {\n    if (!this.user) {\n      return null;\n    }\n\n    const { leewayInSeconds = 10, template, skipCache = false } = options || {};\n    if (!template && leewayInSeconds >= 60) {\n      throw new Error('Leeway can not exceed the token lifespan (60 seconds)');\n    }\n\n    if (!!template && this.#isLegacyIntegrationRequest(template)) {\n      return this.#handleLegacyIntegrationToken({\n        template,\n        leewayInSeconds,\n        skipCache,\n      });\n    }\n\n    // If it's a session token, retrieve it with their session id, otherwise it's a jwt template token\n    // and retrieve it using the session id concatenated with the jwt template name.\n    // e.g. session id is 'sess_abc12345' and jwt template name is 'haris'\n    // The session token ID will be 'sess_abc12345' and the jwt template token ID will be 'sess_abc12345-haris'\n    const tokenId = template ? `${this.id}-${template}` : this.id;\n    const cachedEntry = skipCache ? undefined : SessionTokenCache.get({ tokenId }, leewayInSeconds);\n\n    if (cachedEntry) {\n      return cachedEntry.tokenResolver.then(res => res.getRawString());\n    }\n    const path = template ? `${this.path()}/tokens/${template}` : `${this.path()}/tokens`;\n    const tokenResolver = Token.create(path);\n    SessionTokenCache.set({ tokenId, tokenResolver });\n    return tokenResolver.then(res => res.getRawString());\n  };\n\n  #hydrateCache = (token: Token | null) => {\n    if (token && SessionTokenCache.size() === 0) {\n      SessionTokenCache.set({\n        tokenId: this.id,\n        tokenResolver: Promise.resolve(token),\n      });\n    }\n  };\n\n  #isLegacyIntegrationRequest = (template: string | undefined): boolean => {\n    return (template || '').startsWith('integration_');\n  };\n\n  #removeLegacyIntegrationPrefix = (template: string | undefined): string => {\n    return (template || '').replace('integration_', '');\n  };\n\n  // Can be removed once `integration_firebase` and `integration_hasura`\n  // are no longer supported\n  #handleLegacyIntegrationToken = async (options: GetTokenOptions): Promise<string> => {\n    const { template, leewayInSeconds } = options;\n    const cachedEntry = SessionTokenCache.get({ tokenId: this.user!.id, audience: template }, leewayInSeconds);\n    if (cachedEntry) {\n      return cachedEntry.tokenResolver.then(res => res.getRawString());\n    }\n    const resolver = Token.create(this.user!.pathRoot + '/tokens', {\n      service: this.#removeLegacyIntegrationPrefix(template),\n    });\n    SessionTokenCache.set({\n      tokenId: this.user!.id,\n      audience: template,\n      tokenResolver: resolver,\n    });\n    return resolver.then(res => res.getRawString());\n  };\n\n  protected fromJSON(data: SessionJSON): this {\n    this.id = data.id;\n    this.status = data.status;\n    this.expireAt = unixEpochToDate(data.expire_at);\n    this.abandonAt = unixEpochToDate(data.abandon_at);\n    this.lastActiveAt = unixEpochToDate(data.last_active_at);\n    this.createdAt = unixEpochToDate(data.created_at);\n    this.updatedAt = unixEpochToDate(data.updated_at);\n    this.user = new User(data.user);\n    this.publicUserData = deepSnakeToCamel(data.public_user_data) as PublicUserData;\n    this.lastActiveToken = data.last_active_token ? new Token(data.last_active_token) : null;\n    return this;\n  }\n}\n", "import type {\n  SessionActivity,\n  SessionActivityJSON,\n  SessionWithActivitiesJSON,\n  SessionWithActivitiesResource,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\n\nimport { BaseResource } from './internal';\n\nconst mapSessionActivityJSONToSessionActivity = (data: SessionActivityJSON): SessionActivity => ({\n  id: data.id,\n  deviceType: data.device_type,\n  browserName: data.browser_name,\n  browserVersion: data.browser_version,\n  country: data.country,\n  city: data.city,\n  isMobile: data.is_mobile,\n  ipAddress: data.ip_address,\n});\n\nexport class SessionWithActivities extends BaseResource implements SessionWithActivitiesResource {\n  pathRoot = '';\n  id!: string;\n  status!: string;\n  abandonAt!: Date;\n  expireAt!: Date;\n  lastActiveAt!: Date;\n  latestActivity!: SessionActivity;\n\n  constructor(data: SessionWithActivitiesJSON, pathRoot: string) {\n    super();\n    this.pathRoot = pathRoot;\n    this.fromJSON(data);\n  }\n\n  static retrieve(): Promise<SessionWithActivities[]> {\n    const sessionId = BaseResource.clerk.session?.id;\n\n    return this.clerk\n      .getFapiClient()\n      .request<SessionWithActivitiesJSON[]>({\n        method: 'GET',\n        path: '/me/sessions/active',\n        sessionId,\n      })\n      .then(res => {\n        // https://www.notion.so/clerkdev/Align-SessionWithActivities-retrieval-with-the-rest-of-Client-API-a043f72f6b9d4344bd2f21dc1d3f79de\n        const sessionWithActivitiesJSON = res.payload as unknown as SessionWithActivitiesJSON[];\n        return sessionWithActivitiesJSON.map(sa => new SessionWithActivities(sa, '/me/sessions'));\n      })\n      .catch(() => []);\n  }\n\n  revoke(): Promise<this> {\n    return this._basePost({ action: 'revoke', body: {} });\n  }\n\n  protected fromJSON(data: SessionWithActivitiesJSON): this {\n    this.id = data.id;\n    this.status = data.status;\n    this.expireAt = unixEpochToDate(data.expire_at);\n    this.abandonAt = unixEpochToDate(data.abandon_at);\n    this.lastActiveAt = unixEpochToDate(data.last_active_at);\n    this.latestActivity = mapSessionActivityJSONToSessionActivity(data.latest_activity ?? ({} as SessionActivityJSON));\n    return this;\n  }\n}\n", "import { deepSnakeToCamel } from '@clerk/shared/utils/object';\nimport { Poller } from '@clerk/shared/utils/poller';\nimport type {\n  AttemptFirstFactorParams,\n  AttemptSecondFactorParams,\n  AuthenticateWithRedirectParams,\n  CreateMagicLinkFlowReturn,\n  EmailCodeConfig,\n  EmailLinkConfig,\n  PhoneCodeConfig,\n  PrepareFirstFactorParams,\n  PrepareSecondFactorParams,\n  SignInCreateParams,\n  SignInFirstFactor,\n  SignInIdentifier,\n  SignInJSON,\n  SignInResource,\n  SignInSecondFactor,\n  SignInStartMagicLinkFlowParams,\n  SignInStatus,\n  UserData,\n  VerificationResource,\n  Web3SignatureConfig,\n  Web3SignatureFactor,\n} from '@clerk/types';\nimport {\n  clerkInvalidStrategy,\n  clerkMissingOptionError,\n  clerkVerifyEmailAddressCalledBeforeCreate,\n  clerkVerifyWeb3WalletCalledBeforeCreate,\n} from 'core/errors';\nimport { generateSignatureWithMetamask, getMetamaskIdentifier, windowNavigate } from 'utils';\n\nimport { BaseResource, Verification } from './internal';\nimport { AuthenticateWithWeb3Params } from '@clerk/types/src';\n\nexport class SignIn extends BaseResource implements SignInResource {\n  pathRoot = '/client/sign_ins';\n\n  id?: string;\n  status: SignInStatus | null = null;\n  supportedIdentifiers: SignInIdentifier[] = [];\n  supportedFirstFactors: SignInFirstFactor[] = [];\n  supportedSecondFactors: SignInSecondFactor[] = [];\n  firstFactorVerification: VerificationResource = new Verification(null);\n  secondFactorVerification: VerificationResource = new Verification(null);\n  identifier: string | null = null;\n  createdSessionId: string | null = null;\n  userData: UserData = {};\n\n  constructor(data: SignInJSON | null = null) {\n    super();\n    this.fromJSON(data);\n  }\n\n  create = (params: SignInCreateParams): Promise<this> => {\n    return this._basePost({\n      path: this.pathRoot,\n      body: params,\n    });\n  };\n\n  prepareFirstFactor = (factor: PrepareFirstFactorParams): Promise<SignInResource> => {\n    let config;\n    switch (factor.strategy) {\n      case 'email_link':\n        config = {\n          emailAddressId: factor.emailAddressId,\n          redirectUrl: factor.redirectUrl,\n        } as EmailLinkConfig;\n        break;\n      case 'email_code':\n        config = { emailAddressId: factor.emailAddressId } as EmailCodeConfig;\n        break;\n      case 'phone_code':\n        config = {\n          phoneNumberId: factor.phoneNumberId,\n          default: factor.default,\n        } as PhoneCodeConfig;\n        break;\n      case 'web3_metamask_signature':\n        config = { web3WalletId: factor.web3WalletId } as Web3SignatureConfig;\n        break;\n      default:\n        clerkInvalidStrategy('SignIn.prepareFirstFactor', factor.strategy);\n    }\n    return this._basePost({\n      body: { ...config, strategy: factor.strategy },\n      action: 'prepare_first_factor',\n    });\n  };\n\n  attemptFirstFactor = (params: AttemptFirstFactorParams): Promise<SignInResource> => {\n    return this._basePost({\n      body: params,\n      action: 'attempt_first_factor',\n    });\n  };\n\n  createMagicLinkFlow = (): CreateMagicLinkFlowReturn<SignInStartMagicLinkFlowParams, SignInResource> => {\n    const { run, stop } = Poller();\n\n    const startMagicLinkFlow = async ({\n      emailAddressId,\n      redirectUrl,\n    }: SignInStartMagicLinkFlowParams): Promise<SignInResource> => {\n      if (!this.id) {\n        clerkVerifyEmailAddressCalledBeforeCreate('SignIn');\n      }\n      await this.prepareFirstFactor({\n        strategy: 'email_link',\n        emailAddressId: emailAddressId,\n        redirectUrl: redirectUrl,\n      });\n      return new Promise((resolve, reject) => {\n        void run(() => {\n          return this.reload()\n            .then(res => {\n              const status = res.firstFactorVerification.status;\n              if (status === 'verified' || status === 'expired') {\n                stop();\n                resolve(res);\n              }\n            })\n            .catch(err => {\n              stop();\n              reject(err);\n            });\n        });\n      });\n    };\n\n    return { startMagicLinkFlow, cancelMagicLinkFlow: stop };\n  };\n\n  prepareSecondFactor = (params: PrepareSecondFactorParams): Promise<SignInResource> => {\n    return this._basePost({\n      body: params,\n      action: 'prepare_second_factor',\n    });\n  };\n\n  attemptSecondFactor = (params: AttemptSecondFactorParams): Promise<SignInResource> => {\n    return this._basePost({\n      body: params,\n      action: 'attempt_second_factor',\n    });\n  };\n\n  public authenticateWithRedirect = async (params: AuthenticateWithRedirectParams): Promise<void> => {\n    const { strategy, redirectUrl, redirectUrlComplete } = params || {};\n    const { firstFactorVerification } = await this.create({\n      strategy,\n      redirectUrl: redirectUrl,\n      actionCompleteRedirectUrl: redirectUrlComplete,\n    });\n    const { status, externalVerificationRedirectURL } = firstFactorVerification;\n\n    if (status === 'unverified' && externalVerificationRedirectURL) {\n      windowNavigate(externalVerificationRedirectURL);\n    } else {\n      const email = SignIn.fapiClient.buildEmailAddress('support');\n      const message = `Response: ${status} not supported yet.\\nFor more information contact us at ${email}`;\n      alert(message);\n    }\n  };\n\n  public authenticateWithWeb3 = async (params: AuthenticateWithWeb3Params): Promise<SignInResource> => {\n    const { identifier, generateSignature } = params || {};\n    if (!(typeof generateSignature === 'function')) {\n      clerkMissingOptionError('generateSignature');\n    }\n\n    await this.create({ identifier });\n\n    const web3FirstFactor = this.supportedFirstFactors.find(\n      f => f.strategy === 'web3_metamask_signature',\n    ) as Web3SignatureFactor;\n\n    if (!web3FirstFactor) {\n      clerkVerifyWeb3WalletCalledBeforeCreate('SignIn');\n    }\n\n    await this.prepareFirstFactor(web3FirstFactor);\n\n    const { nonce } = this.firstFactorVerification;\n    const signature = await generateSignature({\n      identifier: this.identifier!,\n      nonce: nonce!,\n    });\n\n    return this.attemptFirstFactor({\n      signature,\n      strategy: 'web3_metamask_signature',\n    });\n  };\n\n  public authenticateWithMetamask = async (): Promise<SignInResource> => {\n    const identifier = await getMetamaskIdentifier();\n    return this.authenticateWithWeb3({\n      identifier,\n      generateSignature: generateSignatureWithMetamask,\n    });\n  };\n\n  protected fromJSON(data: SignInJSON | null): this {\n    if (data) {\n      this.id = data.id;\n      this.status = data.status;\n      this.supportedIdentifiers = data.supported_identifiers;\n      this.identifier = data.identifier;\n      this.supportedFirstFactors = deepSnakeToCamel(data.supported_first_factors) as SignInFirstFactor[];\n      this.supportedSecondFactors = deepSnakeToCamel(data.supported_second_factors) as SignInSecondFactor[];\n      this.firstFactorVerification = new Verification(data.first_factor_verification);\n      this.secondFactorVerification = new Verification(data.second_factor_verification);\n      this.createdSessionId = data.created_session_id;\n      this.userData = deepSnakeToCamel(data.user_data) as UserData;\n    }\n    return this;\n  }\n}\n", "export * from './cookies';\nexport * from './customCss';\nexport * from './customFont';\nexport * from './email';\nexport * from './encoders';\nexport * from './errors';\nexport * from './getClerkQueryParam';\nexport * from './getClerkQueryParam';\nexport * from './hex';\nexport * from './iframe';\nexport * from './ignoreEventValue';\nexport * from './instance';\nexport * from './jwt';\nexport * from './querystring';\nexport * from './runtime';\nexport * from './runWithExponentialBackOff';\nexport * from './safeLock';\nexport * from './script';\nexport * from './url';\nexport * from './web3';\nexport * from './windowNavigate';\nexport * from './pageLifecycle';\nexport * from './beforeUnloadTracker';\n", "export * from './handler';\n", "import { addYears } from '@clerk/shared/utils/date';\nimport type { ClientResource } from '@clerk/types';\nimport { buildURL, getAllETLDs, getETLDPlusOne } from 'utils';\n\nimport { clientCookie } from './client';\nimport { clientUatCookie } from './client_uat';\nimport { inittedCookie } from './initted';\nimport { sessionCookie } from './session';\n\nconst COOKIE_PATH = '/';\nexport type CookieHandler = ReturnType<typeof createCookieHandler>;\nexport const createCookieHandler = () => {\n  // First party cookie helpers\n  const getDevBrowserInittedCookie = () => inittedCookie.get();\n\n  const setDevBrowserInittedCookie = () =>\n    inittedCookie.set('1', {\n      expires: addYears(Date.now(), 1),\n      sameSite: 'Lax',\n      path: COOKIE_PATH,\n    });\n\n  const removeSessionCookie = () => sessionCookie.remove();\n\n  const setSessionCookie = (token: string) => {\n    const expires = addYears(Date.now(), 1);\n    const sameSite = 'Lax';\n    const secure = window.location.protocol === 'https:';\n\n    return sessionCookie.set(token, {\n      expires,\n      sameSite,\n      secure,\n    });\n  };\n\n  const setClientUatCookie = (client: ClientResource | undefined) => {\n    const expires = addYears(Date.now(), 1);\n    const sameSite = 'Strict';\n    const secure = false;\n\n    // '0' indicates the user is signed out\n    let val = '0';\n\n    if (client && client.updatedAt && client.activeSessions.length > 0) {\n      // truncate timestamp to seconds, since this is a unix timestamp\n      val = Math.floor(client.updatedAt.getTime() / 1000).toString();\n    }\n\n    return clientUatCookie.set(val, {\n      expires,\n      sameSite,\n      secure,\n    });\n  };\n\n  // Third party cookie helpers\n  const ssoCookie = clientCookie;\n\n  // TODO: Clean up these cookie handlers after Auth v2 becomes the only authentication method\n  // Dev Browser cookie will be handled 100% be local storage\n  const getSSODevBrowserCookie = () => ssoCookie.get();\n\n  const setSSODevBrowserCookie = async (token: string) => {\n    const domain = await getETLDPlusOne();\n    const expires = addYears(Date.now(), 1);\n    const path = COOKIE_PATH;\n    const inIframe = window.location !== window.parent.location;\n    const sameSite = inIframe ? 'None' : 'Lax';\n    const secure = sameSite === 'None' || window.location.protocol === 'https:';\n\n    return ssoCookie.set(token, {\n      domain,\n      expires,\n      path,\n      sameSite,\n      secure,\n    });\n  };\n\n  const removeAllDevBrowserCookies = async (strict = true) => {\n    inittedCookie.remove({ path: COOKIE_PATH });\n\n    if (strict) {\n      // Delete cookie accurately by calculating the ETLD+1 domain\n      const domain = await getETLDPlusOne();\n      ssoCookie.remove({ domain, path: COOKIE_PATH });\n    } else {\n      // Delete cookie in a best-effort way by iterating all ETLDs\n      getAllETLDs().forEach(domain => ssoCookie.remove({ domain, path: COOKIE_PATH }));\n    }\n  };\n\n  const clearLegacyAuthV1SessionCookie = async () => {\n    if (!checkIfHttpOnlyAuthV1SessionCookieExists()) {\n      return;\n    }\n\n    const clearSessionCookieUrl = buildURL(\n      {\n        base: `https://clerk.${window.location.host}`,\n        pathname: 'v1/clear-session-cookie',\n      },\n      { stringify: false },\n    );\n\n    await fetch(clearSessionCookieUrl.toString(), {\n      credentials: 'include',\n    });\n  };\n\n  const checkIfHttpOnlyAuthV1SessionCookieExists = (): boolean => {\n    if (document.cookie.indexOf('__session=') !== -1) {\n      return false;\n    }\n\n    const d = new Date();\n    d.setTime(d.getTime() + 1000);\n\n    document.cookie = `__session=check;path=/;domain=${window.location.host};expires=${d.toUTCString()}`;\n    const cookieExists = document.cookie.indexOf('__session=') === -1;\n    document.cookie = `__session=;path=/;domain=${window.location.host};max-age=-1`;\n    return cookieExists;\n  };\n\n  return {\n    getDevBrowserInittedCookie,\n    setDevBrowserInittedCookie,\n    setSessionCookie,\n    setClientUatCookie,\n    removeSessionCookie,\n    getSSODevBrowserCookie,\n    setSSODevBrowserCookie,\n    removeAllDevBrowserCookies,\n    clearLegacyAuthV1SessionCookie,\n  };\n};\n", "import { createCookieHandler } from '@clerk/shared/utils';\n\nconst CLIENT_COOKIE_NAME = '__client';\n\n/**\n *\n * This cookie is usually exchanged as an HTTP-only cookie for every request and\n * is indicating a production user session or a development browser session.\n *\n * See more at https://docs.google.com/document/d/1Kv4fQFfoXb7NzO3a287hYZboTl3fQjQ3LLegLTJEwNE/edit\n *\n * For local development environments for which clerk domains are third-party,\n * we would need to handle this as a JavaScript initialized cookie.\n */\nexport const clientCookie = createCookieHandler(CLIENT_COOKIE_NAME);\n", "import { createCookieHandler } from '@clerk/shared/utils';\n\nconst CLIENT_UAT_COOKIE_NAME = '__client_uat';\n\n/**\n *\n * This is a long-lived JS cookie used in AuthV2 development instances, to\n * signal to the customer's backend (SDK) when the Client was last updated and\n * therefore when the SDK should re-concile the state with FAPI.\n *\n * For more information refer to the following document:\n *\n * https://docs.google.com/document/d/1PGAykkmPjx5Mtdi6j-yHc5Qy-uasjtcXnfGKDy3cHIE/edit#\n */\nexport const clientUatCookie = createCookieHandler(CLIENT_UAT_COOKIE_NAME);\n", "import { createCookieHandler } from '@clerk/shared/utils';\n\nconst INITTED_COOKIE_NAME = '__initted';\n\n/**\n * Cookie indicating the development flow initialization.\n */\nexport const inittedCookie = createCookieHandler(INITTED_COOKIE_NAME);\n", "import { createCookieHandler } from '@clerk/shared/utils';\n\nconst SESSION_COOKIE_NAME = '__session';\n\n/**\n *\n * This is a short-lived JS cookie used to store the current user JWT.\n *\n * For more information refer to the following document:\n *\n * https://docs.google.com/document/d/1F_vp7X4mhu0QXYG_89GVXnMoBlFZTjL33jMd4t120PM/edit#\n */\nexport const sessionCookie = createCookieHandler(SESSION_COOKIE_NAME);\n", "import { colorToSameTypeString, hexStringToRgbaColor, stringToHslaColor } from '@clerk/shared/utils/color';\nimport { DisplayThemeJSON } from '@clerk/types';\nimport { clerkErrorInvalidColor } from 'core/errors';\n\n// TODO: figure out how to make this testable\n\nexport function getPrimaryColorVariations(theme: DisplayThemeJSON): string {\n  const primaryHex = theme.general.color;\n  const primaryHsl = stringToHslaColor(primaryHex);\n  if (!primaryHsl) {\n    clerkErrorInvalidColor('primary');\n  }\n\n  const { h, s, l } = primaryHsl;\n  const l_l1 = 1 - (1 - l) * 0.15;\n  const l_l2 = 1 - (1 - l) * 0.1;\n  const l_d1 = l - l * 0.1;\n  const l_d2 = l - l * 0.15;\n\n  const { r, g, b } = hexStringToRgbaColor(primaryHex);\n  return `--clerk-primary: ${primaryHex};\n    --clerk-primary-rgb: ${r},${g},${b};\n    --clerk-primary-d1: ${colorToSameTypeString({ h, s, l: l_d1 })};\n    --clerk-primary-d2: ${colorToSameTypeString({ h, s, l: l_d2 })};\n    --clerk-primary-l1: ${colorToSameTypeString({ h, s, l: l_l1 })};\n    --clerk-primary-l2: ${colorToSameTypeString({ h, s, l: l_l2 })};\n    --clerk-primary-a1: ${colorToSameTypeString({ h, s, l, a: 0.5 })};\n    --clerk-primary-a2: ${colorToSameTypeString({ h, s, l, a: 0.25 })};`;\n}\n\nexport function getFontCustomCss(theme: DisplayThemeJSON): string {\n  const fontColorHex = theme.general.font_color;\n  const fontColorHsl = stringToHslaColor(fontColorHex);\n  if (!fontColorHsl) {\n    clerkErrorInvalidColor('font');\n  }\n  const { h, s, l } = fontColorHsl;\n  const isDarkColor = l <= 0.7;\n  const modL = isDarkColor ? 1 - (1 - l) * 0.55 : l - l * 0.15;\n\n  const { r, g, b } = hexStringToRgbaColor(fontColorHex);\n  return `\n    --clerk-font-family: ${theme.general.font_family};\n    --clerk-font-color: ${theme.general.font_color};\n    --clerk-font-color-rgb: ${r},${g},${b};\n    --clerk-font-color-l1: ${colorToSameTypeString({ h, s, l: modL })};\n    --clerk-label-font-weight: ${theme.general.label_font_weight};`;\n}\n\nexport function getButtonCustomCss(theme: DisplayThemeJSON): string {\n  return `\n    --clerk-button-font-family: ${theme.buttons.font_family};\n    --clerk-button-font-color: ${theme.buttons.font_color};\n    --clerk-button-font-weight: ${theme.buttons.font_weight};`;\n}\n\nexport function getGenericCustomCss(theme: DisplayThemeJSON): string {\n  return `\n    --clerk-padding-mod: ${Number.parseFloat(theme.general.padding) || 1};\n    --clerk-border-radius: ${theme.general.border_radius};\n    --clerk-box-shadow: ${theme.general.box_shadow};\n    --clerk-background-color: ${theme.general.background_color};\n    --clerk-accounts-background-color: ${theme.accounts.background_color};`;\n}\n", "import qs from 'qs';\n\nexport const GOOGLE_FONTS_URL = 'https://fonts.googleapis.com/css2';\n\nexport const WEB_SAFE_FONTS = Object.freeze([\n  'Arial',\n  'Brush Script MT',\n  'Courier New',\n  'Garamond',\n  'Georgia',\n  'Helvetica',\n  'Tahoma',\n  'Times New Roman',\n  'Trebuchet MS',\n  'Verdana',\n]);\n\nexport function fontLoader(fontFamily: string, weights: Array<number | string> = []): void {\n  fontFamily = fontFamily.replace(/\"/g, '');\n\n  const head = document.getElementsByTagName('head')[0];\n\n  // Due to a known bug in document.fonts.check in Firefox and Safari\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1252821\n  // we use the following hack to check if a font is already loaded or not\n  if (WEB_SAFE_FONTS.includes(fontFamily)) {\n    return;\n  }\n\n  if (!document.querySelector(\"link[rel=preconnect][href='https://fonts.gstatic.com']\")) {\n    const hint = document.createElement('link');\n    hint.rel = 'preconnect';\n    hint.href = 'https://fonts.gstatic.com';\n    head.appendChild(hint);\n  }\n\n  const link = document.createElement('link');\n  link.type = 'text/css';\n  link.rel = 'stylesheet';\n  link.href =\n    GOOGLE_FONTS_URL +\n    qs.stringify(\n      {\n        family: weights.length > 0 ? `${fontFamily}:wght@${weights.join(';')}` : fontFamily,\n        display: 'swap',\n      },\n      {\n        addQueryPrefix: true,\n      },\n    );\n\n  head.appendChild(link);\n}\n", "export type BuildEmailAddressParams = {\n  localPart: string;\n  frontendApi: string;\n};\n\nexport function buildEmailAddress({ localPart, frontendApi }: BuildEmailAddressParams): string {\n  const domain = frontendApi ? frontendApi.replace('clerk.', '') : 'clerk.dev';\n  return `${localPart}@${domain}`;\n}\n", "export function encodeB64(input: string) {\n  return global.btoa(input);\n}\n\n// https://stackoverflow.com/questions/30106476/\nexport function decodeB64(input: string) {\n  return decodeURIComponent(\n    global\n      .atob(input)\n      .split('')\n      .map(c => {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(''),\n  );\n}\n\nexport function urlEncodeB64(input: string) {\n  const b64Chars: { [index: string]: string } = { '+': '-', '/': '_', '=': '' };\n  return encodeB64(input).replace(/[+/=]/g, (m: string) => b64Chars[m]);\n}\n\nexport function urlDecodeB64(input: string) {\n  return decodeB64(input.replace(/_/g, '/').replace(/-/g, '+'));\n}\n", "import type { ClerkAPIError } from '@clerk/types';\n\nimport type { ClerkAPIResponseError } from '../core/resources/internal';\n\nexport function isError(err: ClerkAPIResponseError, code = ''): boolean {\n  return err.errors && !!err.errors.find((e: ClerkAPIError) => e.code === code);\n}\n", "const ClerkQueryParams = [\n  '__clerk_status',\n  '__clerk_created_session',\n  '__clerk_invitation_token',\n  '__clerk_ticket',\n] as const;\n\ntype ClerkQueryParam = typeof ClerkQueryParams[number];\n\ntype ClerkQueryParamsToValuesMap = {\n  __clerk_status: VerificationStatus;\n  __clerk_created_session: string;\n  __clerk_invitation_token: string;\n  __clerk_ticket: string;\n};\n\nexport type VerificationStatus = 'expired' | 'failed' | 'loading' | 'verified' | 'verified_switch_tab';\n\nexport function getClerkQueryParam<T extends ClerkQueryParam>(param: T): ClerkQueryParamsToValuesMap[T] | null {\n  const val = new URL(window.location.href).searchParams.get(param);\n  return val ? (val as ClerkQueryParamsToValuesMap[T]) : null;\n}\n", "export function toHex(stringToConvert: string): string {\n  return stringToConvert\n    .split('')\n    .map(c => c.charCodeAt(0).toString(16).padStart(2, '0'))\n    .join('');\n}\n", "type RunIframeOptions = {\n  src: string;\n  eventOrigin: string;\n};\n\nexport function runIframe<T>({ src, eventOrigin }: RunIframeOptions): Promise<T> {\n  return new Promise<T>((resolve, reject) => {\n    const overlay = document.createElement('div');\n    overlay.setAttribute(\n      'style',\n      'display: none; position: fixed; z-index: 2147483646; background-color: rgba(100,100,100,0.8); top: 0; left: 0; bottom: 0; right: 0;',\n    );\n\n    const iframe = document.createElement('iframe');\n    iframe.src = src;\n\n    // TODO: Auto adjust IFrame width & height using post message\n    iframe.setAttribute(\n      'style',\n      'display: none; position: fixed; z-index: 2147483647; border-radius: 32px; width: 600px; height: 500px; left: 50%; top: 50%; transform: translate(-50%, -50%); border: 0; outline: 0; background-color: white; box-shadow: 0 .5rem 1rem rgba(0,0,0,.15);',\n    );\n\n    const iframeAttributes = ['allow-same-origin', 'allow-scripts', 'allow-top-navigation'];\n\n    if (typeof document.requestStorageAccess === 'function') {\n      iframeAttributes.push('allow-storage-access-by-user-activation');\n    }\n\n    iframe.setAttribute('sandbox', iframeAttributes.join(' '));\n\n    function renderIframe() {\n      window.addEventListener('message', onMessage, false);\n      document.body.appendChild(overlay);\n      document.body.appendChild(iframe);\n    }\n\n    function removeIframe() {\n      overlay?.remove();\n      iframe?.remove();\n      window.removeEventListener('message', onMessage, false);\n    }\n\n    function showIframe() {\n      iframe.style.display = 'block';\n      overlay.style.display = 'block';\n    }\n\n    function onMessage(event: MessageEvent) {\n      if (event.origin != eventOrigin) {\n        return;\n      }\n\n      if (event.data.error) {\n        removeIframe();\n        reject(event.data.error);\n      } else if (event.data.showFrame) {\n        showIframe();\n      } else {\n        removeIframe();\n        resolve(event.data);\n      }\n    }\n\n    renderIframe();\n  });\n}\n", "const isEvent = (e: any) => {\n  return !!e && typeof e === 'object' && 'target' in e && 'currentTarget' in e && 'preventDefault' in e;\n};\n\nexport function ignoreEventValue<T>(val: T, opts: { requireType?: string } = {}): T | undefined {\n  if ((opts.requireType && typeof val !== opts.requireType) || isEvent(val)) {\n    return undefined;\n  }\n  return val;\n}\n", "import { isDevOrStagingUrl } from 'utils';\n\nconst FRONTEND_API_DEV_OR_STG_REGEX = /^clerk\\.\\w+\\.[\\w-]+\\.(\\w+.){1,2}(dev|com)$/i;\n\nconst FRONTEND_API_PROD_REGEX = /^clerk(\\.[-a-zA-Z0-9@:%_+~#=]{1,256}){2,}$/i;\n\nexport function validateFrontendApi(frontendApi: string | null | undefined): boolean {\n  if (!frontendApi) {\n    return false;\n  }\n\n  if (isDevOrStagingUrl(frontendApi)) {\n    return FRONTEND_API_DEV_OR_STG_REGEX.test(frontendApi);\n  }\n\n  return FRONTEND_API_PROD_REGEX.test(frontendApi);\n}\n", "import { JWT, JWTClaims } from '@clerk/types';\n\nimport { urlDecodeB64 } from './encoders';\n\nexport function decode(token: string): JWT {\n  const parts = (token || '').split('.');\n  const [header, payload, signature] = parts;\n\n  if (parts.length !== 3 || !header || !payload || !signature) {\n    throw new Error('JWT could not be decoded');\n  }\n\n  const payloadJSON = JSON.parse(urlDecodeB64(payload));\n  const claims = { __raw: token } as JWTClaims;\n\n  Object.keys(payloadJSON).forEach(k => {\n    claims[k] = payloadJSON[k];\n  });\n\n  return {\n    encoded: { header, payload, signature },\n    header: JSON.parse(urlDecodeB64(header)),\n    claims,\n  };\n}\n", "import qs from 'qs';\n\nexport const getQueryParams = (queryString: string) => {\n  return qs.parse(queryString || '', {\n    ignoreQueryPrefix: true,\n  });\n};\n\nexport const stringifyQueryParams = (params: {}) => {\n  return qs.stringify(params || {});\n};\n", "export function isReactNative(): boolean {\n  return typeof navigator != 'undefined' && navigator.product === 'ReactNative';\n}\n", "type Milliseconds = number;\n\ntype BackoffOptions = Partial<{\n  maxRetries: number;\n  firstDelay: Milliseconds;\n  timeMultiple: number;\n  shouldRetry: (error: unknown, iterationsCount: number) => boolean;\n}>;\n\nconst defaultOptions: Required<BackoffOptions> = {\n  maxRetries: 10,\n  firstDelay: 125,\n  timeMultiple: 2,\n  shouldRetry: () => true,\n};\n\nconst sleep = async (ms: Milliseconds) => new Promise(s => setTimeout(s, ms));\n\nconst createExponentialDelayAsyncFn = (opts: { firstDelay: Milliseconds; timeMultiple: number }) => {\n  let timesCalled = 0;\n\n  const calculateDelayInMs = () => {\n    const constant = opts.firstDelay;\n    const base = opts.timeMultiple;\n    return constant * Math.pow(base, timesCalled);\n  };\n\n  return async (): Promise<void> => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\n\nexport const runWithExponentialBackOff = async <T>(callback: () => T, options: BackoffOptions = {}): Promise<T> => {\n  let iterationsCount = 0;\n  const { maxRetries, shouldRetry, firstDelay, timeMultiple } = {\n    ...defaultOptions,\n    ...options,\n  };\n  const maxRetriesReached = () => iterationsCount === maxRetries;\n  const delay = createExponentialDelayAsyncFn({ firstDelay, timeMultiple });\n\n  while (!maxRetriesReached()) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterationsCount++;\n      if (!shouldRetry(e, iterationsCount) || maxRetriesReached()) {\n        throw e;\n      }\n      await delay();\n    }\n  }\n\n  // This should be impossible to reach, but it makes TS happy\n  throw new Error('Something went wrong');\n};\n", "import Lock from 'browser-tabs-lock';\n\nexport function SafeLock(key: string) {\n  const lock = new Lock();\n\n  window.addEventListener('beforeunload', async () => {\n    await lock.releaseLock(key);\n  });\n\n  const acquireLockAndRun = async (cb: () => unknown) => {\n    if (await lock.acquireLock(key, 5000)) {\n      try {\n        return await cb();\n      } finally {\n        await lock.releaseLock(key);\n      }\n    }\n  };\n\n  return { acquireLockAndRun };\n}\n", "type LoadScriptOptions = {\n  async?: boolean;\n  defer?: boolean;\n  globalObject?: unknown;\n};\n\nexport async function loadScript(src = '', { async, defer, globalObject }: LoadScriptOptions = {}) {\n  if (!src) {\n    throw 'Missing script src...';\n  }\n\n  return new Promise((resolve, reject) => {\n    const existingScript = document.querySelector(`script[src=\"${src}\"]`);\n\n    if (existingScript && globalObject) {\n      resolve(existingScript);\n    }\n\n    const script = document.createElement('script');\n\n    script.async = async || false;\n    script.defer = defer || false;\n\n    script.addEventListener('load', () => {\n      script.remove();\n      resolve(script);\n    });\n    script.addEventListener('error', () => {\n      script.remove();\n      reject();\n    });\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n}\n", "import { camelToSnake, isIPV4Address } from '@clerk/shared/utils/string';\nimport { loadScript } from 'utils';\nimport { SignUpResource } from '@clerk/types';\n\ndeclare global {\n  export interface Window {\n    tldts: {\n      getDomain(hostname: string, { allowPrivateDomains }: { allowPrivateDomains: boolean }): string;\n    };\n  }\n}\n\nexport const DEV_OR_STAGING_SUFFIXES = [\n  '.lcl.dev',\n  '.stg.dev',\n  '.lclstage.dev',\n  '.stgstage.dev',\n  '.dev.lclclerk.com',\n  '.stg.lclclerk.com',\n];\n\nconst devOrStagingUrlCache = new Map<string, boolean>();\nconst accountsCache = new Map<string, boolean>();\n\nexport function isDevOrStagingUrl(url: string | URL): boolean {\n  if (!url) {\n    return false;\n  }\n\n  const hostname = typeof url === 'string' ? url : url.hostname;\n  let res = devOrStagingUrlCache.get(hostname);\n  if (res === undefined) {\n    res = DEV_OR_STAGING_SUFFIXES.some(s => hostname.endsWith(s));\n    devOrStagingUrlCache.set(hostname, res);\n  }\n  return res;\n}\n\nexport function isAccountsHostedPages(url: string | URL = window.location.hostname): boolean {\n  if (!url) {\n    return false;\n  }\n\n  const hostname = typeof url === 'string' ? url : url.hostname;\n  let res = accountsCache.get(hostname);\n  if (res === undefined) {\n    res = DEV_OR_STAGING_SUFFIXES.some(s => /^(https?:\\/\\/)?accounts\\./.test(hostname) && hostname.endsWith(s));\n    accountsCache.set(hostname, res);\n  }\n  return res;\n}\n\nexport async function getETLDPlusOne(hostname: string = window.location.hostname): Promise<string> {\n  if (isIPV4Address(hostname)) {\n    return hostname;\n  }\n\n  const parts = hostname.split('.');\n\n  // Reuse dynamic loading of TLDParse library as in useTLDParser\n  if (parts.length >= 3) {\n    try {\n      await loadScript('https://cdn.jsdelivr.net/npm/tldts@5/dist/index.umd.min.js', {\n        globalObject: window.tldts,\n      });\n\n      return window.tldts.getDomain(hostname, {\n        allowPrivateDomains: true,\n      });\n    } catch (err) {\n      console.error('Failed to load tldts: ', err);\n    }\n\n    // Poor mans domain splitting if dynamic loading of tldts fails\n    const [, ...domain] = parts;\n    return domain.join('.');\n  }\n\n  return hostname;\n}\n\nexport function getAllETLDs(hostname: string = window.location.hostname): string[] {\n  const parts = hostname.split('.');\n  const memo = [];\n  const domains = [];\n\n  for (let i = parts.length - 1; i > 0; i--) {\n    memo.unshift(parts[i]);\n    domains.push(memo.join('.'));\n  }\n\n  return domains;\n}\n\ninterface BuildURLParams extends Partial<URL> {\n  base?: string;\n}\n\ninterface BuildURLOptions<T> {\n  skipOrigin?: boolean;\n  stringify?: T;\n}\n\n/**\n *\n * buildURL(params: URLParams, options: BuildURLOptions): string\n *\n * Builds a URL safely by using the native URL() constructor.\n *\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/URL\n *\n * @param {URLParams} params\n * @param {BuildURLOptions} options\n * @returns {URL | string} Returns the URL href\n */\nexport function buildURL<B extends boolean>(\n  params: BuildURLParams,\n  options?: BuildURLOptions<B>,\n): B extends true ? string : URL;\n\nexport function buildURL(params: BuildURLParams, options: BuildURLOptions<boolean> = {}): URL | string {\n  const { base, ...rest } = params;\n  const url = new URL(base || window.location.href);\n  Object.assign(url, rest);\n\n  const { stringify, skipOrigin } = options;\n  if (stringify) {\n    return skipOrigin ? url.href.replace(url.origin, '') : url.href;\n  }\n  return url;\n}\n\nexport function toURL(url: string | URL): URL {\n  return new URL(url.toString(), window.location.origin);\n}\n\n/**\n *\n * stripOrigin(url: URL | string): string\n *\n * Strips the origin part of a URL and preserves path, search and hash is applicable\n *\n * References:\n * https://developer.mozilla.org/en-US/docs/Web/API/URL\n *\n * @param {URL | string} url\n * @returns {string} Returns the URL href without the origin\n */\nexport function stripOrigin(url: URL | string): string {\n  url = toURL(url);\n  return url.href.replace(url.origin, '');\n}\n\n/**\n * trimTrailingSlash(path: string): string\n *\n * Strips the trailing slashes from a string\n *\n * @param {path} string\n * @returns {string} Returns the string without trailing slashes\n */\nexport const trimTrailingSlash = (path: string): string => {\n  return (path || '').replace(/\\/+$/, '');\n};\n\nexport const appendAsQueryParams = (\n  baseUrl: string | URL,\n  urls: Record<string, string | URL | null | undefined> = {},\n): string => {\n  const base = toURL(baseUrl);\n  const params = new URLSearchParams();\n  for (const [key, val] of Object.entries(urls)) {\n    if (!val) {\n      continue;\n    }\n    const url = toURL(val);\n    const sameOrigin = base.origin === url.origin;\n    params.append(camelToSnake(key), sameOrigin ? stripOrigin(url) : url + '');\n  }\n  return base + (params.toString() ? '#/?' + params.toString() : '');\n};\n\nexport const hasExternalAccountSignUpError = (signUp: SignUpResource): boolean => {\n  const { externalAccount } = signUp.verifications;\n  return !!externalAccount.error;\n};\n", "import { toHex } from './hex';\n\nexport async function getMetamaskIdentifier(): Promise<string> {\n  // @ts-ignore\n  if (!global.ethereum) {\n    // Do nothing when ethereum doesn't exist. We might revise this in the future\n    // to offer an Install Metamask prompt to our users.\n    return '';\n  }\n\n  // @ts-ignore\n  const identifiers = await global.ethereum.request({\n    method: 'eth_requestAccounts',\n  });\n\n  return (identifiers && identifiers[0]) || '';\n}\n\nexport type GenerateSignatureParams = {\n  identifier: string;\n  nonce: string;\n};\n\nexport async function generateSignatureWithMetamask({ identifier, nonce }: GenerateSignatureParams): Promise<string> {\n  // @ts-ignore\n  if (!global.ethereum) {\n    // Do nothing when ethereum doesn't exist. We might revise this in the future\n    // to offer an Install Metamask prompt to our users.\n    return '';\n  }\n\n  // @ts-ignore\n  const signature: string = await global.ethereum.request({\n    method: 'personal_sign',\n    params: [`0x${toHex(nonce)}`, identifier],\n  });\n\n  return signature;\n}\n", "export const CLERK_BEFORE_UNLOAD_EVENT = 'clerk:beforeunload';\n\nexport function windowNavigate(to: URL | string): void {\n  window.dispatchEvent(new CustomEvent(CLERK_BEFORE_UNLOAD_EVENT));\n  window.location.href = typeof to === 'string' ? to : to.href;\n}\n", "import { inClientSide } from '@clerk/shared/utils/ssr';\n\nconst noop = () => {\n  //\n};\n\n/**\n * Abstracts native browser event listener registration.\n * Instead, this helper exposes hooks (eg. onPageVisible) that handle\n * specific use cases.\n *\n * This is an effort to decouple event handling from the Clerk singleton,\n * any future events should be handled here.\n *\n * @internal\n */\nexport const createPageLifecycle = () => {\n  if (!inClientSide()) {\n    return { isUnloading: noop, onPageVisible: noop };\n  }\n\n  const callbackQueue: Record<string, Array<() => void>> = {\n    'visibilitychange:visible': [],\n  };\n\n  document.addEventListener('visibilitychange', () => {\n    if (document.visibilityState === 'visible') {\n      callbackQueue['visibilitychange:visible'].forEach(cb => cb());\n    }\n  });\n\n  const onPageVisible = (cb: () => void) => {\n    callbackQueue['visibilitychange:visible'].push(cb);\n  };\n\n  return { onPageVisible };\n};\n", "import { CLERK_BEFORE_UNLOAD_EVENT } from 'utils/windowNavigate';\n\n/**\n * Tracks beforeUnload events.\n *\n * Ideally we should not be always listening for the beforeUnload event\n * as it effectively disables the browser's BF cache.\n\n * To avoid this limitation, use the startTracking/ stopTracking methods\n * to listen for the event just before potential navigation is about to happen\n *\n * @internal\n */\nexport const createBeforeUnloadTracker = () => {\n  let _isUnloading = false;\n\n  const toggle = () => (_isUnloading = true);\n\n  const startTracking = () => {\n    window.addEventListener('beforeunload', toggle);\n    window.addEventListener(CLERK_BEFORE_UNLOAD_EVENT, toggle);\n  };\n\n  const stopTracking = () => {\n    window.removeEventListener('beforeunload', toggle);\n    window.removeEventListener(CLERK_BEFORE_UNLOAD_EVENT, toggle);\n  };\n\n  const isUnloading = () => _isUnloading;\n\n  return { startTracking, stopTracking, isUnloading };\n};\n", "import { Poller } from '@clerk/shared/utils/poller';\nimport type {\n  AttemptEmailAddressVerificationParams,\n  AttemptPhoneNumberVerificationParams,\n  AttemptVerificationParams,\n  AttemptWeb3WalletVerificationParams,\n  AuthenticateWithRedirectParams,\n  AuthenticateWithWeb3Params,\n  CreateMagicLinkFlowReturn,\n  PrepareEmailAddressVerificationParams,\n  PreparePhoneNumberVerificationParams,\n  PrepareVerificationParams,\n  SignUpCreateParams,\n  SignUpField,\n  SignUpIdentificationField,\n  SignUpJSON,\n  SignUpResource,\n  SignUpStatus,\n  SignUpUpdateParams,\n  StartMagicLinkFlowParams,\n} from '@clerk/types';\nimport {\n  clerkMissingOptionError,\n  clerkVerifyEmailAddressCalledBeforeCreate,\n  clerkVerifyWeb3WalletCalledBeforeCreate,\n} from 'core/errors';\nimport { generateSignatureWithMetamask, getMetamaskIdentifier, windowNavigate } from 'utils';\nimport { normalizeUnsafeMetadata } from 'utils/resourceParams';\n\nimport { BaseResource, SignUpVerifications } from './internal';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nexport class SignUp extends BaseResource implements SignUpResource {\n  pathRoot = '/client/sign_ups';\n\n  id: string | undefined;\n  status: SignUpStatus | null = null;\n  requiredFields: SignUpField[] = [];\n  optionalFields: SignUpField[] = [];\n  missingFields: SignUpField[] = [];\n  unverifiedFields: SignUpIdentificationField[] = [];\n  verifications: SignUpVerifications = new SignUpVerifications(null);\n  username: string | null = null;\n  firstName: string | null = null;\n  lastName: string | null = null;\n  emailAddress: string | null = null;\n  phoneNumber: string | null = null;\n  web3wallet: string | null = null;\n  externalAccount: any;\n  hasPassword = false;\n  unsafeMetadata: Record<string, unknown> = {};\n  createdSessionId: string | null = null;\n  createdUserId: string | null = null;\n  abandonAt: number | null = null;\n\n  constructor(data: SignUpJSON | null = null) {\n    super();\n    this.fromJSON(data);\n  }\n\n  create = (params: SignUpCreateParams): Promise<SignUpResource> => {\n    return this._basePost({\n      path: this.pathRoot,\n      body: normalizeUnsafeMetadata(params),\n    });\n  };\n\n  prepareVerification = (params: PrepareVerificationParams): Promise<this> => {\n    return this._basePost({\n      body: params,\n      action: 'prepare_verification',\n    });\n  };\n\n  attemptVerification = (params: AttemptVerificationParams): Promise<SignUpResource> => {\n    return this._basePost({\n      body: params,\n      action: 'attempt_verification',\n    });\n  };\n\n  prepareEmailAddressVerification = (params?: PrepareEmailAddressVerificationParams): Promise<SignUpResource> => {\n    return this.prepareVerification(params || { strategy: 'email_code' });\n  };\n\n  attemptEmailAddressVerification = (params: AttemptEmailAddressVerificationParams): Promise<SignUpResource> => {\n    return this.attemptVerification({ ...params, strategy: 'email_code' });\n  };\n\n  createMagicLinkFlow = (): CreateMagicLinkFlowReturn<StartMagicLinkFlowParams, SignUpResource> => {\n    const { run, stop } = Poller();\n\n    const startMagicLinkFlow = async ({ redirectUrl }: StartMagicLinkFlowParams): Promise<SignUpResource> => {\n      if (!this.id) {\n        clerkVerifyEmailAddressCalledBeforeCreate('SignUp');\n      }\n      await this.prepareEmailAddressVerification({\n        strategy: 'email_link',\n        redirectUrl,\n      });\n\n      return new Promise((resolve, reject) => {\n        void run(() => {\n          return this.reload()\n            .then(res => {\n              const status = res.verifications.emailAddress.status;\n              if (status === 'verified' || status === 'expired') {\n                stop();\n                resolve(res);\n              }\n            })\n            .catch(err => {\n              stop();\n              reject(err);\n            });\n        });\n      });\n    };\n\n    return { startMagicLinkFlow, cancelMagicLinkFlow: stop };\n  };\n\n  preparePhoneNumberVerification = (params?: PreparePhoneNumberVerificationParams): Promise<SignUpResource> => {\n    return this.prepareVerification(params || { strategy: 'phone_code' });\n  };\n\n  attemptPhoneNumberVerification = (params: AttemptPhoneNumberVerificationParams): Promise<SignUpResource> => {\n    return this.attemptVerification({ ...params, strategy: 'phone_code' });\n  };\n\n  prepareWeb3WalletVerification = (): Promise<SignUpResource> => {\n    return this.prepareVerification({ strategy: 'web3_metamask_signature' });\n  };\n\n  attemptWeb3WalletVerification = async (params: AttemptWeb3WalletVerificationParams): Promise<SignUpResource> => {\n    const { generateSignature } = params || {};\n    if (!(typeof generateSignature === 'function')) {\n      clerkMissingOptionError('generateSignature');\n    }\n\n    const { nonce } = this.verifications.web3Wallet;\n    if (!nonce) {\n      clerkVerifyWeb3WalletCalledBeforeCreate('SignUp');\n    }\n\n    const signature = await generateSignature({ identifier: this.web3wallet!, nonce });\n    return this.attemptVerification({ signature, strategy: 'web3_metamask_signature' });\n  };\n\n  public authenticateWithWeb3 = async (params: AuthenticateWithWeb3Params): Promise<SignUpResource> => {\n    const { generateSignature, identifier } = params || {};\n    const web3Wallet = identifier || this.web3wallet!;\n    await this.create({ web3Wallet });\n    await this.prepareWeb3WalletVerification();\n    return this.attemptWeb3WalletVerification({ generateSignature });\n  };\n\n  public authenticateWithMetamask = async (): Promise<SignUpResource> => {\n    const identifier = await getMetamaskIdentifier();\n    return this.authenticateWithWeb3({ identifier, generateSignature: generateSignatureWithMetamask });\n  };\n\n  public authenticateWithRedirect = async (params: AuthenticateWithRedirectParams): Promise<void> => {\n    const { redirectUrl, redirectUrlComplete, strategy } = params || {};\n    const { verifications } = await this.create({\n      strategy,\n      redirectUrl,\n      actionCompleteRedirectUrl: redirectUrlComplete,\n    });\n    const { externalAccount } = verifications;\n    const { status, externalVerificationRedirectURL } = externalAccount;\n\n    if (status === 'unverified' && !!externalVerificationRedirectURL) {\n      windowNavigate(externalVerificationRedirectURL);\n    } else {\n      // TODO:\n      const email = SignUp.fapiClient.buildEmailAddress('support');\n      const message = `Response: ${status} not supported yet.\\nFor more information contact us at ${email}`;\n      alert(message);\n    }\n  };\n\n  update = (params: SignUpUpdateParams): Promise<SignUpResource> => {\n    return this._basePatch({\n      body: normalizeUnsafeMetadata(params),\n    });\n  };\n\n  protected fromJSON(data: SignUpJSON | null): this {\n    if (data) {\n      this.id = data.id;\n      this.status = data.status;\n      this.requiredFields = data.required_fields;\n      this.optionalFields = data.optional_fields;\n      this.missingFields = data.missing_fields;\n      this.unverifiedFields = data.unverified_fields;\n      this.verifications = new SignUpVerifications(data.verifications);\n      this.username = data.username;\n      this.firstName = data.first_name;\n      this.lastName = data.last_name;\n      this.emailAddress = data.email_address;\n      this.phoneNumber = data.phone_number;\n      this.hasPassword = data.has_password;\n      this.unsafeMetadata = data.unsafe_metadata;\n      this.createdSessionId = data.created_session_id;\n      this.createdUserId = data.created_user_id;\n      this.abandonAt = data.abandon_at;\n      this.web3wallet = data.web3_wallet;\n    }\n    return this;\n  }\n}\n", "export function normalizeUnsafeMetadata<\n  T extends Record<string, unknown> & {\n    unsafeMetadata?: Record<string, unknown>;\n  },\n>(params: T) {\n  const { unsafeMetadata } = { ...params };\n  const unsafeMetadataJSON = unsafeMetadata\n    ? typeof unsafeMetadata === 'object'\n      ? JSON.stringify(unsafeMetadata)\n      : unsafeMetadata\n    : '';\n  return {\n    ...params,\n    ...(unsafeMetadata ? { unsafeMetadata: unsafeMetadataJSON } : {}),\n  };\n}\n", "import type { JWT, TokenJSON, TokenResource } from '@clerk/types';\nimport { decode } from 'utils';\n\nimport { BaseResource } from './internal';\n\nexport class Token extends BaseResource implements TokenResource {\n  pathRoot = 'tokens';\n\n  jwt: JWT;\n\n  static async create(path: string, body: any = {}): Promise<TokenResource> {\n    const json = (await BaseResource._fetch<TokenJSON>({\n      path,\n      method: 'POST',\n      body,\n    })) as unknown as TokenJSON;\n\n    return new Token(json, path);\n  }\n\n  constructor(data: TokenJSON, pathRoot?: string) {\n    super();\n\n    if (pathRoot) {\n      this.pathRoot = pathRoot;\n    }\n\n    this.jwt = decode(data.jwt);\n  }\n\n  getRawString = (): string => {\n    return this.jwt?.claims.__raw;\n  };\n\n  protected fromJSON(data: TokenJSON): this {\n    this.jwt = decode(data.jwt);\n    return this;\n  }\n}\n", "import type {\n  CreateEmailAddressParams,\n  CreatePhoneNumberParams,\n  EmailAddressResource,\n  ExternalAccountJSON,\n  ExternalAccountResource,\n  ImageResource,\n  OAuthStrategy,\n  PhoneNumberResource,\n  SetProfileImageParams,\n  UpdateUserParams,\n  UserJSON,\n  UserResource,\n  Web3WalletResource,\n} from '@clerk/types';\nimport { unixEpochToDate } from 'utils/date';\nimport { normalizeUnsafeMetadata } from 'utils/resourceParams';\n\nimport {\n  BaseResource,\n  EmailAddress,\n  ExternalAccount,\n  Image,\n  OrganizationMembership,\n  PhoneNumber,\n  RetrieveMembershipsParams,\n  SessionWithActivities,\n  Web3Wallet,\n} from './internal';\n\nexport class User extends BaseResource implements UserResource {\n  pathRoot = '/me';\n\n  id = '';\n  externalId: string | null = null;\n  username: string | null = null;\n  emailAddresses: EmailAddressResource[] = [];\n  phoneNumbers: PhoneNumberResource[] = [];\n  web3Wallets: Web3WalletResource[] = [];\n  externalAccounts: ExternalAccountResource[] = [];\n  passwordEnabled = false;\n  firstName: string | null = null;\n  lastName: string | null = null;\n  fullName: string | null = null;\n  primaryEmailAddressId: string | null = null;\n  primaryEmailAddress: EmailAddressResource | null = null;\n  primaryPhoneNumberId: string | null = null;\n  primaryPhoneNumber: PhoneNumberResource | null = null;\n  primaryWeb3WalletId: string | null = null;\n  primaryWeb3Wallet: Web3WalletResource | null = null;\n  profileImageUrl = '';\n  publicMetadata: Record<string, unknown> = {};\n  unsafeMetadata: Record<string, unknown> = {};\n  lastSignInAt: Date | null = null;\n  updatedAt: Date | null = null;\n  createdAt: Date | null = null;\n\n  private cachedSessionsWithActivities: SessionWithActivities[] | null = null;\n\n  static isUserResource(resource: unknown): resource is User {\n    return !!resource && resource instanceof User;\n  }\n\n  constructor(data: UserJSON) {\n    super();\n    this.fromJSON(data);\n  }\n\n  protected path(): string {\n    return this.pathRoot;\n  }\n\n  isPrimaryIdentification = (ident: EmailAddressResource | PhoneNumberResource | Web3WalletResource): boolean => {\n    switch (ident.constructor) {\n      case EmailAddress:\n        return this.primaryEmailAddressId === ident.id;\n      case PhoneNumber:\n        return this.primaryPhoneNumberId === ident.id;\n      case Web3Wallet:\n        return this.primaryWeb3WalletId === ident.id;\n      default:\n        return false;\n    }\n  };\n\n  twoFactorEnabled = (): boolean => {\n    let enabled = false;\n    for (const ph of this.phoneNumbers) {\n      if (ph.reservedForSecondFactor) {\n        enabled = true;\n        break;\n      }\n    }\n\n    return enabled;\n  };\n\n  createEmailAddress = (params: CreateEmailAddressParams): Promise<EmailAddressResource> => {\n    const { email } = params || {};\n    return new EmailAddress(\n      {\n        email_address: email,\n      },\n      this.path() + '/email_addresses/',\n    ).create();\n  };\n\n  createPhoneNumber = (params: CreatePhoneNumberParams): Promise<PhoneNumberResource> => {\n    const { phoneNumber } = params || {};\n    return new PhoneNumber(\n      {\n        phone_number: phoneNumber,\n      },\n      this.path() + '/phone_numbers/',\n    ).create();\n  };\n\n  createExternalAccount = async ({\n    strategy,\n    redirect_url,\n  }: {\n    strategy: OAuthStrategy;\n    redirect_url?: string;\n  }): Promise<ExternalAccountResource> => {\n    const json = (\n      await BaseResource._fetch<ExternalAccountJSON>({\n        path: '/me/external_accounts',\n        method: 'POST',\n        body: { strategy, redirect_url } as any,\n      })\n    )?.response as unknown as ExternalAccountJSON;\n\n    return new ExternalAccount(json, this.path() + '/external_accounts');\n  };\n\n  update = (params: UpdateUserParams): Promise<UserResource> => {\n    return this._basePatch({\n      body: normalizeUnsafeMetadata(params),\n    });\n  };\n\n  getSessions = async (): Promise<SessionWithActivities[]> => {\n    if (this.cachedSessionsWithActivities) {\n      return this.cachedSessionsWithActivities;\n    }\n    const res = await SessionWithActivities.retrieve();\n    this.cachedSessionsWithActivities = res;\n    return res;\n  };\n\n  setProfileImage = (params: SetProfileImageParams): Promise<ImageResource> => {\n    const { file } = params || {};\n    return Image.create(`${this.path()}/profile_image`, {\n      file,\n    });\n  };\n\n  getOrganizationMemberships = async (\n    retrieveMembership: RetrieveMembershipsParams,\n  ): Promise<OrganizationMembership[]> => {\n    return await OrganizationMembership.retrieve(retrieveMembership);\n  };\n\n  get verifiedExternalAccounts() {\n    return this.externalAccounts.filter(externalAccount => externalAccount.verification?.status == 'verified');\n  }\n\n  get unverifiedExternalAccounts() {\n    return this.externalAccounts.filter(externalAccount => externalAccount.verification?.status != 'verified');\n  }\n\n  protected fromJSON(data: UserJSON): this {\n    this.id = data.id;\n    this.externalId = data.external_id;\n    this.firstName = data.first_name;\n    this.lastName = data.last_name;\n    if (this.firstName && this.lastName) {\n      this.fullName = this.firstName + ' ' + this.lastName;\n    }\n\n    this.profileImageUrl = data.profile_image_url;\n    this.username = data.username;\n    this.passwordEnabled = data.password_enabled;\n    this.emailAddresses = data.email_addresses.map(ea => new EmailAddress(ea, this.path() + '/email_addresses'));\n\n    this.primaryEmailAddressId = data.primary_email_address_id;\n    this.primaryEmailAddress = this.emailAddresses.find(({ id }) => id === this.primaryEmailAddressId) || null;\n\n    this.phoneNumbers = data.phone_numbers.map(ph => new PhoneNumber(ph, this.path() + '/phone_numbers'));\n\n    this.primaryPhoneNumberId = data.primary_phone_number_id;\n    this.primaryPhoneNumber = this.phoneNumbers.find(({ id }) => id === this.primaryPhoneNumberId) || null;\n\n    this.web3Wallets = data.web3_wallets.map(ph => new Web3Wallet(ph, this.path() + '/web3_wallets'));\n\n    this.primaryWeb3WalletId = data.primary_web3_wallet_id;\n    this.primaryWeb3Wallet = this.web3Wallets.find(({ id }) => id === this.primaryWeb3WalletId) || null;\n\n    this.externalAccounts = data.external_accounts.map(\n      ea => new ExternalAccount(ea, this.path() + '/external_accounts'),\n    );\n\n    this.publicMetadata = data.public_metadata;\n    this.unsafeMetadata = data.unsafe_metadata;\n\n    if (data.last_sign_in_at) {\n      this.lastSignInAt = unixEpochToDate(data.last_sign_in_at);\n    }\n\n    this.updatedAt = unixEpochToDate(data.updated_at);\n    this.createdAt = unixEpochToDate(data.created_at);\n\n    return this;\n  }\n}\n", "import type { VerificationResource, Web3WalletJSON, Web3WalletResource } from '@clerk/types';\n\nimport { BaseResource, Verification } from './internal';\n\nexport class Web3Wallet extends BaseResource implements Web3WalletResource {\n  id!: string;\n  web3Wallet = '';\n  verification!: VerificationResource;\n\n  public constructor(data: Web3WalletJSON, pathRoot: string) {\n    super();\n    this.pathRoot = pathRoot;\n    this.fromJSON(data);\n  }\n\n  toString(): string {\n    return this.web3Wallet;\n  }\n\n  protected fromJSON(data: Web3WalletJSON): this {\n    this.id = data.id;\n    this.web3Wallet = data.web3_wallet;\n    this.verification = new Verification(data.verification);\n    return this;\n  }\n}\n", "import React from 'react';\n\nexport interface FieldState<T> {\n  name: string;\n  required?: boolean;\n  value: T;\n  setValue: React.Dispatch<React.SetStateAction<T>>;\n  error: string | undefined;\n  setError: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const buildRequest = (fieldStates: Array<FieldState<string>>): Record<string, any> => {\n  const request: { [x: string]: any } = {};\n  fieldStates.forEach(x => {\n    request[x.name] = x.value;\n  });\n  return request;\n};\n\nexport const useFieldState = <T>(name: string, initialState: T): FieldState<T> => {\n  const [value, setValue] = React.useState<T>(initialState);\n  const [error, setError] = React.useState<string | undefined>(undefined);\n\n  return {\n    name,\n    value,\n    setValue,\n    error,\n    setError,\n  };\n};\n\n// TODO: Replace origin useFieldState with this one\nexport const useFieldStateV2 = <T>(name: string, required: boolean, initialState: T): FieldState<T> => {\n  const [value, setValue] = React.useState<T>(initialState);\n  const [error, setError] = React.useState<string | undefined>(undefined);\n\n  return {\n    name,\n    required,\n    value,\n    setValue,\n    error,\n    setError,\n  };\n};\n", "export * from './Logo';\n", "import React from 'react';\nimport { useEnvironment } from 'ui/contexts';\nimport { fitTextInOneLine } from 'ui/signIn/utils';\n\nconst LOGO_HEIGHT_BASE = 48;\n\nconst calculateLogoRatio = (width: number, height: number, container: HTMLElement) => {\n  const ratio = width / height;\n  let newHeight = `${LOGO_HEIGHT_BASE}px`;\n  if (ratio <= 1) {\n    // logo is taller than it is wide\n    newHeight = `${2 * LOGO_HEIGHT_BASE}px`;\n  } else if (ratio > 1 && ratio <= 2) {\n    // logo is up to 2x wider than it is tall\n    newHeight = `${(2 * LOGO_HEIGHT_BASE) / ratio}px`;\n  }\n  container.style.height = newHeight;\n};\n\nexport function Logo(): JSX.Element {\n  const logoImgRef = React.useRef<HTMLImageElement>(null);\n  const [logoLoaded, setLogoLoaded] = React.useState(false);\n\n  const { displayConfig } = useEnvironment();\n  const logoContainerRef = React.useRef<HTMLDivElement | null>(null);\n\n  const hasLogoImage = !!displayConfig.logoImage;\n  const name = displayConfig.applicationName;\n\n  React.useLayoutEffect(() => {\n    const logoContainer = logoContainerRef.current;\n    if (hasLogoImage || !logoContainer || !name) {\n      return;\n    }\n\n    if (typeof window === 'undefined' || !window.ResizeObserver) {\n      fitTextInOneLine(name, logoContainer, '48px');\n      return;\n    }\n\n    const ro = new ResizeObserver(() => fitTextInOneLine(name, logoContainer, '48px'));\n    ro.observe(logoContainer);\n    return () => ro.disconnect();\n  }, [hasLogoImage, name]);\n\n  const handleLogoLoaded = () => {\n    const container = logoContainerRef.current;\n    const logo = logoImgRef.current;\n    if (!container || !logo) {\n      return;\n    }\n    calculateLogoRatio(logo.naturalWidth, logo.naturalHeight, container);\n    setLogoLoaded(true);\n  };\n\n  return (\n    <div\n      className='cl-logo'\n      title={displayConfig.applicationName}\n      ref={logoContainerRef}\n    >\n      {hasLogoImage ? (\n        <img\n          style={{ display: logoLoaded ? 'unset' : 'none' }}\n          onLoad={handleLogoLoaded}\n          ref={logoImgRef}\n          alt={displayConfig.applicationName}\n          src={displayConfig.logoImage.public_url}\n        />\n      ) : (\n        name\n      )}\n    </div>\n  );\n}\n", "import { titleize } from '@clerk/shared/utils/string';\nimport { PreferredSignInStrategy, SignInFactor, SignInResource } from '@clerk/types';\nimport { PREFERRED_SIGN_IN_STRATEGIES } from 'ui/common';\nimport { otpPrefFactorComparator, passwordPrefFactorComparator } from 'ui/signIn/strategies/factorSortingUtils';\n\nconst FONT_SIZE_STEP = 2;\n\n// creates a hidden element and returns what the text's width\n// would be if it were rendered inside the parent\nfunction textWidthForCurrentSize(text: string, parent: HTMLElement) {\n  const hiddenTextContainer = document.createElement('div');\n  hiddenTextContainer.style.position = 'absolute';\n  hiddenTextContainer.style.left = '-99in';\n  hiddenTextContainer.style.whiteSpace = 'nowrap';\n  hiddenTextContainer.innerHTML = text;\n\n  parent.appendChild(hiddenTextContainer);\n  const result = hiddenTextContainer.clientWidth;\n  parent.removeChild(hiddenTextContainer);\n  return result;\n}\n\nexport function fitTextInOneLine(text: string, containerEl: HTMLElement, defaultSize: string): void {\n  const getContainerFontSize = () => window.getComputedStyle(containerEl).getPropertyValue('font-size');\n  const decreaseSize = () => {\n    const fontSizeWithUnit = getContainerFontSize();\n    const newSize = (Number.parseInt(fontSizeWithUnit) - FONT_SIZE_STEP) * 0.85;\n    containerEl.style.fontSize = newSize + 'px';\n  };\n  const increaseSize = () => {\n    const fontSizeWithUnit = getContainerFontSize();\n    const newSize = Number.parseInt(fontSizeWithUnit) + FONT_SIZE_STEP / 2;\n    containerEl.style.fontSize = newSize + 'px';\n  };\n\n  containerEl.style.fontSize = defaultSize;\n  while (textWidthForCurrentSize(text, containerEl) > containerEl.clientWidth) {\n    decreaseSize();\n  }\n\n  if (\n    getContainerFontSize() >= defaultSize ||\n    textWidthForCurrentSize(text, containerEl) > containerEl.clientWidth * 0.75\n  ) {\n    return;\n  }\n\n  while (textWidthForCurrentSize(text, containerEl) < containerEl.clientWidth) {\n    increaseSize();\n  }\n}\n\nconst factorForIdentifier = (i: string | null) => (f: SignInFactor) => {\n  return 'safeIdentifier' in f && f.safeIdentifier === i;\n};\n\nfunction determineStrategyWhenPasswordIsPreferred(\n  factors: SignInFactor[],\n  identifier: string | null,\n): SignInFactor | null {\n  const selected = factors.sort(passwordPrefFactorComparator)[0];\n  if (selected.strategy === 'password') {\n    return selected;\n  }\n  return factors.find(factorForIdentifier(identifier)) || selected || null;\n}\n\nfunction determineStrategyWhenOTPIsPreferred(factors: SignInFactor[], identifier: string | null): SignInFactor | null {\n  const sortedBasedOnPrefFactor = factors.sort(otpPrefFactorComparator);\n  const forIdentifier = sortedBasedOnPrefFactor.find(factorForIdentifier(identifier));\n  if (forIdentifier) {\n    return forIdentifier;\n  }\n  const firstBasedOnPref = sortedBasedOnPrefFactor[0];\n  if (firstBasedOnPref.strategy === 'email_link') {\n    return firstBasedOnPref;\n  }\n  return factors.find(factorForIdentifier(identifier)) || firstBasedOnPref || null;\n}\n\n// The algorithm can be found at\n// https://www.notion.so/clerkdev/Implement-sign-in-alt-methods-e6e60ffb644645b3a0553b50556468ce\nexport function determineStartingSignInFactor(\n  firstFactors: SignInFactor[],\n  identifier: string | null,\n  preferredSignInStrategy: PreferredSignInStrategy,\n): SignInFactor | null | undefined {\n  if (!firstFactors || firstFactors.length === 0) {\n    return null;\n  }\n\n  return preferredSignInStrategy === PREFERRED_SIGN_IN_STRATEGIES.Password\n    ? determineStrategyWhenPasswordIsPreferred(firstFactors, identifier)\n    : determineStrategyWhenOTPIsPreferred(firstFactors, identifier);\n}\n\nexport function determineSalutation(signIn: Partial<SignInResource>): string {\n  if (!signIn) {\n    return '';\n  }\n\n  return titleize(signIn.userData?.firstName) || titleize(signIn.userData?.lastName) || signIn?.identifier || '';\n}\n", "import { SignInFactor, SignInStrategy } from '@clerk/types';\n\nconst makeSortingOrderMap = <T extends string>(arr: T[]): Record<T, number> =>\n  arr.reduce((acc, k, i) => {\n    acc[k] = i;\n    return acc;\n  }, {} as Record<T, number>);\n\nconst STRATEGY_SORT_ORDER_PASSWORD_PREF = makeSortingOrderMap([\n  'password',\n  'email_link',\n  'email_code',\n  'phone_code',\n] as SignInStrategy[]);\n\nconst STRATEGY_SORT_ORDER_OTP_PREF = makeSortingOrderMap([\n  'email_link',\n  'email_code',\n  'phone_code',\n  'password',\n] as SignInStrategy[]);\n\nconst STRATEGY_SORT_ORDER_ALL_STRATEGIES_BUTTONS = makeSortingOrderMap([\n  'email_link',\n  'email_code',\n  'phone_code',\n  'password',\n] as SignInStrategy[]);\n\nconst makeSortingFunction =\n  (sortingMap: Record<SignInStrategy, number>) =>\n  (a: SignInFactor, b: SignInFactor): number => {\n    const orderA = sortingMap[a.strategy];\n    const orderB = sortingMap[b.strategy];\n    if (orderA === undefined || orderB === undefined) {\n      return 0;\n    }\n    return orderA - orderB;\n  };\n\nexport const passwordPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_PASSWORD_PREF);\nexport const otpPrefFactorComparator = makeSortingFunction(STRATEGY_SORT_ORDER_OTP_PREF);\nexport const allStrategiesButtonsComparator = makeSortingFunction(STRATEGY_SORT_ORDER_ALL_STRATEGIES_BUTTONS);\n", "export * from './MagicLinkWaitingScreen';\n", "// @ts-ignore\nimport { default as ExclamationTriangle } from '@clerk/shared/assets/icons/exclamation-triangle.svg';\n// @ts-ignore\nimport { default as MailOpen } from '@clerk/shared/assets/icons/mail-open.svg';\n// @ts-ignore\nimport { default as SwitchArrows } from '@clerk/shared/assets/icons/switch-arrows.svg';\n// @ts-ignore\nimport { default as TickShield } from '@clerk/shared/assets/icons/tick-shield.svg';\nimport { ButtonWithTimer, ButtonWithTimerProps } from '@clerk/shared/components/button';\nimport cn from 'classnames';\nimport React from 'react';\n\nconst RESEND_BUTTON_DELAY_IN_MS = 15000;\n\ntype MagicLinkWaitingScreenProps = {\n  icon: 'shield' | 'warning' | 'mail' | 'switch';\n  header: string;\n  mainText: React.ReactNode;\n  secondaryText?: React.ReactNode;\n  noticeText?: React.ReactNode;\n  onResendButtonClicked?: () => void;\n  resendButtonStartingState?: ButtonWithTimerProps['startingState'];\n  className?: string;\n};\n\nexport function MagicLinkWaitingScreen({\n  icon,\n  header,\n  mainText,\n  secondaryText,\n  noticeText,\n  onResendButtonClicked,\n  resendButtonStartingState = 'disabled',\n  className,\n  ...rest\n}: MagicLinkWaitingScreenProps): JSX.Element {\n  return (\n    <div\n      className={cn('cl-verification-page-container', className)}\n      {...rest}\n      data-test-id='magicLink-waiting-screen'\n    >\n      <div className='cl-verification-page-icon-container'>\n        {icon === 'warning' && <ExclamationTriangle className='cl-verification-page-warning-icon' />}\n        {icon === 'shield' && <TickShield className='cl-verification-page-guard-icon' />}\n        {icon === 'mail' && <MailOpen className='cl-verification-page-email-icon' />}\n        {icon === 'switch' && <SwitchArrows className='cl-verification-page-switch-icon' />}\n      </div>\n      <h1 className='cl-verification-page-header'>{header}</h1>\n      {mainText && <p className='cl-verification-page-text'>{mainText}</p>}\n      {secondaryText && <p className='cl-verification-page-text'>{secondaryText}</p>}\n      {noticeText && <p className='cl-verification-page-text cl-verify-page-soft-text'>{noticeText}</p>}\n      {onResendButtonClicked && (\n        <ButtonWithTimer\n          throttleTimeInMs={RESEND_BUTTON_DELAY_IN_MS}\n          startingState={resendButtonStartingState}\n          onClick={onResendButtonClicked}\n          className='cl-verify-page-resend-button'\n          flavor='link'\n        >\n          Resend magic link\n        </ButtonWithTimer>\n      )}\n    </div>\n  );\n}\n\nexport function ExpiredRetryMagicLinkWaitingScreen({\n  header = 'This magic link has expired',\n  icon = 'warning',\n  mainText = 'Send a new one or select another method to continue',\n  noticeText,\n  onResendButtonClicked,\n}: Partial<MagicLinkWaitingScreenProps>): JSX.Element {\n  return (\n    <MagicLinkWaitingScreen\n      icon={icon}\n      header={header}\n      mainText={mainText}\n      noticeText={noticeText}\n      onResendButtonClicked={onResendButtonClicked}\n      resendButtonStartingState='enabled'\n    />\n  );\n}\n\nexport function ExpiredMagicLinkWaitingScreen({\n  header = 'This magic link has expired',\n  icon = 'warning',\n  mainText = 'Return to the original tab to continue.',\n  noticeText = 'You may close this tab.',\n}: Partial<MagicLinkWaitingScreenProps>): JSX.Element {\n  return (\n    <MagicLinkWaitingScreen\n      icon={icon}\n      header={header}\n      mainText={mainText}\n      noticeText={noticeText}\n    />\n  );\n}\n\nexport function FailedMagicLinkWaitingScreen({\n  icon = 'warning',\n  header = 'This magic link is invalid',\n  mainText = 'Return to the original tab to continue.',\n  noticeText = 'You may close this tab.',\n}: Partial<MagicLinkWaitingScreenProps>): JSX.Element {\n  return (\n    <MagicLinkWaitingScreen\n      icon={icon}\n      header={header}\n      mainText={mainText}\n      noticeText={noticeText}\n    />\n  );\n}\n\nexport function VerifiedSwitchTabMagicLinkWaitingScreen({\n  icon = 'switch',\n  header = 'Signed in on other tab',\n  mainText = 'Switch to the tab opened by the magic link to continue.',\n  noticeText = 'You may close this tab.',\n}: Partial<MagicLinkWaitingScreenProps>): JSX.Element {\n  return (\n    <MagicLinkWaitingScreen\n      icon={icon}\n      header={header}\n      mainText={mainText}\n      noticeText={noticeText}\n    />\n  );\n}\n\nexport function VerifiedMagicLinkWaitingScreen({\n  icon = 'shield',\n  header = 'Successfully signed in',\n  mainText = 'Return to the original tab to continue.',\n  noticeText = 'You may close this tab.',\n}: Partial<MagicLinkWaitingScreenProps>): JSX.Element {\n  return (\n    <MagicLinkWaitingScreen\n      icon={icon}\n      header={header}\n      mainText={mainText}\n      noticeText={noticeText}\n    />\n  );\n}\n", "export * from './PoweredByClerk';\n", "// @ts-ignore\nimport { default as LogoMarkIcon } from '@clerk/shared/assets/icons/logo-mark.svg';\nimport cn from 'classnames';\nimport React from 'react';\nimport { useEnvironment } from 'ui/contexts';\n\nexport type PoweredByClerkProps = {\n  className?: string;\n};\n\nexport function PoweredByClerk({ className }: PoweredByClerkProps): JSX.Element | null {\n  const { displayConfig } = useEnvironment();\n  if (!displayConfig.branded) {\n    return null;\n  }\n\n  return (\n    <div className={cn('cl-powered-by-clerk-container', className)}>\n      <span>Secured by </span>\n      <a\n        href='https://www.clerk.dev?utm_source=clerk&utm_medium=components'\n        target='_blank'\n        rel='noopener'\n        className='cl-powered-by-clerk-logo'\n      >\n        <LogoMarkIcon />\n      </a>\n    </div>\n  );\n}\n", "import type { SignInContextType, SignUpContextType, UserProfileContextType } from 'ui/contexts';\nimport { buildURL } from 'utils';\n\nconst SSO_CALLBACK_PATH_ROUTE = '/sso-callback';\nconst MAGIC_LINK_VERIFY_PATH_ROUTE = '/verify';\n\nexport function buildMagicLinkRedirectUrl(\n  ctx: SignInContextType | SignUpContextType | UserProfileContextType,\n  baseUrl: string | undefined = '',\n): string {\n  const { routing, authQueryString, path } = ctx;\n  return buildRedirectUrl({\n    routing,\n    baseUrl,\n    authQueryString,\n    path,\n    endpoint: MAGIC_LINK_VERIFY_PATH_ROUTE,\n    forcePathBased: true,\n  });\n}\n\nexport function buildSSOCallbackURL(\n  ctx: Partial<SignInContextType | SignUpContextType>,\n  baseUrl: string | undefined = '',\n): string {\n  const { routing, authQueryString, path } = ctx;\n  return buildRedirectUrl({\n    routing,\n    baseUrl,\n    authQueryString,\n    path,\n    endpoint: SSO_CALLBACK_PATH_ROUTE,\n  });\n}\n\ntype AuthQueryString = string | null | undefined;\ntype BuildRedirectUrlParams = {\n  routing: string | undefined;\n  authQueryString: AuthQueryString;\n  baseUrl: string;\n  path: string | undefined;\n  endpoint: string;\n  forcePathBased?: boolean;\n};\n\nconst buildRedirectUrl = ({\n  routing,\n  authQueryString,\n  baseUrl,\n  path,\n  endpoint,\n  forcePathBased,\n}: BuildRedirectUrlParams): string => {\n  if (!routing || routing === 'hash') {\n    return buildHashBasedUrl(authQueryString, endpoint);\n  }\n\n  if (routing === 'path') {\n    return buildPathBasedUrl(path || '', authQueryString, endpoint);\n  }\n\n  return buildVirtualBasedUrl(baseUrl || '', authQueryString, endpoint, forcePathBased);\n};\n\nconst buildHashBasedUrl = (authQueryString: AuthQueryString, endpoint: string): string => {\n  // Strip hash to get the URL where we're mounted\n  const hash = endpoint + (authQueryString ? `?${authQueryString}` : '');\n  return buildURL({ hash }, { stringify: true });\n};\n\nconst buildPathBasedUrl = (path: string, authQueryString: AuthQueryString, endpoint: string): string => {\n  const searchArg = authQueryString ? { search: '?' + authQueryString } : {};\n  return buildURL(\n    {\n      pathname: path + endpoint,\n      ...searchArg,\n    },\n    { stringify: true },\n  );\n};\n\nconst buildVirtualBasedUrl = (\n  base: string,\n  authQueryString: AuthQueryString,\n  endpoint: string,\n  forcePathBased?: boolean,\n): string => {\n  forcePathBased;\n  if (forcePathBased) {\n    const searchArg = authQueryString ? { search: `?${authQueryString}` } : {};\n    return buildURL({ base: base + endpoint, ...searchArg }, { stringify: true });\n  } else {\n    const hash = endpoint + (authQueryString ? `?${authQueryString}` : '');\n    return buildURL({ base, hash }, { stringify: true });\n  }\n};\n", "import { ClerkAPIError } from '@clerk/types';\nimport { getClerkAPIErrorMessage, getGlobalError } from 'ui/common';\n\nexport const VerificationErrorMessage = {\n  Incorrect: 'Incorrect, try again',\n  CodeExpired: 'The code has expired. Resend a new one.',\n};\n\nexport function verificationErrorMessage(err: Error): string {\n  const globalErr = getGlobalError(err);\n  if (!globalErr) {\n    return VerificationErrorMessage.Incorrect;\n  }\n  if (isVerificationExpiredError(globalErr)) {\n    return VerificationErrorMessage.CodeExpired;\n  }\n  return getClerkAPIErrorMessage(globalErr);\n}\n\nexport function isVerificationExpiredError(err: ClerkAPIError): boolean {\n  return err.code === 'verification_expired';\n}\n", "export * from './VerifyMagicLink';\nexport * from './MagicLinkVerificationStatusModal';\n", "import { isMagicLinkError, MagicLinkErrorCode } from 'core/resources/internal';\nimport React, { useEffect, useState } from 'react';\nimport type { MagicLinkVerificationStatusModalProps } from 'ui/common';\nimport { MagicLinkVerificationStatusModal } from 'ui/common';\nimport { useCoreClerk } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport type { VerificationStatus } from 'utils/getClerkQueryParam';\n\ntype VerifyMagicLinkProps = Pick<MagicLinkVerificationStatusModalProps, 'successHeader'> & {\n  redirectUrlComplete?: string;\n  redirectUrl?: string;\n};\n\nexport function VerifyMagicLink({\n  successHeader,\n  redirectUrlComplete,\n  redirectUrl,\n}: VerifyMagicLinkProps): JSX.Element | null {\n  const { handleMagicLinkVerification } = useCoreClerk();\n  const { navigate } = useNavigate();\n\n  const [verificationStatus, setVerificationStatus] = useState<VerificationStatus>('loading');\n\n  useEffect(() => {\n    const verify = async () => {\n      try {\n        await handleMagicLinkVerification(\n          {\n            redirectUrlComplete,\n            redirectUrl,\n          },\n          navigate,\n        );\n        setVerificationStatus('verified');\n      } catch (err) {\n        let status: VerificationStatus = 'failed';\n        if (isMagicLinkError(err) && err.code === MagicLinkErrorCode.Expired) {\n          status = 'expired';\n        }\n        setVerificationStatus(status);\n      }\n    };\n    void verify();\n  }, []);\n\n  return (\n    <MagicLinkVerificationStatusModal\n      successHeader={successHeader}\n      verificationStatus={verificationStatus}\n    />\n  );\n}\n", "export const useMagicLink = (s: string) => ({})\r\nexport { useNavigate } from \"remix\";\r\n", "import { Portal } from '@clerk/shared/components/portal';\nimport { Spinner } from '@clerk/shared/components/spinner';\nimport React from 'react';\nimport {\n  ExpiredMagicLinkWaitingScreen,\n  FailedMagicLinkWaitingScreen,\n  LoadingScreen,\n  PoweredByClerk,\n  VerifiedMagicLinkWaitingScreen,\n  VerifiedSwitchTabMagicLinkWaitingScreen,\n} from 'ui/common';\nimport { VerificationStatus } from 'utils/getClerkQueryParam';\n\n// UX - Don't confuse the user\n// by showing many transitions at once\nconst waitForTransitions = (ms: number) => new Promise(r => setTimeout(r, ms));\n\nexport type MagicLinkVerificationStatusModalProps = {\n  verificationStatus: VerificationStatus;\n  successHeader?: string;\n};\n\nexport function MagicLinkVerificationStatusModal({\n  successHeader,\n  verificationStatus,\n}: MagicLinkVerificationStatusModalProps): JSX.Element {\n  const [showModal, setShowModal] = React.useState(false);\n\n  const showStatusModalAfterDelay = async () => {\n    await waitForTransitions(550);\n    setShowModal(true);\n  };\n\n  React.useEffect(() => {\n    void showStatusModalAfterDelay();\n  }, []);\n\n  const spinner = !showModal && <Spinner className='cl-verify-page-spinner' />;\n\n  const successModal = showModal && verificationStatus === 'verified' && (\n    <div className='cl-verify-page-modal'>\n      <VerifiedMagicLinkWaitingScreen header={successHeader} />\n      <PoweredByClerk className='cl-verify-page-powered-by-clerk' />\n    </div>\n  );\n\n  const expiredModal = showModal && verificationStatus === 'expired' && (\n    <div className='cl-verify-page-modal'>\n      <ExpiredMagicLinkWaitingScreen mainText='Return to the original tab to continue.' />\n      <PoweredByClerk className='cl-verify-page-powered-by-clerk' />\n    </div>\n  );\n\n  const genericErrorModal = showModal && verificationStatus === 'failed' && (\n    <div className='cl-verify-page-modal'>\n      <FailedMagicLinkWaitingScreen />\n      <PoweredByClerk className='cl-verify-page-powered-by-clerk' />\n    </div>\n  );\n\n  const switchTabModal = showModal && verificationStatus === 'verified_switch_tab' && (\n    <div className='cl-verify-page-modal'>\n      <VerifiedSwitchTabMagicLinkWaitingScreen header={successHeader} />\n      <PoweredByClerk className='cl-verify-page-powered-by-clerk' />\n    </div>\n  );\n\n  return (\n    <div>\n      {/* Occupy some space so we dont break the users app\n       by rendering nothing inside their components */}\n      <LoadingScreen showHeader={false} />\n      <Portal className='cl-component'>\n        <div\n          className='cl-verify-page-container'\n          data-test-id='magicLink-verify-screen'\n        >\n          <div className='cl-verify-page-backdrop'>\n            {spinner}\n            {successModal}\n            {expiredModal}\n            {genericErrorModal}\n            {switchTabModal}\n          </div>\n        </div>\n      </Portal>\n    </div>\n  );\n}\n", "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport type PortalProps = {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  hostEl?: HTMLElement | null;\r\n};\r\n\r\nexport function Portal({ children, hostEl, className }: PortalProps): JSX.Element {\r\n  const el = React.useMemo(() => document.createElement('div'), []);\r\n\r\n  React.useEffect(() => {\r\n    const host = hostEl && hostEl.appendChild ? hostEl : document.body;\r\n    const classList: string[] = [];\r\n\r\n    if (className) {\r\n      className.split(' ').forEach(item => classList.push(item));\r\n    }\r\n\r\n    classList.forEach(item => el.classList.add(item));\r\n\r\n    host.appendChild(el);\r\n\r\n    return () => {\r\n      host.removeChild(el);\r\n    };\r\n  }, [el, hostEl, className]);\r\n\r\n  return ReactDOM.createPortal(children, el);\r\n}\r\n", "import { SignInProps, SignUpProps } from '@clerk/types';\nimport React from 'react';\nimport { useCoreSession, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\n\nexport function withRedirectToHome<P extends SignInProps | SignUpProps>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n): (props: P) => null | JSX.Element {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n\n  const HOC = (props: P) => {\n    const { navigate } = useNavigate();\n    const { authConfig, displayConfig } = useEnvironment();\n    const { singleSessionMode } = authConfig;\n    const session = useCoreSession({ avoidUndefinedCheck: true });\n\n    React.useEffect(() => {\n      if (singleSessionMode && !!session) {\n        navigate(displayConfig.homeUrl);\n      }\n    }, []);\n\n    if (singleSessionMode && !!session) {\n      return null;\n    }\n\n    return <Component {...props} />;\n  };\n\n  HOC.displayName = `withRedirectToHome(${displayName})`;\n\n  return HOC;\n}\n", "import { EnvironmentResource } from '@clerk/types';\nimport * as React from 'react';\nimport { assertContextExists } from 'ui/contexts/utils';\n\nconst EnvironmentContext = React.createContext<EnvironmentResource | null>(null);\n\ninterface EnvironmentProviderProps {\n  children: React.ReactNode;\n  value: EnvironmentResource;\n}\n\nfunction EnvironmentProvider({ children, value }: EnvironmentProviderProps): JSX.Element {\n  return <EnvironmentContext.Provider value={value}>{children}</EnvironmentContext.Provider>;\n}\n\nfunction useEnvironment(): EnvironmentResource {\n  const context = React.useContext(EnvironmentContext);\n  assertContextExists(context, 'EnvironmentProvider');\n  return context;\n}\n\nexport { EnvironmentProvider, useEnvironment };\n", "import type { ClerkOptions } from '@clerk/types';\nimport React from 'react';\n\nexport const OptionsContext = React.createContext<ClerkOptions>({});\n\ninterface OptionsProviderProps {\n  children: React.ReactNode;\n  value: any;\n}\n\nfunction OptionsProvider({ children, value }: OptionsProviderProps): JSX.Element {\n  return <OptionsContext.Provider value={value}>{children}</OptionsContext.Provider>;\n}\n\nfunction useOptions(): ClerkOptions {\n  const context = React.useContext(OptionsContext);\n  if (context === undefined) {\n    throw new Error('useOptions must be used within an OptionsContext');\n  }\n  return context;\n}\n\nexport { OptionsProvider, useOptions };\n", "import { SessionResource } from '@clerk/types';\nimport { clerkCoreErrorSessionIsNotDefined } from 'core/errors';\nimport React from 'react';\nimport { assertContextExists } from 'ui/contexts/utils';\n\ntype CoreSessionContextValue = { value: SessionResource | null | undefined };\nexport const CoreSessionContext = React.createContext<CoreSessionContextValue | undefined>(undefined);\nCoreSessionContext.displayName = 'CoreSessionContext';\n\ntype Opts = {\n  avoidUndefinedCheck?: boolean;\n};\n\nexport function useCoreSession(): SessionResource;\nexport function useCoreSession(opts: { avoidUndefinedCheck: true }): SessionResource | null | undefined;\n\nexport function useCoreSession(opts?: Opts): SessionResource | null | undefined {\n  const context = React.useContext(CoreSessionContext);\n  assertContextExists(context, 'ClerkSessionContextProvider');\n  if (!context.value && !!opts && !opts.avoidUndefinedCheck) {\n    clerkCoreErrorSessionIsNotDefined();\n  }\n  return context.value;\n}\n\nexport function withCoreSessionSwitchGuard<P>(Component: React.ComponentType<P>): React.ComponentType<P> {\n  const Hoc = (props: P) => {\n    const context = React.useContext(CoreSessionContext);\n    assertContextExists(context, 'CoreSessionContextProvider');\n    if (context.value === undefined) {\n      return null;\n    }\n    return <Component {...props} />;\n  };\n\n  const displayName = Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  Hoc.displayName = displayName;\n  return Hoc;\n}\n", "import { ClientResource, SessionResource, SignInResource, SignUpResource } from '@clerk/types';\nimport React from 'react';\nimport { assertContextExists } from 'ui/contexts/utils';\n\ntype CoreClientContextValue = { value: ClientResource };\nexport const CoreClientContext = React.createContext<CoreClientContextValue | undefined>(undefined);\nCoreClientContext.displayName = 'CoreClientContext';\n\nexport function useCoreSignIn(): SignInResource {\n  const context = React.useContext(CoreClientContext);\n  assertContextExists(context, 'CoreClientContextProvider');\n  return context.value.signIn;\n}\n\nexport function useCoreSignUp(): SignUpResource {\n  const context = React.useContext(CoreClientContext);\n  assertContextExists(context, 'CoreClientContextProvider');\n  return context.value.signUp;\n}\n\nexport function useCoreSessionList(): SessionResource[] {\n  const context = React.useContext(CoreClientContext);\n  assertContextExists(context, 'CoreClientContextProvider');\n  return context.value.sessions;\n}\n", "export * from './PageHeading';\n", "import { Heading } from '@clerk/shared/components/heading';\nimport cn from 'classnames';\nimport React from 'react';\nimport { BackButton } from 'ui/common/backButton';\n\nexport type PageHeadingProps = {\n  title: string;\n  subtitle?: string;\n  backTo?: string;\n  className?: string;\n};\n\nexport function PageHeading({ title, subtitle, backTo, className }: PageHeadingProps): JSX.Element {\n  return (\n    <div className={cn('cl-page-heading', className)}>\n      {backTo && (\n        <BackButton\n          to={backTo}\n          className='cl-back-button'\n        />\n      )}\n      <div className='cl-text-container'>\n        <Heading\n          as={'h2'}\n          className='cl-title'\n        >\n          {title}\n        </Heading>\n        <p className='cl-subtitle'>{subtitle}</p>\n      </div>\n    </div>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n// @ts-ignore\r\nimport styles from './Heading.module.scss';\r\n\r\ninterface HeadingProps extends React.HTMLAttributes<HTMLHeadingElement> {\r\n  as: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n}\r\n\r\nexport const Heading: React.FC<HeadingProps> = ({ as, children, className, ...rest }) => {\r\n  const Heading = as;\r\n  return (\r\n    <Heading\r\n      {...rest}\r\n      className={cn(styles.heading, styles[as], className)}\r\n    >\r\n      {children}\r\n    </Heading>\r\n  );\r\n};\r\n", "export { EmailDetail as default } from \"@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailDetail\";\r\n", "// @ts-ignore\nimport { default as BinIcon } from '@clerk/shared/assets/icons/bin.svg';\n// @ts-ignore\nimport { default as MailIcon } from '@clerk/shared/assets/icons/mail.svg';\nimport { Button } from '@clerk/shared/components/button';\nimport { List } from '@clerk/shared/components/list';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { Toggle } from '@clerk/shared/components/toggle';\nimport React from 'react';\nimport { handleError } from 'ui/common';\nimport { Error } from 'ui/common/error';\nimport { useCoreUser, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport { useRouter } from 'ui/router';\nimport { EmailAddressVerificationWithMagicLink } from 'ui/userProfile/emailAdressess/EmailAddressVerificationWithMagicLink';\nimport { EmailAddressVerificationWithOTP } from 'ui/userProfile/emailAdressess/EmailAddressVerificationWithOTP';\nimport { magicLinksEnabledForInstance } from 'ui/userProfile/emailAdressess/utils';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nimport { EditableListFieldRemoveCard } from '../EditableListFieldRemoveCard';\nimport { Connections, PrimaryTag } from '../util';\n\nexport function EmailDetail(): JSX.Element | null {\n  const environment = useEnvironment();\n  const { navigate } = useNavigate();\n  const user = useCoreUser();\n  const { params } = useRouter();\n  const [showRemovalPage, setShowRemovalPage] = React.useState<boolean>(false);\n  const [error, setError] = React.useState<string | undefined>();\n\n  const email = user.emailAddresses.find(ea => ea.id === params.email_address_id);\n\n  const isPrimary = email?.id === user.primaryEmailAddressId;\n\n  if (!email) {\n    return null;\n  }\n\n  const verificationStatus = email.verification?.status || '';\n  const isVerified = verificationStatus === 'verified';\n\n  const handleRemove = () => {\n    setShowRemovalPage(true);\n  };\n\n  const onEmailAddressRemove = () => {\n    return email.destroy();\n  };\n\n  const makeIdentPrimary = async () => {\n    user.update({ primaryEmailAddressId: email.id }).catch(e => handleError(e, [], setError));\n  };\n\n  const onErrorHandler = (e: any) => {\n    handleError(e, [], setError);\n  };\n\n  const removeEmailAddressScreen = (\n    <EditableListFieldRemoveCard\n      type='email'\n      label={email.emailAddress}\n      onCancel={() => {\n        setShowRemovalPage(false);\n      }}\n      onRemove={onEmailAddressRemove}\n      onRemoved={() => {\n        navigate('../');\n      }}\n    />\n  );\n\n  return (\n    <>\n      <PageHeading\n        title='Email'\n        subtitle={isVerified ? 'Manage this email address' : 'Verify this email address'}\n        backTo='./../'\n      />\n      {showRemovalPage && removeEmailAddressScreen}\n      {!showRemovalPage && (\n        <TitledCard className='cl-themed-card cl-list-card cl-verifiable-field-card'>\n          <Error style={{ margin: '0 2em' }}>{error}</Error>\n          <List>\n            <List.Item\n              className='cl-list-item'\n              hoverable={false}\n              detail={false}\n              lines\n            >\n              <div>\n                <div className='cl-ident-detail'>\n                  {email.emailAddress}\n                  <div className='cl-tags'>\n                    {isPrimary && <PrimaryTag />}\n                    <VerificationStatusTag\n                      className='cl-tag'\n                      status={verificationStatus}\n                    />\n                  </div>\n                </div>\n                <div>\n                  <Connections linkedResources={email.linkedTo} />\n                </div>\n              </div>\n            </List.Item>\n\n            {isVerified && (\n              <List.Item\n                className='cl-list-item'\n                hoverable={false}\n                detail={false}\n                lines\n              >\n                <div className='cl-primary-status-container'>\n                  <div className='cl-description'>\n                    <MailIcon />\n                    <div className='cl-text'>\n                      <div className='cl-title'>Primary email</div>\n                      <div className='cl-subtitle'>This email will receive communications regarding your account.</div>\n                    </div>\n                  </div>\n                  <Toggle\n                    name='primary_toggle'\n                    disabled={isPrimary}\n                    checked={isPrimary}\n                    handleChange={makeIdentPrimary}\n                  />\n                </div>\n              </List.Item>\n            )}\n            {!isVerified && (\n              <List.Item\n                className='cl-list-item'\n                hoverable={false}\n                detail={false}\n                lines\n              >\n                {magicLinksEnabledForInstance(environment) ? (\n                  <EmailAddressVerificationWithMagicLink\n                    className='cl-verify-email-container'\n                    email={email}\n                  />\n                ) : (\n                  <EmailAddressVerificationWithOTP\n                    className='cl-verify-email-container'\n                    email={email}\n                    onError={onErrorHandler}\n                  />\n                )}\n              </List.Item>\n            )}\n          </List>\n          <Button\n            onClick={handleRemove}\n            className='cl-add-resource-button cl-remove-button'\n            type='button'\n            flavor='text'\n            buttonColor='error'\n            hoverable\n          >\n            <BinIcon />\n            Remove\n          </Button>\n        </TitledCard>\n      )}\n    </>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { titleize } from '../../utils';\r\n// @ts-ignore\r\nimport styles from './Tag.module.scss';\r\n\r\nexport type TagProps = React.PropsWithChildren<{\r\n  color: 'primary' | 'warning' | 'success' | 'error';\r\n  size?: 'lg' | 'sm' | 'xs';\r\n  text?: string;\r\n  Icon?: React.ReactNode;\r\n  className?: string;\r\n  style?: Record<string, unknown>;\r\n}>;\r\n\r\nexport function Tag({ color = 'success', size = 'sm', text, children, Icon, className, style }: TagProps): JSX.Element {\r\n  return (\r\n    <span\r\n      className={cn(styles.tag, styles[color], styles[size], className)}\r\n      style={style}\r\n    >\r\n      {Icon && <span className={styles.icon}>{Icon}</span>}\r\n      {text || children}\r\n    </span>\r\n  );\r\n}\r\n\r\n/**\r\n * Special purpose Tag for Verification statuses -\r\n * TODO: Types will progressively roll out so the status should not be a string\r\n */\r\ntype VerificationStatusTagProps = {\r\n  status: string;\r\n  className?: string;\r\n};\r\n\r\nexport function VerificationStatusTag({ status, className }: VerificationStatusTagProps): JSX.Element | null {\r\n  return status.match(/expired|unverified|failed/) ? (\r\n    <Tag\r\n      className={className}\r\n      color='error'\r\n    >\r\n      {titleize(status)}\r\n    </Tag>\r\n  ) : status === 'verified' ? (\r\n    <Tag\r\n      className={className}\r\n      color='success'\r\n    >\r\n      Verified\r\n    </Tag>\r\n  ) : null;\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { useInput } from '../../hooks/useInput';\r\n// @ts-ignore\r\nimport styles from './Toggle.module.scss';\r\n\r\nexport type ToggleProps = {\r\n  name?: string;\r\n  value?: string;\r\n  checked: boolean;\r\n  disabled?: boolean;\r\n  label?: React.ReactNode;\r\n  handleChange?: (el: HTMLInputElement) => void;\r\n};\r\n\r\nexport const Toggle: React.FC<ToggleProps> = ({\r\n  name,\r\n  value,\r\n  checked = false,\r\n  disabled,\r\n  label,\r\n  handleChange,\r\n}: ToggleProps) => {\r\n  const { onChange, onKeyPress, ref } = useInput(handleChange);\r\n\r\n  return (\r\n    <label\r\n      className={cn(styles.container, { [styles.disabled]: disabled })}\r\n      onKeyPress={onKeyPress}\r\n    >\r\n      {label && <span className={styles.label}>{label}</span>}\r\n      <span\r\n        className={styles.toggle}\r\n        role='switch'\r\n        tabIndex={0}\r\n        aria-checked={checked}\r\n        aria-label={label as string}\r\n      >\r\n        <input\r\n          ref={ref}\r\n          name={name}\r\n          value={value}\r\n          type='checkbox'\r\n          checked={checked}\r\n          onChange={onChange}\r\n          disabled={disabled}\r\n          tabIndex={-1}\r\n        />\r\n        <span className={styles.slider}></span>\r\n      </span>\r\n    </label>\r\n  );\r\n};\r\n", "import React from 'react';\r\n\r\nexport function useInput(callback: ((el: HTMLInputElement) => void) | null | undefined): {\r\n  onChange: (e: React.ChangeEvent) => void;\r\n  onKeyPress: (e: React.KeyboardEvent) => void;\r\n  ref: React.MutableRefObject<HTMLInputElement | null>;\r\n} {\r\n  const ref = React.useRef<HTMLInputElement | null>(null);\r\n\r\n  function onChange(e: React.ChangeEvent) {\r\n    e.persist();\r\n    if (typeof callback === 'function') {\r\n      callback(e.target as HTMLInputElement);\r\n    }\r\n  }\r\n\r\n  function onKeyPress(e: React.KeyboardEvent) {\r\n    const switcher: HTMLInputElement | null = e.currentTarget.querySelector('input[type=checkbox], input[type=radio]');\r\n\r\n    if (switcher && !switcher.disabled) {\r\n      const SPACE = 32;\r\n      if (e.charCode !== SPACE) {\r\n        return;\r\n      }\r\n\r\n      e.persist();\r\n      e.preventDefault();\r\n\r\n      switcher.checked = !switcher.checked;\r\n\r\n      if (typeof callback === 'function') {\r\n        callback(switcher);\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    onChange,\r\n    onKeyPress,\r\n    ref,\r\n  };\r\n}\r\n", "import { noop } from '@clerk/shared/utils/noop';\nimport { EmailAddressResource } from '@clerk/types';\nimport React from 'react';\nimport { buildMagicLinkRedirectUrl, MagicLinkWaitingScreen } from 'ui/common';\nimport { useUserProfileContext } from 'ui/contexts';\nimport { useMagicLink } from 'ui/hooks';\n\ntype EmailAddressVerificationWithMagicLinkProps = {\n  email: EmailAddressResource;\n  onVerificationComplete?: () => void;\n  onError?: (err: any) => void;\n  className?: string;\n};\n\nexport function EmailAddressVerificationWithMagicLink({\n  email,\n  onError = noop,\n  onVerificationComplete = noop,\n  className,\n}: EmailAddressVerificationWithMagicLinkProps): JSX.Element {\n  const profileContext = useUserProfileContext();\n\n  const { startMagicLinkFlow } = useMagicLink(email);\n\n  React.useEffect(() => {\n    startVerification();\n  }, []);\n\n  function startVerification() {\n    const redirectUrl = buildMagicLinkRedirectUrl(profileContext);\n    startMagicLinkFlow({ redirectUrl }).then(onVerificationComplete).catch(onError);\n  }\n\n  return (\n    <MagicLinkWaitingScreen\n      icon='mail'\n      header='Check your email'\n      mainText={\n        <>\n          A verification link has been sent to\n          <br />\n          <span className='cl-verification-page-identifier'>{email.emailAddress}</span>\n        </>\n      }\n      secondaryText='Click the link in the email to verify your new email, then return to\n          this tab.'\n      className={className}\n      onResendButtonClicked={startVerification}\n    />\n  );\n}\n", "import { OneTimeCodeInput, VerifyCodeHandler } from '@clerk/shared/components/oneTimeCodeInput';\nimport { noop } from '@clerk/shared/utils/noop';\nimport { EmailAddressResource } from '@clerk/types';\nimport React from 'react';\nimport { useFieldState, verificationErrorMessage } from 'ui/common';\n\ntype EmailAddressVerificationWithOTPProps = {\n  email: EmailAddressResource;\n  onVerificationComplete?: () => void;\n  onError?: (err: any) => void;\n  className?: string;\n};\n\nexport function EmailAddressVerificationWithOTP({\n  email,\n  onError = noop,\n  onVerificationComplete = noop,\n  className,\n}: EmailAddressVerificationWithOTPProps): JSX.Element {\n  const code = useFieldState('code', '');\n\n  React.useEffect(() => {\n    void prepareVerification();\n  }, []);\n\n  const prepareVerification = () => {\n    return email.prepareVerification({ strategy: 'email_code' }).catch(onError);\n  };\n\n  const verifyCode: VerifyCodeHandler = (verify, reject) => {\n    email\n      .attemptVerification({ code: code.value })\n      .then(() => verify(onVerificationComplete))\n      .catch(e => {\n        reject(verificationErrorMessage(e));\n      });\n  };\n\n  return (\n    <div className={className}>\n      <div\n        className='cl-copy-text'\n        style={{ marginBottom: '2em' }}\n      >\n        An email containing a verification code has been sent to{' '}\n        <span className='cl-identifier'>{email.emailAddress}</span>.\n      </div>\n      <OneTimeCodeInput\n        value={code.value}\n        setValue={code.setValue}\n        verifyCodeHandler={verifyCode}\n        onResendCode={prepareVerification}\n        className='cl-otp-input'\n      />\n    </div>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { noop } from '../../utils';\r\nimport { Button } from '../button';\r\nimport { Input } from '../input';\r\nimport { Spinner } from '../spinner';\r\n// @ts-ignore\r\nimport styles from './OneTimeCodeInput.module.scss';\r\n\r\nconst BLANK_CHAR = '';\r\nconst VERIFY_SUCCESS_ACTION_DELAY = 500;\r\nconst VERIFY_FAILURE_ACTION_DELAY = 2000;\r\nconst DEFAULT_CODE_LENGTH = 6;\r\n\r\ntype VerifyCallback = (afterVerifyCallback?: () => any) => void;\r\ntype RejectCallback = (errorMessage?: string) => void;\r\n\r\nexport type VerifyCodeHandler = (verify: VerifyCallback, reject: RejectCallback) => void;\r\n\r\nexport interface OneTimeCodeInputProps {\r\n  value: string;\r\n  setValue: (code: string) => any;\r\n  verifyCodeHandler: VerifyCodeHandler;\r\n  length?: number;\r\n  onResendCode?: () => any;\r\n  autoFocus?: boolean;\r\n  className?: string;\r\n  style?: Record<string, unknown>;\r\n  resendCodeButtonClassName?: string;\r\n}\r\n\r\ntype Status =\r\n  | { status: 'idle' }\r\n  | { status: 'failed'; message: string }\r\n  | { status: 'loading' }\r\n  | { status: 'verified' };\r\n\r\nexport function OneTimeCodeInput({\r\n  value,\r\n  setValue,\r\n  length = DEFAULT_CODE_LENGTH,\r\n  onResendCode,\r\n  verifyCodeHandler,\r\n  autoFocus = true,\r\n  resendCodeButtonClassName,\r\n  ...rest\r\n}: OneTimeCodeInputProps): JSX.Element {\r\n  const inputValues = Array.from({ length }, (_, i) => value[i] || BLANK_CHAR);\r\n  const [activeInputIndex, setActiveInputIndex] = React.useState(0);\r\n  const [canResendCode, setCanResendCode] = React.useState(true);\r\n  const [verificationState, setVerificationState] = React.useState<Status>({\r\n    status: 'idle',\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    selectInputContentAt(activeInputIndex);\r\n  }, [activeInputIndex]);\r\n\r\n  const inputRefs = Array.from({ length }, () => React.createRef<HTMLInputElement>());\r\n\r\n  React.useEffect(() => {\r\n    if (value.replace(BLANK_CHAR, '').length !== length) {\r\n      return noop;\r\n    }\r\n\r\n    let timerId: any;\r\n    setVerificationState({ status: 'loading' });\r\n    verifyCodeHandler(\r\n      afterVerifyCallback => {\r\n        setVerificationState({ status: 'verified' });\r\n        timerId = setTimeout(() => afterVerifyCallback?.(), VERIFY_SUCCESS_ACTION_DELAY);\r\n      },\r\n      err => {\r\n        setVerificationState({ status: 'failed', message: err || 'Failed' });\r\n        timerId = setTimeout(() => reset(), VERIFY_FAILURE_ACTION_DELAY);\r\n      },\r\n    );\r\n    return () => clearTimeout(timerId);\r\n  }, [length, value]);\r\n\r\n  React.useEffect(() => {\r\n    if (verificationState.status === 'idle') {\r\n      focusInput({ index: 0 });\r\n    }\r\n  }, [verificationState.status]);\r\n\r\n  function isValidInput(char: string) {\r\n    return char != undefined && Number.isInteger(+char);\r\n  }\r\n\r\n  function updateCode(newCode: string) {\r\n    if (value === newCode) {\r\n      return;\r\n    }\r\n    setValue(newCode);\r\n  }\r\n\r\n  function updateCodeValueAt(index: number, char: string) {\r\n    const newValues = [...inputValues];\r\n    newValues[index] = char;\r\n    const newCode = newValues.join('');\r\n    // Focus the input after the last valid digit\r\n    // focusInput({ index: newCode.length + 1 });\r\n    if (index > newCode.length) {\r\n      setActiveInputIndex(newCode.length);\r\n    }\r\n    updateCode(newCode);\r\n  }\r\n\r\n  function reset() {\r\n    setVerificationState({ status: 'idle' });\r\n    setCanResendCode(true);\r\n    updateCode(BLANK_CHAR.repeat(length));\r\n    focusInput({ index: 0 });\r\n  }\r\n\r\n  function handleResendCode() {\r\n    onResendCode?.();\r\n    reset();\r\n    setCanResendCode(false);\r\n  }\r\n\r\n  function focusInput(opts: { index: number } | { dir: 'next' | 'prev' }) {\r\n    let clampedIndex = 'index' in opts ? opts.index : activeInputIndex + (opts.dir === 'next' ? 1 : -1);\r\n    clampedIndex = Math.max(Math.min(length - 1, clampedIndex), 0);\r\n    setActiveInputIndex(clampedIndex);\r\n  }\r\n\r\n  function selectInputContentAt(index: number) {\r\n    const ref = inputRefs[Math.max(Math.min(length - 1, index), 0)].current;\r\n    if (ref) {\r\n      ref.focus();\r\n      ref.select();\r\n    }\r\n  }\r\n\r\n  function handleOnFocus(index: number) {\r\n    if (verificationState.status === 'failed') {\r\n      return reset();\r\n    }\r\n    focusInput({ index });\r\n  }\r\n\r\n  function handleWebOtp(code: string | undefined) {\r\n    if (!code || code.length !== length) {\r\n      return;\r\n    }\r\n    updateCode(code);\r\n    focusInput({ index: length - 1 });\r\n  }\r\n\r\n  function handleOnPaste(e: React.ClipboardEvent<HTMLInputElement>) {\r\n    const clipboardText = e.clipboardData.getData('text/plain') || '';\r\n    if (clipboardText.length === 0 || !clipboardText.split('').every(char => isValidInput(char))) {\r\n      return;\r\n    }\r\n\r\n    if (clipboardText.length === length) {\r\n      updateCode(clipboardText);\r\n      focusInput({ index: length - 1 });\r\n      return;\r\n    }\r\n\r\n    const newInputValues = inputValues.map((val, i) =>\r\n      i < activeInputIndex ? val : clipboardText[i - activeInputIndex] || val,\r\n    );\r\n    updateCode(newInputValues.join(''));\r\n    focusInput({ index: activeInputIndex + clipboardText.length - 1 });\r\n  }\r\n\r\n  function handleOnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\r\n    switch (e.key) {\r\n      case 'Backspace':\r\n        e.preventDefault();\r\n        updateCodeValueAt(activeInputIndex, BLANK_CHAR);\r\n        focusInput({ dir: 'prev' });\r\n        return;\r\n      case 'ArrowLeft':\r\n        e.preventDefault();\r\n        focusInput({ dir: 'prev' });\r\n        return;\r\n      case 'ArrowRight':\r\n        e.preventDefault();\r\n        focusInput({ dir: 'next' });\r\n        return;\r\n      case ' ':\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n  }\r\n\r\n  const handleOnChange = (el: HTMLInputElement) => {\r\n    const { value } = el;\r\n    if (isValidInput(value)) {\r\n      updateCodeValueAt(activeInputIndex, value);\r\n    }\r\n  };\r\n\r\n  const handleOnInput = (e: React.FormEvent<HTMLInputElement>) => {\r\n    if (verificationState.status === 'failed') {\r\n      return reset();\r\n    }\r\n\r\n    if ((e.target as any).value) {\r\n      // If a user selects an input that's already filled\r\n      // and types the same value, the onChange event will not fire,\r\n      // but we still want to focus the next\r\n      focusInput({ dir: 'next' });\r\n    }\r\n  };\r\n\r\n  const inputFields = inputValues.map((value, i) => (\r\n    <Input\r\n      key={i}\r\n      ref={inputRefs[i]}\r\n      value={value}\r\n      handleChange={handleOnChange}\r\n      onInput={handleOnInput}\r\n      onKeyDown={handleOnKeyDown}\r\n      onFocus={() => handleOnFocus(i)}\r\n      onPaste={handleOnPaste}\r\n      autoFocus={autoFocus && verificationState.status === 'idle' && i === activeInputIndex}\r\n      maxLength={1}\r\n      autoComplete='one-time-code'\r\n      type='text'\r\n      inputMode='numeric'\r\n      name={`codeInput-${i}`}\r\n      disabled={verificationState.status === 'loading' || verificationState.status === 'verified'}\r\n      className={cn(styles.codeInput, {\r\n        [styles.error]: verificationState.status === 'failed',\r\n        [styles.verified]: verificationState.status === 'verified',\r\n      })}\r\n      aria-label={`${i === 0 ? 'Enter verification code. ' : ''}${'Digit'} ${i + 1}`}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <div\r\n        data-test-id='otp-container'\r\n        className={styles.inputContainer}\r\n      >\r\n        {inputFields}\r\n      </div>\r\n      <div className={styles.statusContainer}>\r\n        {verificationState.status === 'loading' && <Spinner />}\r\n        {verificationState.status === 'idle' && onResendCode && (\r\n          <Button\r\n            onClick={handleResendCode}\r\n            className={cn(styles.resendCode, resendCodeButtonClassName)}\r\n            disabled={!canResendCode}\r\n            flavor='link'\r\n          >\r\n            Resend Code\r\n          </Button>\r\n        )}\r\n        {verificationState.status === 'failed' && (\r\n          <span className={styles.errorMessage}>{verificationState.message}</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { useInput } from '../../hooks';\r\n// @ts-ignore\r\nimport styles from './Input.module.scss';\r\n\r\nexport type InputType =\r\n  | 'button'\r\n  | 'checkbox'\r\n  | 'color'\r\n  | 'date'\r\n  | 'datetime-local'\r\n  | 'email'\r\n  | 'file'\r\n  | 'hidden'\r\n  | 'image'\r\n  | 'month'\r\n  | 'number'\r\n  | 'password'\r\n  | 'radio'\r\n  | 'range'\r\n  | 'reset'\r\n  | 'search'\r\n  | 'submit'\r\n  | 'tel'\r\n  | 'text'\r\n  | 'time'\r\n  | 'url'\r\n  | 'week';\r\n\r\nexport type InputProps = {\r\n  ref?: React.Ref<HTMLInputElement>;\r\n  name?: string;\r\n  value?: string;\r\n  readOnly?: boolean;\r\n  disabled?: boolean;\r\n  placeholder?: string;\r\n  type?: InputType;\r\n  hasError?: boolean;\r\n  className?: string;\r\n  handleChange?: (el: HTMLInputElement) => void;\r\n} & React.InputHTMLAttributes<HTMLInputElement> &\r\n  React.AriaAttributes;\r\n\r\nexport const Input: React.FC<InputProps> = React.forwardRef(\r\n  ({ type = 'text', name, value, handleChange, className, hasError, ...rest }: InputProps, ref) => {\r\n    const { onChange } = useInput(handleChange);\r\n\r\n    return (\r\n      <input\r\n        {...rest}\r\n        ref={ref}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        className={cn(styles.input, { [styles.error]: hasError }, className)}\r\n      />\r\n    );\r\n  },\r\n);\r\nInput.displayName = 'Input';\r\n", "import React from 'react';\r\n\r\nexport type DetectClickOutsideResponse = [boolean, React.Dispatch<React.SetStateAction<boolean>>] & {\r\n  isActive: boolean;\r\n  setIsActive: React.Dispatch<React.SetStateAction<boolean>>;\r\n};\r\n\r\nexport const useDetectClickOutside = (\r\n  el: React.MutableRefObject<HTMLElement | undefined | null>,\r\n  defaultActive: boolean,\r\n  callback?: () => void,\r\n) => {\r\n  const [isActive, setIsActive] = React.useState(defaultActive);\r\n\r\n  React.useEffect(() => {\r\n    const pageClickEvent = (e: MouseEvent) => {\r\n      if (el.current && !el.current.contains(e.target as Node)) {\r\n        setIsActive(!isActive);\r\n\r\n        if (typeof callback === 'function') {\r\n          callback();\r\n        }\r\n      }\r\n    };\r\n\r\n    if (isActive) {\r\n      window.addEventListener('mousedown', pageClickEvent);\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener('mousedown', pageClickEvent);\r\n    };\r\n  }, [isActive, el]);\r\n\r\n  const result = [isActive, setIsActive] as DetectClickOutsideResponse;\r\n\r\n  result.isActive = result[0];\r\n  result.setIsActive = result[1];\r\n\r\n  return result;\r\n};\r\n", "import React from 'react';\r\n\r\nexport function useDomRef(querySelector?: string): React.MutableRefObject<HTMLElement | null> {\r\n  const root = React.useRef<HTMLElement | null>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (typeof window === 'undefined') {\r\n      return;\r\n    }\r\n    root.current = querySelector ? document.querySelector(querySelector) : null;\r\n  }, []);\r\n\r\n  return root;\r\n}\r\n", "import React from 'react';\r\n\r\nexport function useLocalStorage<T>(key: string, initialValue: T) {\r\n  key = 'clerk:' + key;\r\n  const [storedValue, setStoredValue] = React.useState<T>(() => {\r\n    try {\r\n      const item = window.localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  const setValue = (value: ((stored: T) => T) | T) => {\r\n    try {\r\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n      setStoredValue(valueToStore);\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue] as const;\r\n}\r\n", "import React from 'react';\r\n\r\nexport function useMounted() {\r\n  const componentIsMounted = React.useRef(false);\r\n\r\n  React.useEffect(() => {\r\n    componentIsMounted.current = true;\r\n\r\n    return () => {\r\n      componentIsMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  return componentIsMounted;\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { Input, InputProps } from './Input';\r\n// @ts-ignore\r\nimport styles from './InputWithIcon.module.scss';\r\n\r\nexport type InputWithIconProps = InputProps & {\r\n  Icon: React.ReactNode;\r\n  position?: 'left' | 'right';\r\n};\r\n\r\nexport const InputWithIcon: React.FC<InputWithIconProps> = React.forwardRef(\r\n  ({ Icon, position = 'left', ...rest }: InputWithIconProps, ref) => {\r\n    return (\r\n      <div className={cn(styles.container, styles[position])}>\r\n        <div className={styles.iconContainer}>{Icon}</div>\r\n        <Input\r\n          ref={ref}\r\n          {...rest}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n);\r\nInputWithIcon.displayName = 'InputWithIcon';\r\n", "import { EnvironmentResource } from '@clerk/types';\n\nexport function magicLinksEnabledForInstance(env: EnvironmentResource): boolean {\n  const { userSettings } = env;\n  const { email_address } = userSettings.attributes;\n  return email_address.enabled && email_address.verifications.includes('email_link');\n}\n", "import { Button } from '@clerk/shared/components/button';\nimport { PhoneViewer } from '@clerk/shared/components/phoneInput';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport React from 'react';\nimport { handleError } from 'ui/common';\nimport { Error } from 'ui/common/error';\n\ninterface EditableListFieldRemoveCardProps {\n  type: 'phone' | 'email';\n  label: string;\n  onCancel: () => void;\n  onRemove: () => Promise<any>;\n  onRemoved?: () => void;\n}\n\nexport const EditableListFieldRemoveCard: React.FC<EditableListFieldRemoveCardProps> = ({\n  type,\n  label,\n  onCancel,\n  onRemove,\n  onRemoved,\n}) => {\n  const lowerLabel = label.toLowerCase();\n  const [error, setError] = React.useState<string | undefined>();\n\n  const updateFieldSubmit = async () => {\n    try {\n      await onRemove();\n      if (typeof onRemoved === 'function') {\n        await onRemoved();\n      }\n    } catch (err) {\n      handleError(err, [], setError);\n    }\n  };\n\n  return (\n    <TitledCard\n      title={`Remove ${type}`}\n      subtitle='Confirm removal'\n      className='cl-themed-card cl-verifiable-field-card'\n    >\n      <Error>{error}</Error>\n      <div className='cl-copy-text'>\n        <p>\n          {type === 'phone' ? (\n            <PhoneViewer\n              className='cl-identifier'\n              phoneNumber={lowerLabel}\n            />\n          ) : (\n            <span className='cl-identifier'>{lowerLabel}</span>\n          )}{' '}\n          will be removed from this account.\n        </p>\n        {type === 'email' && (\n          <p>\n            You\u2019ll no longer receive communications to this email address, and you cannot use it when signing in to\n            identify yourself.\n          </p>\n        )}\n        {type === 'phone' && (\n          <p>\n            You will no longer receive messages to this number, and you cannot use it when signing in to identify\n            yourself.\n          </p>\n        )}\n      </div>\n      <div className='cl-form-button-group'>\n        <Button onClick={updateFieldSubmit}>Remove {type}</Button>\n        <Button\n          flavor='text'\n          type='reset'\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </TitledCard>\n  );\n};\n", "import React, { useState } from 'react';\r\n\r\nimport { useLocalStorage } from '../../hooks';\r\nimport { Dropdown, DropdownOption, DropdownSelection } from '../dropdown';\r\nimport { DropdownComparator } from '../dropdown/types';\r\nimport { Input, InputProps } from '../input';\r\nimport { CountryEntry, IsoToCountryMap } from './countryCodeData';\r\n// @ts-ignore\r\nimport styles from './PhoneInput.module.scss';\r\nimport { extractDigits, formatPhoneNumber, getFlagEmojiFromCountryIso } from './utils';\r\n\r\nexport type PhoneInputProps = InputProps & {\r\n  handlePhoneChange: (phoneWithCode: string) => any;\r\n  className?: string;\r\n  hasError?: boolean;\r\n  style?: Record<string, unknown>;\r\n};\r\n\r\n// TODO: use clerk flag assets once we can bundle them\r\nconst createCountryOptionLabel = ({ name, iso, code }: CountryEntry) => {\r\n  return (\r\n    <div className={styles.optionContainer}>\r\n      {/*<div className={cn(styles.flag, flags.icon, flags[iso])} />*/}\r\n      <div className={styles.flag}>{getFlagEmojiFromCountryIso(iso)}</div>\r\n      <div className={styles.country}>{name}</div>\r\n      <div className={styles.code}>+{code}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst createDropdownOption = (country: CountryEntry): DropdownOption => ({\r\n  value: country.iso,\r\n  label: createCountryOptionLabel(country),\r\n  nativeOption: createNativeSelectOption(country),\r\n});\r\n\r\nconst createNativeSelectOption = ({ iso, name, code }: CountryEntry) => (\r\n  <option\r\n    value={iso}\r\n    key={iso}\r\n  >\r\n    {getFlagEmojiFromCountryIso(iso)} {name} (+{code})\r\n  </option>\r\n);\r\n\r\nconst dropdownOptions = [...IsoToCountryMap.values()].map(createDropdownOption);\r\n\r\nconst countryDropdownComparator: DropdownComparator = (term, option: DropdownOption) => {\r\n  let searchVal: string;\r\n  if (typeof option !== 'string') {\r\n    const country = IsoToCountryMap.get(option.value);\r\n    const countryName = country ? country.name : '';\r\n    const countryCode = country ? country.code : '';\r\n    searchVal = `${option.value} ${countryName} ${countryCode}`;\r\n  } else {\r\n    searchVal = option;\r\n  }\r\n  return (searchVal || '').toLowerCase().includes((term || '').toLowerCase());\r\n};\r\n\r\nexport function PhoneInput({ handlePhoneChange, hasError, autoFocus = true, ...rest }: PhoneInputProps): JSX.Element {\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n  const [selectedIso, setSelectedIso] = useLocalStorage<string>('selectedCountryIso', 'us');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  const focusInput = () => {\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!phoneNumber) {\r\n      return;\r\n    }\r\n    const dialCode = IsoToCountryMap.get(selectedIso)?.code || '1';\r\n    handlePhoneChange('+' + extractDigits(`${dialCode}${phoneNumber}`));\r\n  }, [handlePhoneChange, selectedIso, phoneNumber]);\r\n\r\n  React.useEffect(() => {\r\n    formatAndSetPhoneNumber(phoneNumber);\r\n  }, [phoneNumber, selectedIso]);\r\n\r\n  const formatAndSetPhoneNumber = (newPhoneNumber: string) => {\r\n    const country = IsoToCountryMap.get(selectedIso);\r\n    const pattern = country?.pattern;\r\n    const code = country?.code;\r\n    setPhoneNumber(formatPhoneNumber(newPhoneNumber, pattern, code));\r\n  };\r\n\r\n  const handlePhoneValueChange = (el: HTMLInputElement) => {\r\n    formatAndSetPhoneNumber(el.value);\r\n  };\r\n\r\n  const handleCountrySelection = ({ value }: DropdownSelection | { value: string }) => {\r\n    setSelectedIso(value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.dropdownContainer}>\r\n        <Dropdown\r\n          name='country-code-picker'\r\n          active={false}\r\n          className={styles.dropdown}\r\n          options={dropdownOptions}\r\n          selectedOption={selectedIso}\r\n          selectedOptionClassname={styles.selectedOption}\r\n          handleChange={handleCountrySelection}\r\n          handleDropdownClosed={focusInput}\r\n          searchable\r\n          customComparator={countryDropdownComparator}\r\n        />\r\n      </div>\r\n      <Input\r\n        ref={inputRef}\r\n        value={phoneNumber}\r\n        handleChange={handlePhoneValueChange}\r\n        type='tel'\r\n        maxLength={25}\r\n        hasError={!!hasError}\r\n        autoFocus={autoFocus}\r\n        {...rest}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { useDetectClickOutside } from '../../hooks';\r\nimport { ExpansionIcon } from '../expansionIcon';\r\n// @ts-ignore\r\nimport styles from './Dropdown.module.scss';\r\nimport { DropdownList } from './DropdownList';\r\nimport type { DropdownComparator, DropdownOption } from './types';\r\nimport { defaultComparator, findSelectedOptionIndex, getOptionLabel, makeComparator } from './util';\r\n\r\nconst getNativeOption = (o: DropdownOption) => {\r\n  if (typeof o === 'string') {\r\n    return (\r\n      <option\r\n        value={o}\r\n        key={'option-' + o}\r\n      >\r\n        {o}\r\n      </option>\r\n    );\r\n  }\r\n  return o.nativeOption;\r\n};\r\n\r\nexport type DropdownSelection = {\r\n  name: string;\r\n  value: string;\r\n  type: 'dropdown';\r\n};\r\n\r\nexport type DropdownProps = {\r\n  /** Should be unique to the attribute that is aiming to change. Translated to #id for the dropdown list */\r\n  name?: string;\r\n  options: DropdownOption[];\r\n  selectedOption?: string;\r\n  selectedOptionClassname?: string;\r\n  defaultSelectedIndex?: number;\r\n  active?: boolean;\r\n  Icon?: React.ReactNode;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  showCaret?: boolean;\r\n  style?: any;\r\n  /** Enable input filtered dropdown list behaviour */\r\n  searchable?: boolean;\r\n  handleChange?: (el: DropdownSelection) => void;\r\n  handleDropdownClosed?: () => void;\r\n  /** Custom compare function for the list filtering */\r\n  customComparator?: DropdownComparator;\r\n  labelClassname?: string;\r\n  tertiary?: boolean;\r\n};\r\n\r\nexport function Dropdown({\r\n  name,\r\n  options = [],\r\n  selectedOption,\r\n  selectedOptionClassname,\r\n  defaultSelectedIndex,\r\n  active,\r\n  Icon,\r\n  placeholder,\r\n  disabled,\r\n  className,\r\n  showCaret = true,\r\n  style,\r\n  searchable = false,\r\n  handleChange,\r\n  handleDropdownClosed,\r\n  customComparator,\r\n  labelClassname,\r\n  tertiary = false,\r\n}: DropdownProps): JSX.Element {\r\n  const dropdownRef = React.useRef<HTMLUListElement>(null);\r\n  const selectionRef = React.useRef<HTMLLIElement>(null);\r\n  const searchInputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const nativeOptions = React.useMemo(() => options.map(getNativeOption).filter(o => o), [options]);\r\n\r\n  const [selectedIndex, setSelectedIndex] = React.useState(() => {\r\n    if (defaultSelectedIndex != null && defaultSelectedIndex >= 0) {\r\n      return defaultSelectedIndex;\r\n    }\r\n\r\n    return options.findIndex(option => {\r\n      const preSelectedOption = typeof option === 'string' ? option : option.value;\r\n      return preSelectedOption === selectedOption;\r\n    });\r\n  });\r\n\r\n  const [isActive, setIsActive] = useDetectClickOutside(dropdownRef, !!active);\r\n  const [isSearchInputActive, setSearchInputActive] = useDetectClickOutside(searchInputRef, false);\r\n  const [searchValue, setSearchValue] = React.useState('');\r\n  const displayLabel = getOptionLabel(options[selectedIndex], placeholder);\r\n\r\n  const handleSearchInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newSearchValue = e.currentTarget.value;\r\n    setSearchValue(newSearchValue);\r\n    setSelectedIndex(0);\r\n  };\r\n\r\n  const comparator = makeComparator(searchValue, customComparator || defaultComparator);\r\n  const filteredOptions = searchValue ? options.filter(comparator) : options;\r\n\r\n  React.useEffect(() => {\r\n    if (isActive || !handleDropdownClosed) {\r\n      return;\r\n    }\r\n    handleDropdownClosed();\r\n  }, [isActive]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      name &&\r\n      selectedIndex != null &&\r\n      selectedIndex >= 0 &&\r\n      options.length > 0 &&\r\n      typeof handleChange === 'function'\r\n    ) {\r\n      const selectedOption = options[selectedIndex];\r\n      const value = typeof selectedOption === 'string' ? selectedOption : selectedOption.value;\r\n\r\n      handleChange({\r\n        name,\r\n        value,\r\n        type: 'dropdown',\r\n      });\r\n    }\r\n  }, [selectedIndex]);\r\n\r\n  React.useLayoutEffect(() => {\r\n    if (!isActive || !selectionRef.current?.scrollIntoView || selectedIndex == undefined) {\r\n      return;\r\n    }\r\n    selectionRef.current.scrollIntoView({ block: 'nearest' });\r\n  }, [isActive, selectedIndex, searchValue]);\r\n\r\n  const onTriggerClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsActive(!isActive);\r\n  };\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Escape') {\r\n      e.preventDefault();\r\n      setIsActive(false);\r\n      return;\r\n    }\r\n\r\n    if (e.key === 'ArrowUp') {\r\n      e.preventDefault();\r\n      if (isActive) {\r\n        setSelectedIndex((i = 0) => (i - 1 < 0 || i - 1 > filteredOptions.length ? filteredOptions.length - 1 : i - 1));\r\n      } else {\r\n        setIsActive(true);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (e.key === 'ArrowDown') {\r\n      e.preventDefault();\r\n      if (isActive) {\r\n        setSelectedIndex(i => ((i || 0) + 1) % filteredOptions.length);\r\n      } else {\r\n        setIsActive(true);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (e.key === 'Enter') {\r\n      setSelectedIndex(i => {\r\n        return i >= filteredOptions.length\r\n          ? findSelectedOptionIndex(options, filteredOptions[0])\r\n          : findSelectedOptionIndex(options, filteredOptions[selectedIndex]);\r\n      });\r\n      searchInputRef.current?.blur();\r\n      setSearchInputActive(false);\r\n      setSearchValue('');\r\n      e.preventDefault();\r\n      setIsActive(!isActive);\r\n    }\r\n  };\r\n\r\n  const handleListSelection = (selectedOption: DropdownOption) => {\r\n    searchInputRef.current?.blur();\r\n    const selectedIndex = findSelectedOptionIndex(options, selectedOption);\r\n    setSearchValue('');\r\n    setSearchInputActive(false);\r\n    setSelectedIndex(selectedIndex);\r\n    setIsActive(false);\r\n  };\r\n\r\n  const onSearchInputFocus = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setSearchInputActive(true);\r\n    searchInputRef.current?.focus();\r\n    setIsActive(true);\r\n  };\r\n\r\n  const onSearchInputBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    e.stopPropagation();\r\n    setIsActive(false);\r\n    setSearchValue('');\r\n    setSearchInputActive(false);\r\n  };\r\n\r\n  const onSearchInputClick: React.MouseEventHandler = e => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(styles.container, { [styles.disabled]: disabled }, className)}\r\n      style={style}\r\n      onKeyDown={onKeyDown}\r\n      onBlur={() => isActive && setIsActive(false)}\r\n    >\r\n      {searchable ? (\r\n        <div\r\n          onFocus={onSearchInputFocus}\r\n          tabIndex={0}\r\n          className={cn(styles.trigger)}\r\n          onClick={onSearchInputClick}\r\n        >\r\n          {Icon}\r\n          <input\r\n            className={cn(styles.searchInput)}\r\n            ref={searchInputRef}\r\n            value={searchValue}\r\n            type='text'\r\n            autoComplete='off'\r\n            aria-haspopup='listbox'\r\n            aria-autocomplete='list'\r\n            aria-controls={name}\r\n            role='combobox'\r\n            aria-expanded={isSearchInputActive}\r\n            tabIndex={0}\r\n            onChange={handleSearchInput}\r\n            onBlur={onSearchInputBlur}\r\n            data-no-focus={true}\r\n          />\r\n          {!isSearchInputActive && (\r\n            <span\r\n              className={cn(styles.label, styles.searchDisplay, selectedOptionClassname, {\r\n                [styles.placeholder]: !options[selectedIndex],\r\n              })}\r\n            >\r\n              {displayLabel}\r\n            </span>\r\n          )}\r\n          {showCaret && <ExpansionIcon isExpanded={isActive} />}\r\n        </div>\r\n      ) : (\r\n        <button\r\n          onClick={onTriggerClick}\r\n          className={cn(styles.trigger, {\r\n            [styles.active]: isActive,\r\n            [styles.tertiary]: tertiary,\r\n          })}\r\n          aria-haspopup='true'\r\n          aria-expanded={isActive}\r\n          type='button'\r\n        >\r\n          {Icon}\r\n          <span\r\n            className={cn(styles.label, labelClassname, {\r\n              [styles.placeholder]: !options[selectedIndex],\r\n              [styles.labelTertiary]: tertiary,\r\n            })}\r\n          >\r\n            {displayLabel}\r\n          </span>\r\n          {showCaret && <ExpansionIcon isExpanded={isActive} />}\r\n        </button>\r\n      )}\r\n      {isActive && (\r\n        <DropdownList\r\n          dropdownRef={dropdownRef}\r\n          selectionRef={selectionRef}\r\n          options={filteredOptions}\r\n          handleListSelection={handleListSelection}\r\n          selectedIndex={selectedIndex}\r\n          listId={name}\r\n        />\r\n      )}\r\n      {nativeOptions.length > 0 && (\r\n        <select\r\n          name='native-dropdown-picker'\r\n          className={styles.nativeSelect}\r\n          onChange={e => setSelectedIndex(e.target.selectedIndex)}\r\n        >\r\n          {nativeOptions}\r\n        </select>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "export { ExpansionIcon } from './ExpansionIcon';\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { CaretIcon } from '../../assets/icons';\r\nimport type { SvgrComponent } from '../../assets/icons/svg';\r\n// @ts-ignore\r\nimport styles from './ExpansionIcon.module.scss';\r\n\r\ntype ExpansionIconProps = {\r\n  isExpanded: boolean;\r\n  /* Custom styles for the caret icon */\r\n  iconClassName?: string;\r\n  /* Styles for the transition between active <-> inactive */\r\n  transitionClassName?: string;\r\n  CustomExpansionIcon?: SvgrComponent;\r\n};\r\n\r\n/**\r\n * Expansion icon used across apps to show expansion panel state, dropdowns and more.\r\n */\r\nexport function ExpansionIcon({\r\n  isExpanded,\r\n  iconClassName,\r\n  transitionClassName,\r\n  CustomExpansionIcon,\r\n}: ExpansionIconProps): JSX.Element {\r\n  const Icon = CustomExpansionIcon || CaretIcon;\r\n  return (\r\n    <Icon className={cn(styles.caret, { [transitionClassName || styles.activeCaret]: isExpanded }, iconClassName)} />\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\n// @ts-ignore\r\nimport styles from './DropdownList.module.scss';\r\nimport type { DropdownOption } from './types';\r\nimport { getOptionLabel } from './util';\r\n\r\nconst NoResultsItem = () => <li className={cn(styles.item, styles.noResults)}>No matches found</li>;\r\n\r\nexport type DropdownListProps = {\r\n  dropdownRef: React.RefObject<HTMLUListElement>;\r\n  selectionRef: React.RefObject<HTMLLIElement>;\r\n  listClassName?: string;\r\n  options: DropdownOption[];\r\n  handleListSelection: (selectedOption: DropdownOption) => void;\r\n  selectedIndex: number;\r\n  listId?: string;\r\n};\r\n\r\nexport function DropdownList({\r\n  dropdownRef,\r\n  selectionRef,\r\n  listClassName,\r\n  options,\r\n  handleListSelection,\r\n  selectedIndex,\r\n  listId,\r\n}: DropdownListProps): JSX.Element {\r\n  return (\r\n    <ul\r\n      ref={dropdownRef}\r\n      className={cn(styles.itemList, listClassName)}\r\n      role='listbox'\r\n      id={listId}\r\n      tabIndex={-1}\r\n    >\r\n      {options.length ? (\r\n        options.map((option, index) => (\r\n          <li\r\n            key={index}\r\n            ref={index === selectedIndex ? selectionRef : null}\r\n            aria-selected={index === selectedIndex}\r\n            role='option'\r\n            className={cn(styles.item, {\r\n              [styles.selected]: index === selectedIndex,\r\n            })}\r\n            onMouseDown={e => {\r\n              e.preventDefault();\r\n              handleListSelection(option);\r\n            }}\r\n          >\r\n            {getOptionLabel(option)}\r\n          </li>\r\n        ))\r\n      ) : (\r\n        <NoResultsItem />\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n", "import { DropdownComparator, DropdownOption } from './types';\r\n\r\nexport const getOptionLabel = (selectedOption: DropdownOption, placeholder = '') => {\r\n  return typeof selectedOption === 'string' ? selectedOption : selectedOption?.label || placeholder;\r\n};\r\n\r\nexport const findSelectedOptionIndex = (options: DropdownOption[], selectedOption: DropdownOption): number => {\r\n  if (!options || options.length === 0 || !selectedOption) {\r\n    return 0;\r\n  }\r\n\r\n  return options.findIndex(option => {\r\n    const optionValue = typeof option === 'string' ? option : option.value;\r\n    const selectedOptionValue = typeof selectedOption === 'string' ? selectedOption : selectedOption.value;\r\n    return optionValue === selectedOptionValue;\r\n  });\r\n};\r\n\r\nexport const makeComparator =\r\n  (term: string | undefined, comparatorFn: DropdownComparator) => (option: DropdownOption) => {\r\n    if (!term) {\r\n      return () => true;\r\n    }\r\n    return comparatorFn(term, option);\r\n  };\r\n\r\nexport const defaultComparator: DropdownComparator = (term, option): boolean => {\r\n  if (!term || !option) {\r\n    return true;\r\n  }\r\n\r\n  const valueToFilter = typeof option === 'string' ? option : option.value;\r\n  return (valueToFilter || '').toLowerCase().includes((term || '').toLowerCase());\r\n};\r\n", "type CountryName = string;\r\ntype CountryIso = string;\r\ntype DialingCode = string;\r\ntype PhonePattern = string;\r\n\r\ntype PositionalCountryType = [CountryName, CountryIso, DialingCode, PhonePattern?];\r\n\r\nconst data: PositionalCountryType[] = [\r\n  ['United States', 'us', '1', '(...) ...-....'],\r\n  ['United Kingdom', 'gb', '44', '.... ......'],\r\n  ['India', 'in', '91', '.....-.....'],\r\n  ['Canada', 'ca', '1', '(...) ...-....'],\r\n  ['Russia', 'ru', '7', '... ...-..-..'],\r\n  ['Afghanistan', 'af', '93'],\r\n  ['Albania', 'al', '355'],\r\n  ['Algeria ', 'dz', '213'],\r\n  ['American Samoa', 'as', '1684'],\r\n  ['Andorra', 'ad', '376'],\r\n  ['Angola', 'ao', '244'],\r\n  ['Anguilla', 'ai', '1264'],\r\n  ['Antigua and Barbuda', 'ag', '1268'],\r\n  ['Argentina', 'ar', '54'],\r\n  ['Armenia', 'am', '374'],\r\n  ['Aruba', 'aw', '297'],\r\n  ['Australia', 'au', '61', '... ... ...'],\r\n  ['Austria', 'at', '43'],\r\n  ['Azerbaijan', 'az', '994'],\r\n  ['Bahamas', 'bs', '1242'],\r\n  ['Bahrain', 'bh', '973'],\r\n  ['Bangladesh', 'bd', '880'],\r\n  ['Barbados', 'bb', '1246'],\r\n  ['Belarus', 'by', '375'],\r\n  ['Belgium', 'be', '32', '... .. .. ..'],\r\n  ['Belize', 'bz', '501'],\r\n  ['Benin', 'bj', '229'],\r\n  ['Bermuda', 'bm', '1441'],\r\n  ['Bhutan', 'bt', '975'],\r\n  ['Bolivia', 'bo', '591'],\r\n  ['Bosnia and Herzegovina', 'ba', '387'],\r\n  ['Botswana', 'bw', '267'],\r\n  ['Brazil', 'br', '55'],\r\n  ['British Indian Ocean Territory', 'io', '246'],\r\n  ['British Virgin Islands', 'vg', '1284'],\r\n  ['Brunei', 'bn', '673'],\r\n  ['Bulgaria', 'bg', '359'],\r\n  ['Burkina Faso', 'bf', '226'],\r\n  ['Burundi', 'bi', '257'],\r\n  ['Cambodia', 'kh', '855'],\r\n  ['Cameroon', 'cm', '237'],\r\n  ['Cape Verde', 'cv', '238'],\r\n  ['Caribbean Netherlands', 'bq', '599'],\r\n  ['Cayman Islands', 'ky', '1345'],\r\n  ['Central African Republic', 'cf', '236'],\r\n  ['Chad', 'td', '235'],\r\n  ['Chile', 'cl', '56'],\r\n  ['China', 'cn', '86', '..-........'],\r\n  ['Colombia', 'co', '57'],\r\n  ['Comoros', 'km', '269'],\r\n  ['Congo', 'cd', '243'],\r\n  ['Congo', 'cg', '242'],\r\n  ['Cook Islands', 'ck', '682'],\r\n  ['Costa Rica', 'cr', '506', '....-....'],\r\n  ['C\u00F4te d\u2019Ivoire', 'ci', '225'],\r\n  ['Croatia', 'hr', '385'],\r\n  ['Cuba', 'cu', '53'],\r\n  ['Cura\u00E7ao', 'cw', '599'],\r\n  ['Cyprus', 'cy', '357'],\r\n  ['Czech Republic', 'cz', '420'],\r\n  ['Denmark', 'dk', '45', '.. .. .. ..'],\r\n  ['Djibouti', 'dj', '253'],\r\n  ['Dominica', 'dm', '1767'],\r\n  ['Dominican Republic', 'do', '1'],\r\n  ['Ecuador', 'ec', '593'],\r\n  ['Egypt', 'eg', '20'],\r\n  ['El Salvador', 'sv', '503', '....-....'],\r\n  ['Equatorial Guinea', 'gq', '240'],\r\n  ['Eritrea', 'er', '291'],\r\n  ['Estonia', 'ee', '372'],\r\n  ['Ethiopia', 'et', '251'],\r\n  ['Falkland Islands', 'fk', '500'],\r\n  ['Faroe Islands', 'fo', '298'],\r\n  ['Fiji', 'fj', '679'],\r\n  ['Finland', 'fi', '358', '.. ... .. ..'],\r\n  ['France', 'fr', '33', '. .. .. .. ..'],\r\n  ['French Guiana', 'gf', '594'],\r\n  ['French Polynesia', 'pf', '689'],\r\n  ['Gabon', 'ga', '241'],\r\n  ['Gambia', 'gm', '220'],\r\n  ['Georgia', 'ge', '995'],\r\n  ['Germany', 'de', '49', '... .......'],\r\n  ['Ghana', 'gh', '233'],\r\n  ['Gibraltar', 'gi', '350'],\r\n  ['Greece', 'gr', '30', '... .......'],\r\n  ['Greenland', 'gl', '299'],\r\n  ['Grenada', 'gd', '1473'],\r\n  ['Guadeloupe', 'gp', '590'],\r\n  ['Guam', 'gu', '1671'],\r\n  ['Guatemala', 'gt', '502', '....-....'],\r\n  ['Guinea', 'gn', '224'],\r\n  ['Guinea-Bissau', 'gw', '245'],\r\n  ['Guyana', 'gy', '592'],\r\n  ['Haiti', 'ht', '509', '....-....'],\r\n  ['Honduras', 'hn', '504'],\r\n  ['Hong Kong', 'hk', '852', '.... ....'],\r\n  ['Hungary', 'hu', '36'],\r\n  ['Iceland', 'is', '354', '... ....'],\r\n  ['Indonesia', 'id', '62'],\r\n  ['Iran', 'ir', '98'],\r\n  ['Iraq', 'iq', '964'],\r\n  ['Ireland', 'ie', '353', '.. .......'],\r\n  ['Israel', 'il', '972'],\r\n  ['Italy', 'it', '39', '... ......'],\r\n  ['Jamaica', 'jm', '1876'],\r\n  ['Japan', 'jp', '81', '... .. ....'],\r\n  ['Jordan', 'jo', '962'],\r\n  ['Kazakhstan', 'kz', '7', '... ...-..-..'],\r\n  ['Kenya', 'ke', '254'],\r\n  ['Kiribati', 'ki', '686'],\r\n  ['Kuwait', 'kw', '965'],\r\n  ['Kyrgyzstan', 'kg', '996'],\r\n  ['Laos', 'la', '856'],\r\n  ['Latvia', 'lv', '371'],\r\n  ['Lebanon', 'lb', '961'],\r\n  ['Lesotho', 'ls', '266'],\r\n  ['Liberia', 'lr', '231'],\r\n  ['Libya', 'ly', '218'],\r\n  ['Liechtenstein', 'li', '423'],\r\n  ['Lithuania', 'lt', '370'],\r\n  ['Luxembourg', 'lu', '352'],\r\n  ['Macau', 'mo', '853'],\r\n  ['Macedonia', 'mk', '389'],\r\n  ['Madagascar', 'mg', '261'],\r\n  ['Malawi', 'mw', '265'],\r\n  ['Malaysia', 'my', '60', '..-....-....'],\r\n  ['Maldives', 'mv', '960'],\r\n  ['Mali', 'ml', '223'],\r\n  ['Malta', 'mt', '356'],\r\n  ['Marshall Islands', 'mh', '692'],\r\n  ['Martinique', 'mq', '596'],\r\n  ['Mauritania', 'mr', '222'],\r\n  ['Mauritius', 'mu', '230'],\r\n  ['Mexico', 'mx', '52'],\r\n  ['Micronesia', 'fm', '691'],\r\n  ['Moldova', 'md', '373'],\r\n  ['Monaco', 'mc', '377'],\r\n  ['Mongolia', 'mn', '976'],\r\n  ['Montenegro', 'me', '382'],\r\n  ['Montserrat', 'ms', '1664'],\r\n  ['Morocco', 'ma', '212'],\r\n  ['Mozambique', 'mz', '258'],\r\n  ['Myanmar', 'mm', '95'],\r\n  ['Namibia', 'na', '264'],\r\n  ['Nauru', 'nr', '674'],\r\n  ['Nepal', 'np', '977'],\r\n  ['Netherlands', 'nl', '31', '.. ........'],\r\n  ['New Caledonia', 'nc', '687'],\r\n  ['New Zealand', 'nz', '64', '...-...-....'],\r\n  ['Nicaragua', 'ni', '505'],\r\n  ['Niger', 'ne', '227'],\r\n  ['Nigeria', 'ng', '234'],\r\n  ['Niue', 'nu', '683'],\r\n  ['Norfolk Island', 'nf', '672'],\r\n  ['North Korea', 'kp', '850'],\r\n  ['Northern Mariana Islands', 'mp', '1670'],\r\n  ['Norway', 'no', '47', '... .. ...'],\r\n  ['Oman', 'om', '968'],\r\n  ['Pakistan', 'pk', '92', '...-.......'],\r\n  ['Palau', 'pw', '680'],\r\n  ['Palestine', 'ps', '970'],\r\n  ['Panama', 'pa', '507'],\r\n  ['Papua New Guinea', 'pg', '675'],\r\n  ['Paraguay', 'py', '595'],\r\n  ['Peru', 'pe', '51'],\r\n  ['Philippines', 'ph', '63', '... ....'],\r\n  ['Poland', 'pl', '48', '...-...-...'],\r\n  ['Portugal', 'pt', '351'],\r\n  ['Puerto Rico', 'pr', '1'],\r\n  ['Qatar', 'qa', '974'],\r\n  ['R\u00E9union', 're', '262'],\r\n  ['Romania', 'ro', '40'],\r\n  ['Rwanda', 'rw', '250'],\r\n  ['Saint Barth\u00E9lemy', 'bl', '590'],\r\n  ['Saint Helena', 'sh', '290'],\r\n  ['Saint Kitts and Nevis', 'kn', '1869'],\r\n  ['Saint Lucia', 'lc', '1758'],\r\n  ['Saint Martin', 'mf', '590'],\r\n  ['Saint Pierre and Miquelon', 'pm', '508'],\r\n  ['Saint Vincent and the Grenadines', 'vc', '1784'],\r\n  ['Samoa', 'ws', '685'],\r\n  ['San Marino', 'sm', '378'],\r\n  ['S\u00E3o Tom\u00E9 and Pr\u00EDncipe', 'st', '239'],\r\n  ['Saudi Arabia', 'sa', '966'],\r\n  ['Senegal', 'sn', '221'],\r\n  ['Serbia', 'rs', '381'],\r\n  ['Seychelles', 'sc', '248'],\r\n  ['Sierra Leone', 'sl', '232'],\r\n  ['Singapore', 'sg', '65', '....-....'],\r\n  ['Sint Maarten', 'sx', '1721'],\r\n  ['Slovakia', 'sk', '421'],\r\n  ['Slovenia', 'si', '386'],\r\n  ['Solomon Islands', 'sb', '677'],\r\n  ['Somalia', 'so', '252'],\r\n  ['South Africa', 'za', '27'],\r\n  ['South Korea', 'kr', '82'],\r\n  ['South Sudan', 'ss', '211'],\r\n  ['Spain', 'es', '34', '... ... ...'],\r\n  ['Sri Lanka', 'lk', '94'],\r\n  ['Sudan', 'sd', '249'],\r\n  ['Suriname', 'sr', '597'],\r\n  ['Swaziland', 'sz', '268'],\r\n  ['Sweden', 'se', '46', '.. ... .. ..'],\r\n  ['Switzerland', 'ch', '41', '.. ... .. ..'],\r\n  ['Syria', 'sy', '963'],\r\n  ['Taiwan', 'tw', '886'],\r\n  ['Tajikistan', 'tj', '992'],\r\n  ['Tanzania', 'tz', '255'],\r\n  ['Thailand', 'th', '66'],\r\n  ['Timor-Leste', 'tl', '670'],\r\n  ['Togo', 'tg', '228'],\r\n  ['Tokelau', 'tk', '690'],\r\n  ['Tonga', 'to', '676'],\r\n  ['Trinidad and Tobago', 'tt', '1868'],\r\n  ['Tunisia', 'tn', '216'],\r\n  ['Turkey', 'tr', '90', '... ... .. ..'],\r\n  ['Turkmenistan', 'tm', '993'],\r\n  ['Turks and Caicos Islands', 'tc', '1649'],\r\n  ['Tuvalu', 'tv', '688'],\r\n  ['U.S. Virgin Islands', 'vi', '1340'],\r\n  ['Uganda', 'ug', '256'],\r\n  ['Ukraine', 'ua', '380'],\r\n  ['United Arab Emirates', 'ae', '971'],\r\n  ['Uruguay', 'uy', '598'],\r\n  ['Uzbekistan', 'uz', '998'],\r\n  ['Vanuatu', 'vu', '678'],\r\n  ['Vatican City', 'va', '39', '.. .... ....'],\r\n  ['Venezuela', 've', '58'],\r\n  ['Vietnam', 'vn', '84'],\r\n  ['Wallis and Futuna', 'wf', '681'],\r\n  ['Yemen', 'ye', '967'],\r\n  ['Zambia', 'zm', '260'],\r\n  ['Zimbabwe', 'zw', '263'],\r\n];\r\n\r\nconst UnitedStatesSubAreasSet: ReadonlySet<string> = new Set([\r\n  '907',\r\n  '205',\r\n  '251',\r\n  '256',\r\n  '334',\r\n  '479',\r\n  '501',\r\n  '870',\r\n  '480',\r\n  '520',\r\n  '602',\r\n  '623',\r\n  '928',\r\n  '209',\r\n  '213',\r\n  '310',\r\n  '323',\r\n  '408',\r\n  '415',\r\n  '510',\r\n  '530',\r\n  '559',\r\n  '562',\r\n  '619',\r\n  '626',\r\n  '650',\r\n  '661',\r\n  '707',\r\n  '714',\r\n  '760',\r\n  '805',\r\n  '818',\r\n  '831',\r\n  '858',\r\n  '909',\r\n  '916',\r\n  '925',\r\n  '949',\r\n  '951',\r\n  '303',\r\n  '719',\r\n  '970',\r\n  '203',\r\n  '860',\r\n  '202',\r\n  '302',\r\n  '239',\r\n  '305',\r\n  '321',\r\n  '352',\r\n  '386',\r\n  '407',\r\n  '561',\r\n  '727',\r\n  '772',\r\n  '813',\r\n  '850',\r\n  '863',\r\n  '904',\r\n  '941',\r\n  '954',\r\n  '229',\r\n  '404',\r\n  '478',\r\n  '706',\r\n  '770',\r\n  '912',\r\n  '808',\r\n  '319',\r\n  '515',\r\n  '563',\r\n  '641',\r\n  '712',\r\n  '208',\r\n  '217',\r\n  '309',\r\n  '312',\r\n  '618',\r\n  '630',\r\n  '708',\r\n  '773',\r\n  '815',\r\n  '847',\r\n  '219',\r\n  '260',\r\n  '317',\r\n  '574',\r\n  '765',\r\n  '812',\r\n  '316',\r\n  '620',\r\n  '785',\r\n  '913',\r\n  '270',\r\n  '502',\r\n  '606',\r\n  '859',\r\n  '225',\r\n  '318',\r\n  '337',\r\n  '504',\r\n  '985',\r\n  '413',\r\n  '508',\r\n  '617',\r\n  '781',\r\n  '978',\r\n  '301',\r\n  '410',\r\n  '207',\r\n  '231',\r\n  '248',\r\n  '269',\r\n  '313',\r\n  '517',\r\n  '586',\r\n  '616',\r\n  '734',\r\n  '810',\r\n  '906',\r\n  '989',\r\n  '218',\r\n  '320',\r\n  '507',\r\n  '612',\r\n  '651',\r\n  '763',\r\n  '952',\r\n  '314',\r\n  '417',\r\n  '573',\r\n  '636',\r\n  '660',\r\n  '816',\r\n  '228',\r\n  '601',\r\n  '662',\r\n  '406',\r\n  '252',\r\n  '336',\r\n  '704',\r\n  '828',\r\n  '910',\r\n  '919',\r\n  '701',\r\n  '308',\r\n  '402',\r\n  '603',\r\n  '201',\r\n  '609',\r\n  '732',\r\n  '856',\r\n  '908',\r\n  '973',\r\n  '505',\r\n  '575',\r\n  '702',\r\n  '775',\r\n  '212',\r\n  '315',\r\n  '516',\r\n  '518',\r\n  '585',\r\n  '607',\r\n  '631',\r\n  '716',\r\n  '718',\r\n  '845',\r\n  '914',\r\n  '216',\r\n  '330',\r\n  '419',\r\n  '440',\r\n  '513',\r\n  '614',\r\n  '740',\r\n  '937',\r\n  '405',\r\n  '580',\r\n  '918',\r\n  '503',\r\n  '541',\r\n  '215',\r\n  '412',\r\n  '570',\r\n  '610',\r\n  '717',\r\n  '724',\r\n  '814',\r\n  '401',\r\n  '803',\r\n  '843',\r\n  '864',\r\n  '605',\r\n  '423',\r\n  '615',\r\n  '731',\r\n  '865',\r\n  '901',\r\n  '931',\r\n  '210',\r\n  '214',\r\n  '254',\r\n  '281',\r\n  '325',\r\n  '361',\r\n  '409',\r\n  '432',\r\n  '512',\r\n  '713',\r\n  '806',\r\n  '817',\r\n  '830',\r\n  '903',\r\n  '915',\r\n  '936',\r\n  '940',\r\n  '956',\r\n  '972',\r\n  '979',\r\n  '435',\r\n  '801',\r\n  '276',\r\n  '434',\r\n  '540',\r\n  '703',\r\n  '757',\r\n  '804',\r\n  '802',\r\n  '206',\r\n  '253',\r\n  '360',\r\n  '425',\r\n  '509',\r\n  '262',\r\n  '414',\r\n  '608',\r\n  '715',\r\n  '920',\r\n  '304',\r\n  '307',\r\n]);\r\n\r\nconst CanadaSubAreaSet: ReadonlySet<string> = new Set([\r\n  '204',\r\n  '226',\r\n  '236',\r\n  '249',\r\n  '250',\r\n  '289',\r\n  '306',\r\n  '343',\r\n  '365',\r\n  '387',\r\n  '403',\r\n  '416',\r\n  '418',\r\n  '431',\r\n  '437',\r\n  '438',\r\n  '450',\r\n  '506',\r\n  '514',\r\n  '519',\r\n  '548',\r\n  '579',\r\n  '581',\r\n  '587',\r\n  '604',\r\n  '613',\r\n  '639',\r\n  '647',\r\n  '672',\r\n  '705',\r\n  '709',\r\n  '742',\r\n  '778',\r\n  '780',\r\n  '782',\r\n  '807',\r\n  '819',\r\n  '825',\r\n  '867',\r\n  '873',\r\n  '902',\r\n  '905',\r\n]);\r\n\r\nexport const SubAreaCodeSets: Record<CountryIso, ReadonlySet<string>> = {\r\n  us: UnitedStatesSubAreasSet,\r\n  ca: CanadaSubAreaSet,\r\n};\r\n\r\nexport interface CountryEntry {\r\n  name: CountryName;\r\n  iso: CountryIso;\r\n  code: DialingCode;\r\n  pattern: PhonePattern;\r\n}\r\n\r\nconst createEntry = ([name, iso, code, pattern = '']: PositionalCountryType): CountryEntry => ({\r\n  name,\r\n  iso,\r\n  code,\r\n  pattern,\r\n});\r\n\r\nexport type IsoToCountryMapType = ReadonlyMap<CountryIso, CountryEntry>;\r\nexport const IsoToCountryMap: IsoToCountryMapType = data.reduce(\r\n  (acc, cur) => acc.set(cur[1], createEntry(cur)),\r\n  new Map<CountryIso, CountryEntry>(),\r\n);\r\n\r\nexport type CodeToCountryIsoMapType = ReadonlyMap<CountryIso, CountryIso>;\r\nexport const CodeToCountryIsoMap: CodeToCountryIsoMapType = data.reduce(\r\n  (acc, cur) => acc.set(cur[2], cur[1]),\r\n  new Map<DialingCode, CountryIso>(),\r\n);\r\n", "import { CodeToCountryIsoMap, IsoToCountryMap, SubAreaCodeSets } from './countryCodeData';\r\n\r\n// offset between uppercase ascii and regional indicator symbols\r\nconst OFFSET = 127397;\r\n\r\nexport function getFlagEmojiFromCountryIso(iso: string, fallbackIso = 'us'): string {\r\n  iso = iso || fallbackIso;\r\n  const codePoints = [...iso.toUpperCase()].map(c => c.codePointAt(0)! + OFFSET);\r\n  return String.fromCodePoint(...codePoints);\r\n}\r\n\r\nexport function getCountryIsoFromFormattedNumber(formattedNumber: string, fallbackIso = 'us'): string {\r\n  const number = extractDigits(formattedNumber);\r\n  if (!number || number.length < 4) {\r\n    return fallbackIso;\r\n  }\r\n\r\n  if (number.startsWith('1') && phoneNumberBelongsTo('us', number)) {\r\n    return 'us';\r\n  }\r\n\r\n  if (number.startsWith('1') && phoneNumberBelongsTo('ca', number)) {\r\n    return 'ca';\r\n  }\r\n\r\n  return getCountryIsoFromPhoneCode(number, fallbackIso);\r\n}\r\n\r\nexport function formatPhoneNumber(phoneNumber: string, pattern: string | undefined, countryCode?: string): string {\r\n  if (!phoneNumber || !pattern) {\r\n    return phoneNumber;\r\n  }\r\n\r\n  const digits = [...extractDigits(phoneNumber)].slice(0, maxE164CompliantLength(countryCode));\r\n\r\n  if (digits.length <= 3) {\r\n    return digits.join('');\r\n  }\r\n\r\n  let res = '';\r\n  for (let i = 0; digits.length > 0; i++) {\r\n    if (i > pattern.length - 1) {\r\n      res += digits.shift();\r\n    } else {\r\n      res += pattern[i] === '.' ? digits.shift() : pattern[i];\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\nexport function extractDigits(formattedPhone: string): string {\r\n  return (formattedPhone || '').replace(/[^\\d]/g, '');\r\n}\r\n\r\nfunction getCountryIsoFromPhoneCode(phoneWithCode: string, fallbackIso: string): string {\r\n  // max phone code length is 4 digits\r\n  // try to match more specific codes first\r\n  for (const i of [4, 3, 2]) {\r\n    const potentialCode = phoneWithCode.substring(0, i);\r\n    const countryIso = CodeToCountryIsoMap.get(potentialCode);\r\n    if (countryIso) {\r\n      return countryIso;\r\n    }\r\n  }\r\n  return fallbackIso;\r\n}\r\n\r\nfunction phoneNumberBelongsTo(iso: 'us' | 'ca', phoneWithCode: string) {\r\n  if (!iso || !IsoToCountryMap.get(iso) || !phoneWithCode) {\r\n    return false;\r\n  }\r\n\r\n  const code = phoneWithCode[0];\r\n  const subArea = phoneWithCode.substring(1, 4);\r\n  return (\r\n    code === IsoToCountryMap.get(iso)?.code &&\r\n    phoneWithCode.length - 1 === maxDigitCountForPattern(IsoToCountryMap.get(iso)?.pattern || '') &&\r\n    SubAreaCodeSets[iso].has(subArea)\r\n  );\r\n}\r\n\r\nfunction maxDigitCountForPattern(pattern: string) {\r\n  return (pattern.match(/\\./g) || []).length;\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/E.164\r\nconst MAX_PHONE_NUMBER_LENGTH = 15;\r\n\r\nfunction maxE164CompliantLength(countryCode?: string) {\r\n  const usCountryCode = '1';\r\n  countryCode = countryCode || usCountryCode;\r\n  const codeWithPrefix = countryCode.includes('+') ? countryCode : '+' + countryCode;\r\n  return MAX_PHONE_NUMBER_LENGTH - codeWithPrefix.length;\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { IsoToCountryMap } from './countryCodeData';\r\n// @ts-ignore\r\nimport styles from './PhoneViewer.module.scss';\r\nimport { formatPhoneNumber, getCountryIsoFromFormattedNumber, getFlagEmojiFromCountryIso } from './utils';\r\n\r\nexport interface PhoneViewerProps {\r\n  phoneNumber: string;\r\n  showFlag?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport function PhoneViewer({ phoneNumber, showFlag = false, className }: PhoneViewerProps): JSX.Element {\r\n  const countryIso = getCountryIsoFromFormattedNumber(phoneNumber);\r\n  const flag = getFlagEmojiFromCountryIso(countryIso);\r\n  const pattern = IsoToCountryMap.get(countryIso)?.pattern || '';\r\n  const code = IsoToCountryMap.get(countryIso)?.code || '';\r\n  const number = phoneNumber.replace(`+${code}`, '');\r\n\r\n  return (\r\n    <span className={cn(styles.container, className)}>\r\n      {showFlag && <div className={styles.flag}>{flag}</div>}+{code} {formatPhoneNumber(number, pattern)}\r\n    </span>\r\n  );\r\n}\r\n", "import { Tag } from '@clerk/shared/components/tag';\nimport { titleize } from '@clerk/shared/utils';\nimport { IdentificationLinkResource } from '@clerk/types';\nimport React from 'react';\n\ntype ConnectionsProps = {\n  linkedResources: IdentificationLinkResource[];\n};\n\n/**\n * Linked email resources are of type \"oauth_{provider}\" currently.\n * TODO: Type EmailIdentificationLinkResource at types/resources\n */\nexport const Connections = ({ linkedResources }: ConnectionsProps) => {\n  return (\n    <>\n      {linkedResources.map(resource => (\n        <div\n          key={resource.id}\n          className='cl-connection-info'\n        >\n          Connected to {titleize(resource.type.split('oauth_')[1])}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport const PrimaryTag = () => (\n  <Tag\n    color='primary'\n    className='cl-tag'\n  >\n    Primary\n  </Tag>\n);\n", "export { AddNewEmail as default } from \"@clerk/clerk-js/src/ui/userProfile/emailAdressess/AddNewEmail\";\r\n", "// @ts-ignore\nimport { default as MailIcon } from '@clerk/shared/assets/icons/mail.svg';\nimport { Button } from '@clerk/shared/components/button';\nimport { Control } from '@clerk/shared/components/control';\nimport { Form } from '@clerk/shared/components/form';\nimport { InputWithIcon } from '@clerk/shared/components/input';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { EmailAddressResource } from '@clerk/types';\nimport React from 'react';\nimport { handleError, useFieldState } from 'ui/common';\nimport { Error } from 'ui/common/error';\nimport { useCoreUser, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport { EmailAddressVerificationWithMagicLink } from 'ui/userProfile/emailAdressess/EmailAddressVerificationWithMagicLink';\nimport { EmailAddressVerificationWithOTP } from 'ui/userProfile/emailAdressess/EmailAddressVerificationWithOTP';\nimport { magicLinksEnabledForInstance } from 'ui/userProfile/emailAdressess/utils';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nenum Step {\n  EnterEmailAddress = 0,\n  VerifyEmailAddress = 1,\n  Finish = 2,\n}\n\nconst stepSubtitleMap = {\n  [Step.EnterEmailAddress]: 'Enter an email address to add',\n  [Step.VerifyEmailAddress]: 'Verify the email address',\n  [Step.Finish]: 'Email address successfully added',\n};\n\nexport function AddNewEmail(): JSX.Element {\n  const user = useCoreUser();\n  const { navigate } = useNavigate();\n  const environment = useEnvironment();\n  const [step, setStep] = React.useState<Step>(Step.EnterEmailAddress);\n  const [error, setError] = React.useState<string | undefined>();\n  const createdEmailRef = React.useRef<EmailAddressResource>();\n  const emailValue = useFieldState('email_address', '');\n\n  const magicLinksEnabled = magicLinksEnabledForInstance(environment);\n  const nextStep = () => setStep(s => s + 1);\n  const navigateBack = () => navigate('../');\n  const navigateToCreatedEmailAddress = () => {\n    if (createdEmailRef.current) {\n      navigate(`../${createdEmailRef.current.id}`);\n    }\n  };\n\n  const createEmailAddress = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    return user\n      .createEmailAddress({ email: emailValue.value })\n      .then(res => {\n        createdEmailRef.current = res;\n        nextStep();\n      })\n      .catch(e => handleError(e, [emailValue], setError));\n  };\n\n  const onErrorHandler = (e: any) => {\n    handleError(e, [emailValue], setError);\n  };\n\n  const onVerificationCompleteHandler = () => {\n    nextStep();\n  };\n\n  const enterEmailForm = step === Step.EnterEmailAddress && (\n    <Form\n      handleSubmit={createEmailAddress}\n      submitButtonLabel={magicLinksEnabled ? 'Send magic link' : 'Send code'}\n      handleReset={navigateBack}\n      resetButtonLabel='Cancel'\n      buttonGroupClassName='cl-form-button-group'\n    >\n      <Control\n        label='Email address'\n        error={emailValue.error}\n        htmlFor='email_address_input'\n      >\n        <InputWithIcon\n          Icon={<MailIcon viewBox='0 0 24 24' />}\n          type='email'\n          id='email_address_input'\n          name='email_address_input'\n          value={emailValue.value}\n          handleChange={el => emailValue.setValue(el.value || '')}\n          autoFocus\n          autoComplete='off'\n          required\n          minLength={1}\n          maxLength={255}\n        />\n      </Control>\n      <div className='cl-copy-text'>\n        An email containing a {magicLinksEnabled ? 'magic link' : 'verification code'} will be sent to your email\n        address.\n      </div>\n    </Form>\n  );\n\n  const verifyEmailScreen =\n    step === Step.VerifyEmailAddress &&\n    createdEmailRef.current &&\n    (magicLinksEnabled ? (\n      <EmailAddressVerificationWithMagicLink\n        email={createdEmailRef.current}\n        onError={onErrorHandler}\n        onVerificationComplete={onVerificationCompleteHandler}\n      />\n    ) : (\n      <EmailAddressVerificationWithOTP\n        email={createdEmailRef.current}\n        onError={onErrorHandler}\n        onVerificationComplete={onVerificationCompleteHandler}\n      />\n    ));\n\n  const finishScreen = step === Step.Finish && (\n    <>\n      <div className='cl-copy-text'>\n        <span className='cl-identifier'>{emailValue.value} has successfully been added to your account.</span>\n      </div>\n      <div className='cl-form-button-group'>\n        <Button onClick={navigateToCreatedEmailAddress}>Finish</Button>\n      </div>\n    </>\n  );\n\n  const title = magicLinksEnabled && step === Step.VerifyEmailAddress ? undefined : 'Add email';\n\n  const subtitle = magicLinksEnabled && step === Step.VerifyEmailAddress ? undefined : stepSubtitleMap[step];\n\n  return (\n    <>\n      <PageHeading\n        title='Back'\n        backTo='../'\n      />\n      <TitledCard\n        title={title}\n        subtitle={subtitle}\n        className='cl-themed-card cl-verifiable-field-card'\n      >\n        <Error>{error}</Error>\n        {enterEmailForm}\n        {verifyEmailScreen}\n        {finishScreen}\n      </TitledCard>\n    </>\n  );\n}\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { Label } from '../label';\r\n// @ts-ignore\r\nimport styles from './Control.module.scss';\r\n\r\nexport type ControlProps = {\r\n  children?: React.ReactNode;\r\n  className?: string;\r\n  containerStyle?: React.CSSProperties;\r\n  error?: string;\r\n  errorClassName?: string;\r\n  errorStyle?: React.CSSProperties;\r\n  footer?: React.ReactNode;\r\n  hint?: React.ReactNode;\r\n  hintOnClickHandler?: (e: React.MouseEvent) => void;\r\n  htmlFor?: string;\r\n  label?: React.ReactNode;\r\n  labelClassName?: string;\r\n  name?: string;\r\n  optional?: boolean;\r\n  sublabel?: React.ReactNode;\r\n};\r\n\r\nexport function Control({\r\n  children,\r\n  className,\r\n  containerStyle,\r\n  error,\r\n  errorClassName,\r\n  errorStyle,\r\n  footer,\r\n  hint,\r\n  hintOnClickHandler,\r\n  htmlFor,\r\n  label,\r\n  labelClassName,\r\n  optional,\r\n  sublabel,\r\n}: ControlProps): JSX.Element {\r\n  // Inject hasError prop to children controls to render their error styles.\r\n  // This convention should be enforced with a TS interface.\r\n  const childrenWithErrorProp = React.Children.map(children, child => {\r\n    if (React.isValidElement(child) && typeof child.type !== 'string') {\r\n      return React.cloneElement(child, { hasError: !!error });\r\n    }\r\n    return child;\r\n  });\r\n\r\n  const hintElement = hint ? (\r\n    <span className={styles.hint}>{hintOnClickHandler ? <a onClick={hintOnClickHandler}>{hint}</a> : hint}</span>\r\n  ) : null;\r\n\r\n  const optionalElement = optional ? <span className={styles.optional}>Optional</span> : null;\r\n\r\n  return (\r\n    <div\r\n      className={cn(styles.control, className)}\r\n      style={containerStyle}\r\n    >\r\n      <Label\r\n        htmlFor={htmlFor}\r\n        className={styles.labelContainer}\r\n      >\r\n        {childrenWithErrorProp}\r\n        {sublabel && <span className={cn(styles.sublabel)}>{sublabel}</span>}\r\n        {label && (\r\n          <span className={cn(styles.label, labelClassName)}>\r\n            {label}\r\n            {optionalElement}\r\n            {hintElement}\r\n          </span>\r\n        )}\r\n      </Label>\r\n      <span\r\n        className={cn(styles.error, { [styles.errorVisible]: error }, errorClassName)}\r\n        style={errorStyle}\r\n      >\r\n        {error}\r\n      </span>\r\n      {footer}\r\n    </div>\r\n  );\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { useMounted } from '../../hooks';\r\nimport { Button, ButtonWithSpinner } from '../button';\r\n// @ts-ignore\r\nimport styles from './Form.module.scss';\r\n\r\nexport type FormProps = {\r\n  ref?: React.Ref<HTMLFormElement>;\r\n  className?: string;\r\n  submitButtonLabel?: string;\r\n  resetButtonLabel?: string;\r\n  submitButton?: React.ReactNode;\r\n  submitButtonClassName?: string;\r\n  submitButtonDisabled?: boolean;\r\n  resetButton?: React.ReactNode;\r\n  resetButtonClassName?: string;\r\n  buttonGroupClassName?: string;\r\n  buttonGroupToTheRight?: boolean;\r\n  handleReset?: (e: React.FormEvent<HTMLFormElement>) => Promise<unknown> | unknown;\r\n  handleSubmit?: (e: React.FormEvent<HTMLFormElement>) => Promise<unknown> | unknown;\r\n  children: React.ReactElement | React.ReactElement[];\r\n};\r\n\r\nexport const Form: React.FC<FormProps> = React.forwardRef(\r\n  (\r\n    {\r\n      className,\r\n      submitButtonLabel = 'Submit',\r\n      resetButtonLabel = 'Reset',\r\n      handleReset,\r\n      handleSubmit,\r\n      submitButton,\r\n      submitButtonClassName,\r\n      submitButtonDisabled = false,\r\n      resetButton,\r\n      resetButtonClassName,\r\n      buttonGroupClassName,\r\n      buttonGroupToTheRight,\r\n      children,\r\n    }: FormProps,\r\n    forwardRef: React.Ref<HTMLFormElement>,\r\n  ) => {\r\n    const isMounted = useMounted();\r\n    const [isSubmitting, setIsSubmitting] = React.useState(false);\r\n    const fieldsetRef = React.useRef<HTMLFieldSetElement>();\r\n\r\n    // make autofocusing reliable for forms in modals\r\n    // add data-no-focus=\"true\" to any element that should not be auto focused\r\n    React.useEffect(() => {\r\n      const el = fieldsetRef.current?.querySelector(\r\n        'select:not([data-no-focus=\"true\"]),input:not([data-no-focus=\"true\"])',\r\n      ) as HTMLInputElement | HTMLSelectElement;\r\n      setTimeout(() => el?.focus(), 0);\r\n    }, []);\r\n\r\n    if (!Array.isArray(children)) {\r\n      children = [children];\r\n    }\r\n\r\n    if (!submitButton && typeof handleSubmit === 'function') {\r\n      submitButton = (\r\n        <ButtonWithSpinner\r\n          isLoading={isSubmitting}\r\n          className={submitButtonClassName}\r\n          disabled={submitButtonDisabled}\r\n        >\r\n          {submitButtonLabel}\r\n        </ButtonWithSpinner>\r\n      );\r\n    }\r\n\r\n    if (!resetButton && typeof handleReset === 'function') {\r\n      resetButton = (\r\n        <Button\r\n          type='reset'\r\n          flavor='text'\r\n          className={resetButtonClassName}\r\n        >\r\n          {resetButtonLabel}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    const handleFormSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (typeof handleSubmit === 'function') {\r\n        setIsSubmitting(true);\r\n        await handleSubmit(e);\r\n        if (isMounted.current) {\r\n          setIsSubmitting(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    const handleFormReset = async (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      if (typeof handleReset === 'function') {\r\n        await handleReset(e);\r\n      }\r\n    };\r\n\r\n    let fieldsetCount = 0;\r\n\r\n    return (\r\n      <form\r\n        ref={forwardRef}\r\n        className={cn(styles.form, className)}\r\n        onReset={handleFormReset}\r\n        onSubmit={handleFormSubmit}\r\n      >\r\n        {children.reduce((memo: Array<React.ReactElement<HTMLFieldSetElement>>, child, index) => {\r\n          if (child) {\r\n            fieldsetCount++;\r\n            memo.push(\r\n              <fieldset\r\n                key={index}\r\n                ref={(index === 0 ? fieldsetRef : null) as any}\r\n              >\r\n                {child}\r\n              </fieldset>,\r\n            );\r\n          }\r\n          return memo;\r\n        }, [])}\r\n        {(submitButton || resetButton) && fieldsetCount > 0 && (\r\n          <fieldset\r\n            className={cn(styles.group, buttonGroupClassName, {\r\n              [styles.reversed]: (submitButton && resetButton) || buttonGroupToTheRight,\r\n            })}\r\n            disabled={isSubmitting}\r\n          >\r\n            {submitButton}\r\n            {resetButton}\r\n          </fieldset>\r\n        )}\r\n      </form>\r\n    );\r\n  },\r\n);\r\nForm.displayName = 'Form';\r\n", "export { ConnectedAccountList as default } from \"@clerk/clerk-js/src/ui/userProfile/connectedAccounts/ConnectedAccountList\";\r\n", "import { List } from '@clerk/shared/components/list';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { OAuthProvider, OAuthStrategy } from '@clerk/types';\nimport React, { useState } from 'react';\nimport { Error } from 'ui/common/error';\nimport { useCoreUser, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nimport { UnconnectedAccountListItem } from './UnconnectedAccountListItem';\nimport { UnverifiedAccountListItem } from './UnverifiedAccountListItem';\nimport { VerifiedAccountListItem } from './VerifiedAccountListItem';\n\nexport function ConnectedAccountList(): JSX.Element {\n  return (\n    <>\n      <PageHeading\n        title='Connected accounts'\n        backTo='../'\n      />\n\n      <TitledCard className='cl-themed-card cl-list-card'>\n        <ConnectedAccountListRows />\n      </TitledCard>\n    </>\n  );\n}\n\nfunction ConnectedAccountListRows(): JSX.Element {\n  const [error, setError] = useState<string | undefined>();\n  const [busyProvider, setBusyProvider] = useState<OAuthStrategy | null>(null);\n  const user = useCoreUser();\n  const { navigate } = useNavigate();\n  const {\n    userSettings: { social },\n  } = useEnvironment();\n\n  const availableProviders = Object.values(social).filter(oauthProvider => oauthProvider.enabled);\n\n  const verifiedAccounts = user.verifiedExternalAccounts;\n  const verifiedProviders = verifiedAccounts.map(externalAccount => externalAccount.provider);\n\n  // To avoid visual clutter, filter out external accounts for which there is no error set (potentially abandoned flows)\n  const unverifiedAccounts = user.unverifiedExternalAccounts.filter(\n    externalAccount => !!externalAccount?.verification?.error,\n  );\n  const unverifiedProviders = unverifiedAccounts.map(externalAccount => externalAccount.provider);\n\n  const unconnectedProviders = availableProviders.filter(oauthProvider => {\n    const provider = oauthProvider.strategy.replace('oauth_', '') as OAuthProvider; // :-(\n    return !verifiedProviders.includes(provider) && !unverifiedProviders.includes(provider);\n  });\n\n  const handleConnect = (strategy: OAuthStrategy) => {\n    setError(undefined);\n    setBusyProvider(strategy);\n\n    user\n      .createExternalAccount({ strategy: strategy, redirect_url: window.location.href })\n      .then(externalAccount => {\n        navigate(externalAccount.verification!.externalVerificationRedirectURL);\n      })\n      .catch(err => {\n        setError(err.message || err);\n        setBusyProvider(null);\n        console.log(err);\n      });\n  };\n\n  if (availableProviders.length == 0) {\n    return <div className='cl-empty-list-item'>There are no available external account providers</div>;\n  }\n\n  return (\n    <>\n      <Error>{error}</Error>\n\n      <List>\n        {verifiedAccounts.map(externalAccount => (\n          <VerifiedAccountListItem\n            key={externalAccount.id}\n            externalAccount={externalAccount}\n            isDisabled={!!busyProvider}\n          />\n        ))}\n\n        {unverifiedAccounts.map(externalAccount => (\n          <UnverifiedAccountListItem\n            key={externalAccount.id}\n            externalAccount={externalAccount}\n            handleConnect={handleConnect}\n            isBusy={busyProvider == `oauth_${externalAccount.provider}`}\n            isDisabled={!!busyProvider}\n          />\n        ))}\n\n        {unconnectedProviders.map(unconnectedProvider => (\n          <UnconnectedAccountListItem\n            key={unconnectedProvider.strategy}\n            oauthProviderSettings={unconnectedProvider}\n            handleConnect={handleConnect}\n            isBusy={busyProvider == unconnectedProvider.strategy}\n            isDisabled={!!busyProvider}\n          />\n        ))}\n      </List>\n    </>\n  );\n}\n", "import { ArrowRightIcon } from '@clerk/shared/assets/icons';\nimport { List } from '@clerk/shared/components/list';\nimport { Spinner } from '@clerk/shared/components/spinner';\nimport { titleize } from '@clerk/shared/utils/string';\nimport type { OAuthProvider, OAuthProviderSettings, OAuthStrategy } from '@clerk/types';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\n\ntype UnconnectedAccountListItemProps = {\n  oauthProviderSettings: OAuthProviderSettings;\n  handleConnect: (strategy: OAuthStrategy) => void;\n  isBusy: boolean;\n  isDisabled: boolean;\n};\n\nexport function UnconnectedAccountListItem({\n  oauthProviderSettings,\n  handleConnect,\n  isBusy,\n  isDisabled,\n}: UnconnectedAccountListItemProps): JSX.Element {\n  const oauthProvider = oauthProviderSettings.strategy.replace('oauth_', '') as OAuthProvider;\n\n  return (\n    <List.Item\n      className='cl-list-item'\n      key={oauthProviderSettings.strategy}\n      onClick={() => handleConnect(oauthProviderSettings.strategy)}\n      detailIcon={isBusy ? <Spinner /> : <ArrowRightIcon />}\n      disabled={isDisabled}\n    >\n      <div>\n        <img\n          alt={oauthProviderSettings.strategy}\n          src={svgUrl(oauthProvider)}\n          className='cl-left-icon-wrapper'\n        />\n        Connect {titleize(oauthProvider)} account\n      </div>\n    </List.Item>\n  );\n}\n", "import { ArrowRightIcon } from '@clerk/shared/assets/icons';\nimport { List } from '@clerk/shared/components/list';\nimport { Spinner } from '@clerk/shared/components/spinner';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport type { ExternalAccountResource } from '@clerk/types';\nimport { OAuthStrategy } from '@clerk/types';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\n\ntype UnverifiedAccountListItemProps = {\n  externalAccount: ExternalAccountResource;\n  handleConnect: (strategy: OAuthStrategy) => void;\n  isBusy: boolean;\n  isDisabled: boolean;\n};\n\nexport function UnverifiedAccountListItem({\n  externalAccount,\n  handleConnect,\n  isBusy,\n  isDisabled,\n}: UnverifiedAccountListItemProps): JSX.Element {\n  return (\n    <List.Item\n      className='cl-list-item'\n      key={externalAccount.id}\n      onClick={() => handleConnect(`oauth_${externalAccount.provider}`)}\n      detailIcon={isBusy ? <Spinner /> : <ArrowRightIcon />}\n      disabled={isDisabled}\n    >\n      <div>\n        <img\n          alt={externalAccount.providerTitle()}\n          src={svgUrl(externalAccount.provider)}\n          className='cl-left-icon-wrapper'\n        />\n        {externalAccount.username || externalAccount.emailAddress}\n\n        {externalAccount.label && ` (${externalAccount.label})`}\n\n        <VerificationStatusTag\n          className='cl-tag'\n          status={externalAccount.verification?.status || 'unverified'}\n        />\n\n        <span className='cl-verification-error'>{externalAccount.verification?.error?.longMessage}</span>\n      </div>\n    </List.Item>\n  );\n}\n", "import { List } from '@clerk/shared/components/list';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport type { ExternalAccountResource } from '@clerk/types';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\nimport { useNavigate } from 'ui/hooks';\n\ntype VerifiedAccountListItemProps = {\n  externalAccount: ExternalAccountResource;\n  isDisabled: boolean;\n};\n\nexport function VerifiedAccountListItem({ externalAccount, isDisabled }: VerifiedAccountListItemProps): JSX.Element {\n  const { navigate } = useNavigate();\n\n  return (\n    <List.Item\n      className='cl-list-item'\n      key={externalAccount.id}\n      onClick={() => navigate(externalAccount.id)}\n      disabled={isDisabled}\n    >\n      <div>\n        <img\n          alt={externalAccount.providerTitle()}\n          src={svgUrl(externalAccount.providerSlug())}\n          className='cl-left-icon-wrapper'\n        />\n        {externalAccount.username || externalAccount.emailAddress}\n\n        {externalAccount.label && ` (${externalAccount.label})`}\n\n        <VerificationStatusTag\n          className='cl-tag'\n          status={externalAccount.verification?.status || 'verified'}\n        />\n      </div>\n    </List.Item>\n  );\n}\n", "export { PhoneDetail as default } from \"@clerk/clerk-js/src/ui/userProfile/phoneNumbers/PhoneDetail\";\r\n", "// @ts-ignore\nimport { default as BinIcon } from '@clerk/shared/assets/icons/bin.svg';\n// @ts-ignore\nimport { default as PhoneIcon } from '@clerk/shared/assets/icons/phone.svg';\nimport { Button } from '@clerk/shared/components/button';\nimport { List } from '@clerk/shared/components/list';\nimport { OneTimeCodeInput, VerifyCodeHandler } from '@clerk/shared/components/oneTimeCodeInput';\nimport { PhoneViewer } from '@clerk/shared/components/phoneInput';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { Toggle } from '@clerk/shared/components/toggle';\nimport React from 'react';\nimport { handleError, useFieldState, verificationErrorMessage } from 'ui/common';\nimport { Error } from 'ui/common/error';\nimport { useCoreUser } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport { useRouter } from 'ui/router';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nimport { EditableListFieldRemoveCard } from '../EditableListFieldRemoveCard';\nimport { PrimaryTag } from '../util';\n\nexport const PhoneDetail = (): JSX.Element => {\n  const { navigate } = useNavigate();\n  const user = useCoreUser();\n  const { params } = useRouter();\n  const [showRemovalPage, setShowRemovalPage] = React.useState<boolean>(false);\n  const [isPrimary, setIsPrimary] = React.useState(false);\n  const currentCode = useFieldState('', '');\n  const [error, setError] = React.useState<string | undefined>();\n\n  const phoneIdent = user.phoneNumbers.find(pi => pi.id === params.phone_number_id);\n\n  const verificationStatus = phoneIdent?.verification?.status || '';\n  const isVerified = verificationStatus === 'verified';\n\n  // TODO: we need this because updating the user obj\n  // does not trigger a rerender through the context. Please discuss\n  React.useLayoutEffect(() => {\n    setIsPrimary(phoneIdent?.id === user?.primaryPhoneNumberId);\n  }, []);\n\n  React.useEffect(() => {\n    if (!phoneIdent || isVerified) {\n      return;\n    }\n    void sendVerificationCode();\n  }, []);\n\n  if (phoneIdent === undefined) {\n    // TODO Braden: 404 here?\n    return <></>;\n  }\n\n  const handleRemove = () => {\n    setShowRemovalPage(true);\n  };\n\n  const onPhoneNumberRemove = () => {\n    return phoneIdent.destroy();\n  };\n\n  const sendVerificationCode = async () => {\n    try {\n      await phoneIdent?.prepareVerification();\n    } catch (err) {\n      handleError(err, [currentCode], setError);\n    }\n  };\n\n  const verifyCode: VerifyCodeHandler = async (verify, reject) => {\n    try {\n      await phoneIdent?.attemptVerification({ code: currentCode.value });\n      verify(() => currentCode.setValue(''));\n    } catch (err) {\n      reject(verificationErrorMessage(err));\n    }\n  };\n\n  const makeIdentPrimary = async () => {\n    try {\n      await user.update({ primaryPhoneNumberId: phoneIdent?.id });\n      setIsPrimary(true);\n    } catch (err) {\n      handleError(err, [currentCode], setError);\n    }\n  };\n\n  const otpInput = (\n    <OneTimeCodeInput\n      value={currentCode.value}\n      setValue={currentCode.setValue}\n      verifyCodeHandler={verifyCode}\n      onResendCode={sendVerificationCode}\n      className={'otp-input'}\n    />\n  );\n\n  const connections = phoneIdent.linkedTo.map(connection => (\n    <div\n      key={connection.id}\n      className='cl-connection-info'\n    >\n      Connected to {connection.type}\n    </div>\n  ));\n\n  const removalPage = (\n    <EditableListFieldRemoveCard\n      type='phone'\n      label={phoneIdent.phoneNumber}\n      onCancel={() => {\n        setShowRemovalPage(false);\n      }}\n      onRemove={onPhoneNumberRemove}\n      onRemoved={() => {\n        navigate('../');\n      }}\n    />\n  );\n\n  return (\n    <>\n      <PageHeading\n        title='Phone number'\n        subtitle={isVerified ? 'Manage this phone number' : 'Verify this phone number'}\n        backTo='./../'\n      />\n      {showRemovalPage ? (\n        removalPage\n      ) : (\n        <TitledCard className='cl-themed-card cl-list-card'>\n          <Error style={{ margin: '0 2em' }}>{error}</Error>\n          <List>\n            <List.Item\n              className='cl-list-item'\n              hoverable={false}\n              detail={false}\n              lines\n            >\n              <div>\n                <div className='cl-ident-detail'>\n                  <PhoneViewer\n                    phoneNumber={phoneIdent.phoneNumber}\n                    showFlag={true}\n                  />\n                  <div className='cl-tags'>\n                    {isPrimary && <PrimaryTag />}\n                    <VerificationStatusTag\n                      className='cl-tag'\n                      status={verificationStatus}\n                    />\n                  </div>\n                </div>\n                <div>{connections}</div>\n              </div>\n            </List.Item>\n\n            {isVerified && (\n              <List.Item\n                className='cl-list-item'\n                hoverable={false}\n                detail={false}\n                lines\n              >\n                <div className='cl-primary-status-container'>\n                  <div className='cl-description'>\n                    <PhoneIcon />\n                    <div className='cl-text'>\n                      <div className='cl-title'>Primary phone</div>\n                      <div className='cl-subtitle'>This phone will receive communications regarding your account.</div>\n                    </div>\n                  </div>\n                  <Toggle\n                    name='primary_toggle'\n                    disabled={isPrimary}\n                    checked={isPrimary}\n                    handleChange={makeIdentPrimary}\n                  />\n                </div>\n              </List.Item>\n            )}\n          </List>\n          {!isVerified && otpInput}\n          <Button\n            onClick={handleRemove}\n            className='cl-add-resource-button cl-remove-button'\n            type='button'\n            flavor='text'\n            buttonColor='error'\n            hoverable\n          >\n            <BinIcon />\n            Remove\n          </Button>\n        </TitledCard>\n      )}\n    </>\n  );\n};\n", "export { AddNewPhone as default } from \"@clerk/clerk-js/src/ui/userProfile/phoneNumbers/AddNewPhone\";\r\n", "import React from 'react';\nimport { useCoreUser } from 'ui/contexts';\nimport { AddVerifiableField } from 'ui/userProfile/AddVerifiableField';\n\nexport const AddNewPhone = (): JSX.Element => {\n  const user = useCoreUser();\n  return (\n    <AddVerifiableField\n      label='Phone number'\n      slug='phone_number'\n      type='phone'\n      stepTitle={{\n        0: 'Enter a phone number to add',\n        1: 'Verify the added phone number',\n        2: 'Phone number successfully added',\n      }}\n      stepText={{\n        0: (\n          <>\n            A text message with a verification code will be sent to your phone number.\n            <div className='cl-tip'>Standard carrier SMS and data fees may apply.</div>\n          </>\n        ),\n        1: 'A text message with a verification code has been sent to',\n        2: (\n          <>\n            has successfully been added to your account. You can now receive communications on this phone number.\n            <div className='cl-tip'>Standard carrier SMS and data fees may apply.</div>\n          </>\n        ),\n      }}\n      onAdd={(value: string) => user.createPhoneNumber({ phoneNumber: value })}\n    />\n  );\n};\n", "import { Button } from '@clerk/shared/components/button';\nimport { Control } from '@clerk/shared/components/control';\nimport { Form } from '@clerk/shared/components/form';\nimport { InputWithIcon } from '@clerk/shared/components/input';\nimport { OneTimeCodeInput, VerifyCodeHandler } from '@clerk/shared/components/oneTimeCodeInput';\nimport { PhoneInput, PhoneViewer } from '@clerk/shared/components/phoneInput';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { Wizard } from '@clerk/shared/components/wizard';\nimport { VerificationResource } from '@clerk/types';\nimport React from 'react';\nimport { handleError, useFieldState, verificationErrorMessage } from 'ui/common';\nimport { Error } from 'ui/common/error';\nimport { useNavigate } from 'ui/hooks';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nexport interface ListValue {\n  id: string;\n  verification: VerificationResource | null;\n  toString: () => string;\n  destroy: () => Promise<any>;\n  prepareVerification: () => Promise<any>;\n  attemptVerification: (params: { code: string }) => Promise<any>;\n}\n\ninterface AddVerifiableFieldProps {\n  type: 'email' | 'phone';\n  label: string;\n  inputIcon?: React.ReactNode;\n  stepTitle: Record<number, string>;\n  stepText: Record<number, React.ReactNode>;\n  slug: string;\n  onAdd: (value: string) => Promise<ListValue>;\n}\n\nexport function AddVerifiableField({\n  label,\n  slug,\n  onAdd,\n  stepText,\n  stepTitle,\n  inputIcon,\n  type,\n}: AddVerifiableFieldProps): JSX.Element {\n  const inputName = `${label.replace(/\\s/g, '_').toLowerCase()}_input`;\n  const [state, setState] = React.useState<{\n    step: number;\n    listVal: ListValue | null;\n  }>({\n    listVal: null,\n    step: 0,\n  });\n  const currentValue = useFieldState(slug, '');\n  const code = useFieldState('code', '');\n  const [error, setError] = React.useState<string | undefined>();\n  const { navigate } = useNavigate();\n\n  React.useEffect(() => {\n    currentValue.setError(undefined);\n    setError(undefined);\n  }, [currentValue.value]);\n\n  const updateFieldSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const listVal = await onAdd(currentValue.value);\n      await listVal.prepareVerification();\n      setState(currentState => ({ ...currentState, listVal, step: 1 }));\n    } catch (err) {\n      handleError(err, [currentValue], setError);\n    }\n  };\n\n  const sendVerificationCode = () => {\n    if (!state.listVal) {\n      return;\n    }\n    // state.listVal.prepareVerification();\n  };\n\n  const verifyCode: VerifyCodeHandler = async (verify, reject) => {\n    try {\n      await state.listVal?.attemptVerification({ code: code.value });\n      verify(() => setState(s => ({ ...s, step: s.step + 1 })));\n    } catch (err) {\n      reject(verificationErrorMessage(err));\n    }\n  };\n\n  const onFinish = () => {\n    if (!state.listVal) {\n      return;\n    }\n    navigate(`../${state.listVal.id}`);\n  };\n\n  const onBack = () => navigate('../');\n\n  const step1EnterValue = (\n    <Form\n      handleSubmit={updateFieldSubmit}\n      submitButtonLabel='Send code'\n      handleReset={onBack}\n      resetButtonLabel='Cancel'\n      buttonGroupClassName='cl-form-button-group'\n    >\n      <Control\n        label={label}\n        error={currentValue.error}\n        htmlFor={inputName}\n      >\n        {type === 'phone' ? (\n          <div className='cl-phone-input-container'>\n            <PhoneInput\n              handlePhoneChange={currentValue.setValue}\n              name={inputName}\n              id={inputName}\n            />\n          </div>\n        ) : (\n          <>\n            <InputWithIcon\n              Icon={inputIcon}\n              type={type}\n              id={inputName}\n              name={inputName}\n              value={currentValue.value}\n              handleChange={el => currentValue.setValue(el.value || '')}\n              autoFocus\n              autoComplete='off'\n              required\n              minLength={1}\n              maxLength={255}\n            />\n          </>\n        )}\n      </Control>\n      <div className='cl-copy-text'>{stepText[state.step]}</div>\n    </Form>\n  );\n\n  const step2Verify = (\n    <>\n      <div\n        className='cl-copy-text'\n        style={{ marginBottom: '2em' }}\n      >\n        {stepText[state.step] + ' '}\n        {type === 'phone' ? (\n          <PhoneViewer\n            className='cl-identifier'\n            phoneNumber={currentValue.value}\n          />\n        ) : (\n          <span className='cl-identifier'>{currentValue.value}</span>\n        )}\n        .\n      </div>\n      <OneTimeCodeInput\n        value={code.value}\n        setValue={code.setValue}\n        verifyCodeHandler={verifyCode}\n        onResendCode={sendVerificationCode}\n        className='cl-otp-input'\n      />\n    </>\n  );\n\n  const step3Finish = (\n    <>\n      <div className='cl-copy-text'>\n        {type === 'phone' ? (\n          <PhoneViewer\n            phoneNumber={currentValue.value}\n            className='cl-identifier'\n          />\n        ) : (\n          <span className='cl-identifier'>{currentValue.value}</span>\n        )}{' '}\n        {stepText[state.step]}\n      </div>\n      <div className='cl-form-button-group'>\n        <Button onClick={onFinish}>Finish</Button>\n      </div>\n    </>\n  );\n\n  return (\n    <>\n      <PageHeading\n        title='Back'\n        backTo='../'\n      />\n      <TitledCard\n        title={`Add ${type}`}\n        subtitle={stepTitle[state.step]}\n        className='cl-themed-card cl-verifiable-field-card'\n      >\n        <Error>{error}</Error>\n        <Wizard defaultStep={state.step}>\n          {step1EnterValue}\n          {step2Verify}\n          {step3Finish}\n        </Wizard>\n      </TitledCard>\n    </>\n  );\n}\n", "import React from 'react';\r\n\r\nexport type WizardProps = {\r\n  children: React.ReactElement[];\r\n  defaultStep?: number;\r\n};\r\n\r\nexport function Wizard({ children = [], defaultStep = 0 }: WizardProps): JSX.Element | null {\r\n  const [step, setStep] = React.useState(defaultStep);\r\n\r\n  React.useEffect(() => {\r\n    setStep(defaultStep);\r\n  }, [defaultStep, setStep]);\r\n\r\n  if (children.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  return children[step];\r\n}\r\n", "export { EmailList as default } from \"@clerk/clerk-js/src/ui/userProfile/emailAdressess/EmailList\";\r\n", "import { Button } from '@clerk/shared/components/button';\nimport { List } from '@clerk/shared/components/list';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { EmailAddressResource } from '@clerk/types';\nimport React from 'react';\nimport { useCoreUser } from 'ui/contexts';\nimport { useRouter } from 'ui/router';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nimport { Connections, PrimaryTag } from '../util';\n\ntype EmailListItemProps = {\n  emailAddress: EmailAddressResource;\n  handleClick: () => any | undefined;\n  isPrimary: boolean;\n};\n\nfunction EmailListItem({ emailAddress, handleClick, isPrimary }: EmailListItemProps): JSX.Element {\n  const status = emailAddress.verification.status || '';\n\n  return (\n    <List.Item\n      className='cl-list-item'\n      onClick={handleClick}\n    >\n      <div className='cl-email-item'>\n        {emailAddress.emailAddress}{' '}\n        <div className='cl-tags'>\n          {isPrimary && <PrimaryTag />}\n          <VerificationStatusTag\n            className='cl-tag'\n            status={status}\n          />\n        </div>\n        <Connections linkedResources={emailAddress.linkedTo} />\n      </div>\n    </List.Item>\n  );\n}\n\nexport function EmailList(): JSX.Element {\n  const user = useCoreUser();\n  const router = useRouter();\n\n  const emailItems = user.emailAddresses.map(ea => (\n    <EmailListItem\n      key={ea.id}\n      emailAddress={ea}\n      handleClick={() => router.navigate(ea.id)}\n      isPrimary={user.primaryEmailAddressId === ea.id}\n    />\n  ));\n\n  return (\n    <>\n      <PageHeading\n        title='Emails'\n        subtitle='Manage addresses associated with your account'\n        backTo='../'\n      />\n      <TitledCard className='cl-themed-card cl-list-card'>\n        {user.emailAddresses.length > 0 && <List>{emailItems}</List>}\n        {user.emailAddresses.length === 0 && <div className='cl-empty-list-item'>No email addresses to display</div>}\n        <Button\n          onClick={() => router.navigate('add')}\n          className='cl-add-resource-button'\n          type='button'\n          flavor='text'\n          buttonColor='primary'\n          hoverable\n        >\n          Add email address\n        </Button>\n      </TitledCard>\n    </>\n  );\n}\n", "export { PhoneList as default } from \"@clerk/clerk-js/src/ui/userProfile/phoneNumbers/PhoneList\";\r\n", "import { Button } from '@clerk/shared/components/button';\nimport { List } from '@clerk/shared/components/list';\nimport { PhoneViewer } from '@clerk/shared/components/phoneInput';\nimport { Tag, VerificationStatusTag } from '@clerk/shared/components/tag';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport { PhoneNumberResource } from '@clerk/types';\nimport React from 'react';\nimport { useCoreUser } from 'ui/contexts';\nimport { useRouter } from 'ui/router';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nexport const PhoneList = (): JSX.Element => {\n  const user = useCoreUser();\n  const router = useRouter();\n\n  const createPhoneListItem = (phone: PhoneNumberResource) => {\n    const verificationStatus = phone.verification.status || '';\n    const isPrimary = user.primaryPhoneNumber?.id === phone.id;\n    const primaryTag = isPrimary ? (\n      <Tag\n        color='primary'\n        className='cl-tag'\n      >\n        Primary\n      </Tag>\n    ) : null;\n\n    const connections = phone.linkedTo.map(connection => (\n      <div\n        key={connection.id}\n        className='cl-connection-info'\n      >\n        Connected to {connection.type}\n      </div>\n    ));\n\n    return (\n      <List.Item\n        className='cl-list-item'\n        onClick={() => router.navigate(phone.id)}\n        key={phone.id}\n      >\n        <div className='cl-phone-item'>\n          <PhoneViewer phoneNumber={phone.phoneNumber} />\n          <div className='cl-tags'>\n            {primaryTag}\n            <VerificationStatusTag\n              className='cl-tag'\n              status={verificationStatus}\n            />\n          </div>\n          {connections}\n        </div>\n      </List.Item>\n    );\n  };\n\n  return (\n    <>\n      <PageHeading\n        title='Phone numbers'\n        subtitle='Manage phone numbers associated with your account'\n        backTo='../'\n      />\n      <TitledCard className='cl-themed-card cl-list-card'>\n        {user.phoneNumbers.length > 0 && <List>{user.phoneNumbers.map(createPhoneListItem)}</List>}\n        {user.phoneNumbers.length === 0 && <div className='cl-empty-list-item'>No phone numbers to display</div>}\n        <Button\n          onClick={() => router.navigate('add')}\n          className='cl-add-resource-button'\n          type='button'\n          flavor='text'\n          buttonColor='primary'\n          hoverable\n        >\n          Add phone number\n        </Button>\n      </TitledCard>\n    </>\n  );\n};\n", "export { FirstName as default } from \"@clerk/clerk-js/src/ui/userProfile/name/FirstName\";\r\n", "import React from 'react';\nimport { EditableField } from 'ui/userProfile/EditableField';\n\nexport function FirstName(): JSX.Element {\n  return (\n    <EditableField\n      slug='first_name'\n      label='First name'\n      value='firstName'\n    />\n  );\n}\n", "import { Control } from '@clerk/shared/components/control';\nimport { Form } from '@clerk/shared/components/form';\nimport { Input } from '@clerk/shared/components/input';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport React from 'react';\nimport { handleError, useFieldState } from 'ui/common';\nimport { Error } from 'ui/common/error';\nimport { useCoreUser } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\ninterface EditableFieldProps {\n  label: string;\n  slug: string;\n  value?: string | null;\n}\n\nexport const EditableField = (props: EditableFieldProps) => {\n  const user = useCoreUser();\n  const { label, slug, value } = props;\n\n  // @ts-ignore\n  const currentValue = useFieldState(slug, user[value] ? user[value] : '');\n  const [error, setError] = React.useState<string | undefined>();\n\n  const { navigate } = useNavigate();\n\n  const updateFieldSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      await user.update({ [currentValue.name]: currentValue.value });\n      navigate('../');\n    } catch (err) {\n      handleError(err, [currentValue], setError);\n    }\n  };\n\n  const handleCancel = () => {\n    navigate('../');\n  };\n\n  const inputName = `${slug}_input`;\n\n  return (\n    <>\n      <PageHeading\n        title={label}\n        subtitle={`Edit your ${label.toLowerCase()}`}\n        backTo='../'\n      />\n      <TitledCard className='cl-themed-card cl-editable-field'>\n        <Error>{error}</Error>\n        <Form\n          submitButtonLabel='Save'\n          handleSubmit={updateFieldSubmit}\n          resetButtonLabel='Cancel'\n          handleReset={handleCancel}\n          buttonGroupClassName='cl-form-button-group'\n        >\n          <Control\n            error={currentValue.error}\n            label={label}\n            htmlFor={inputName}\n          >\n            <Input\n              id={inputName}\n              name={inputName}\n              type='text'\n              value={currentValue.value}\n              handleChange={el => currentValue.setValue(el.value || '')}\n              autoFocus\n              autoComplete='off'\n              required\n              minLength={1}\n              maxLength={255}\n            />\n          </Control>\n        </Form>\n      </TitledCard>\n    </>\n  );\n};\n", "export { LastName as default } from \"@clerk/clerk-js/src/ui/userProfile/name/LastName\";\r\n", "import React from 'react';\nimport { EditableField } from 'ui/userProfile/EditableField';\n\nexport function LastName(): JSX.Element {\n  return (\n    <EditableField\n      label='Last name'\n      slug='last_name'\n      value='lastName'\n    />\n  );\n}\n", "export { Username as default } from \"@clerk/clerk-js/src/ui/userProfile/username/Username\";\r\n", "import React from 'react';\nimport { EditableField } from 'ui/userProfile/EditableField';\n\nexport function Username(): JSX.Element {\n  return (\n    <EditableField\n      label='Username'\n      slug='username'\n      value='username'\n    />\n  );\n}\n", "export { Account as default } from \"@clerk/clerk-js/src/ui/userProfile/account/Account\";\r\n", "import React from 'react';\nimport { PersonalInformationCard } from 'ui/userProfile/account/personalInformation';\nimport { ProfileCard } from 'ui/userProfile/account/profileCard';\nimport { PageHeading } from 'ui/userProfile/pageHeading';\n\nexport const Account = (): JSX.Element => {\n  return (\n    <>\n      <PageHeading\n        title='Account'\n        subtitle='Manage settings related to your account'\n      />\n      <ProfileCard />\n      <PersonalInformationCard />\n    </>\n  );\n};\n", "export * from './PersonalInformationCard';\n", "import { List } from '@clerk/shared/components/list';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport React from 'react';\nimport { useCoreUser, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\n\nexport const PersonalInformationCard = (): JSX.Element | null => {\n  const user = useCoreUser();\n  const { navigate } = useNavigate();\n  const { userSettings } = useEnvironment();\n  const {\n    attributes: { first_name, last_name },\n  } = userSettings;\n\n  const hasAtLeastOneAttributeEnable = first_name?.enabled || last_name?.enabled;\n\n  if (!hasAtLeastOneAttributeEnable) {\n    return null;\n  }\n\n  const firstNameRow = (\n    <List.Item\n      className='cl-list-item'\n      key='first-name'\n      itemTitle='First name'\n      onClick={() => navigate('first-name')}\n    >\n      {user.firstName || ''}\n    </List.Item>\n  );\n\n  const lastnameRow = (\n    <List.Item\n      className='cl-list-item'\n      key='last-name'\n      itemTitle='Last name'\n      onClick={() => navigate('last-name')}\n    >\n      {user.lastName || ''}\n    </List.Item>\n  );\n\n  const showFirstName = first_name.enabled;\n  const showLastName = last_name.enabled;\n\n  return (\n    <TitledCard\n      className='cl-themed-card'\n      title='Personal information'\n      subtitle='Manage personal information settings'\n    >\n      <List className='cl-titled-card-list'>\n        {showFirstName && firstNameRow}\n        {showLastName && lastnameRow}\n      </List>\n    </TitledCard>\n  );\n};\n", "export * from './ProfileCard';\n", "import { List } from '@clerk/shared/components/list';\nimport { VerificationStatusTag } from '@clerk/shared/components/tag';\nimport { TitledCard } from '@clerk/shared/components/titledCard';\nimport type { UserResource } from '@clerk/types';\nimport { ExternalAccountResource } from '@clerk/types';\nimport React from 'react';\nimport { svgUrl } from 'ui/common/constants';\nimport { useCoreUser, useEnvironment } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\n\nimport { AvatarWithUploader } from '../avatarWithUploader';\nimport { ProfileEmailAddresses } from './ProfileEmailAddresses';\nimport { ProfilePhoneNumbers } from './ProfilePhoneNumbers';\n\n// Since only Metamask wallet is supported for now, we assume that the user has only\n// one Web3 wallet address. When we add support for more wallets, this logic should be\n// refactored.\nfunction getWeb3WalletAddress(user: UserResource): string {\n  if (user.web3Wallets?.length > 0) {\n    return user.web3Wallets[0] ? user.web3Wallets[0].web3Wallet : '';\n  }\n  return '';\n}\n\nexport function ProfileCard(): JSX.Element {\n  const { userSettings } = useEnvironment();\n  const { attributes } = userSettings;\n  const user = useCoreUser();\n  const { navigate } = useNavigate();\n  const web3Wallet = getWeb3WalletAddress(user);\n\n  const buildWebWalletRow = () => (\n    <List.Item\n      className='cl-list-item'\n      key='web-wallet-name'\n      itemTitle='Wallet address'\n      detail={false}\n    >\n      {web3Wallet}\n    </List.Item>\n  );\n\n  const buildUsernameRow = () => (\n    <List.Item\n      className='cl-list-item'\n      key='user-name'\n      itemTitle='Username'\n      onClick={() => navigate('username')}\n    >\n      {user.username}\n    </List.Item>\n  );\n\n  const buildConnectedAccountsRow = () => {\n    const verifiedAccounts = user.verifiedExternalAccounts;\n\n    return (\n      <List.Item\n        className='cl-list-item'\n        key='connected-accounts'\n        itemTitle='Connected accounts'\n        onClick={() => navigate('connected-accounts')}\n      >\n        {verifiedAccounts.length === 0 ? (\n          <div className='cl-empty-list-item'>None</div>\n        ) : (\n          <div className='cl-list-item-entry'>\n            {verifiedAccounts.map((externalAccount: ExternalAccountResource) => (\n              <div key={externalAccount.id}>\n                <img\n                  alt={externalAccount.providerTitle()}\n                  src={svgUrl(externalAccount.provider)}\n                  className='cl-left-icon-wrapper'\n                />\n                {externalAccount.emailAddress}\n\n                <VerificationStatusTag\n                  className='cl-tag'\n                  status={externalAccount.verification?.status || 'verified'}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </List.Item>\n    );\n  };\n\n  const avatarRow = (\n    <List.Item\n      className='cl-list-item'\n      key='photo'\n      itemTitle='Photo'\n      hoverable={false}\n      detail={false}\n    >\n      <AvatarWithUploader\n        size={64}\n        firstName={user.firstName}\n        lastName={user.lastName}\n        name={user.fullName}\n        profileImageUrl={user.profileImageUrl}\n        className='cl-image'\n      />\n    </List.Item>\n  );\n\n  const showWebWallet = attributes.web3_wallet.enabled;\n  const showUsername = attributes.username.enabled;\n  const showEmail = attributes.email_address.enabled;\n  const showPhone = attributes.phone_number.enabled;\n\n  return (\n    <TitledCard\n      className='cl-themed-card'\n      title='Profile'\n      subtitle='Manage profile settings'\n    >\n      <List className='cl-titled-card-list'>\n        {avatarRow}\n        {showUsername && buildUsernameRow()}\n        {showEmail && <ProfileEmailAddresses />}\n        {showPhone && <ProfilePhoneNumbers />}\n        {buildConnectedAccountsRow()}\n        {showWebWallet && buildWebWalletRow()}\n      </List>\n    </TitledCard>\n  );\n}\n", "export * from './AvatarWithUploader';\n", "import { Avatar, AvatarProps } from '@clerk/shared/components/avatar';\nimport { ImageUploader } from '@clerk/shared/components/imageUploader';\nimport React from 'react';\nimport { useCoreUser } from 'ui/contexts';\n\n//@ts-ignore\nimport styles from './AvatarWithUploader.module.scss';\n\ntype Empty = unknown;\n\nexport const AvatarWithUploader = (props: AvatarProps): JSX.Element => {\n  const user = useCoreUser();\n  const saveImage = (file: File): Promise<Empty> => {\n    return user.setProfileImage({ file }).catch(error => {\n      alert(error);\n    });\n  };\n\n  return (\n    <ImageUploader\n      title='Upload photo'\n      subtitle='Select a profile photo'\n      handleSuccess={saveImage}\n      className={styles.wrapper}\n      withResponsiveUploadIndicator={true}\n    >\n      <Avatar\n        {...props}\n        optimize\n      />\n    </ImageUploader>\n  );\n};\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { CameraIcon } from '../../assets/icons';\r\nimport { toSentence } from '../../utils/array';\r\nimport { extension, SupportedMimeType } from '../../utils/mimeTypeExtensions';\r\nimport { Button } from '../button';\r\nimport { FileDropArea } from '../fileDropArea';\r\nimport { Modal } from '../modal';\r\nimport { TitledCard } from '../titledCard';\r\n//@ts-ignore\r\nimport styles from './ImageUploader.module.scss';\r\n\r\nexport type ImageUploaderProps = {\r\n  title: string;\r\n  subtitle: string;\r\n  handleSuccess: (file: File) => Promise<unknown>;\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  acceptedTypes?: SupportedMimeType[];\r\n  sizeLimitBytes?: number;\r\n  withResponsiveUploadIndicator?: boolean;\r\n};\r\n\r\nexport const IMAGE_UPLOADER_DEFAULT_TYPES: SupportedMimeType[] = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\r\n\r\nfunction typesToSentence(types: SupportedMimeType[]): string {\r\n  return toSentence(types.map(t => extension(t).toUpperCase()));\r\n}\r\n\r\nexport function ImageUploader({\r\n  title,\r\n  subtitle,\r\n  handleSuccess,\r\n  className,\r\n  children,\r\n  acceptedTypes = IMAGE_UPLOADER_DEFAULT_TYPES,\r\n  sizeLimitBytes = 10 * 1000 * 1000,\r\n  withResponsiveUploadIndicator = false,\r\n}: ImageUploaderProps): JSX.Element {\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [hasFileError, setHasFileError] = React.useState(false);\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n    setHasFileError(false);\r\n  };\r\n  const closeModal = () => setIsModalOpen(false);\r\n  const uploadSuccess = (img: any) => {\r\n    void handleSuccess(img).then(() => closeModal());\r\n  };\r\n  const uploadError = () => {\r\n    setHasFileError(true);\r\n  };\r\n\r\n  const typesSentence = typesToSentence(acceptedTypes);\r\n  const helpTexts = {\r\n    normal: <p className={styles.helpText}>Upload a {typesSentence} image smaller than 10 MB</p>,\r\n    error: (\r\n      <p className={styles.helpTextError}>\r\n        Upload error. Select a {typesSentence} image smaller than 10MB and try again.\r\n      </p>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        active={isModalOpen}\r\n        handleClose={closeModal}\r\n      >\r\n        <TitledCard\r\n          title={title}\r\n          subtitle={subtitle}\r\n        >\r\n          <FileDropArea\r\n            acceptedTypes={acceptedTypes}\r\n            sizeLimitBytes={sizeLimitBytes}\r\n            handleSuccess={uploadSuccess}\r\n            handleError={uploadError}\r\n          />\r\n          {hasFileError ? helpTexts['error'] : helpTexts['normal']}\r\n          <Button\r\n            flavor='text'\r\n            onClick={closeModal}\r\n          >\r\n            Close\r\n          </Button>\r\n        </TitledCard>\r\n      </Modal>\r\n      <div\r\n        className={cn(styles.uploaderWrapper, className)}\r\n        onClick={openModal}\r\n      >\r\n        {children}\r\n        {withResponsiveUploadIndicator && (\r\n          <div className={styles.touchContainer}>\r\n            <CameraIcon\r\n              className={styles.touchIcon}\r\n              viewBox='0 0 24 24'\r\n            />\r\n          </div>\r\n        )}\r\n        <div className={styles.hoverContainer}>\r\n          <CameraIcon className={styles.hoverIcon} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n", "export const toSentence = (items: string[]): string => {\r\n  // TODO: Once Safari supports it, use Intl.ListFormat\r\n  if (items.length == 0) {\r\n    return '';\r\n  }\r\n  if (items.length == 1) {\r\n    return items[0];\r\n  }\r\n  let sentence = items.slice(0, -1).join(', ');\r\n  sentence += `, or ${items.slice(-1)}`;\r\n  return sentence;\r\n};\r\n", "const MimeTypeToExtensionMap = Object.freeze({\r\n  'image/png': 'png',\r\n  'image/jpeg': 'jpg',\r\n  'image/gif': 'gif',\r\n  'image/webp': 'webp',\r\n  'image/x-icon': 'ico',\r\n  'image/vnd.microsoft.icon': 'ico',\r\n} as const);\r\n\r\nexport type SupportedMimeType = keyof typeof MimeTypeToExtensionMap;\r\n\r\nexport const extension = (mimeType: SupportedMimeType): string => {\r\n  return MimeTypeToExtensionMap[mimeType];\r\n};\r\n", "import React from 'react';\r\n\r\nimport { ImageDefaultIcon, UploadIcon } from '../../assets/icons';\r\nimport { SupportedMimeType } from '../../utils/mimeTypeExtensions';\r\nimport { Button } from '../button';\r\nimport { Spinner } from '../spinner';\r\n//@ts-ignore\r\nimport styles from './FileDropArea.module.scss';\r\n\r\nenum UIState {\r\n  Idle = 'idle',\r\n  Hover = 'hover',\r\n  Invalid = 'invalid',\r\n  Uploading = 'uploading',\r\n}\r\n\r\nexport type FileDropAreaProps = {\r\n  acceptedTypes: SupportedMimeType[];\r\n  sizeLimitBytes: number;\r\n  handleSuccess: (file: File) => void;\r\n  handleError?: () => void;\r\n};\r\n\r\nexport function FileDropArea({\r\n  acceptedTypes,\r\n  sizeLimitBytes,\r\n  handleSuccess,\r\n  handleError,\r\n}: FileDropAreaProps): JSX.Element {\r\n  const [uiState, setUiState] = React.useState<UIState>(UIState.Idle);\r\n\r\n  const fileRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const promptForFile = () => {\r\n    fileRef.current?.click();\r\n  };\r\n\r\n  const fileIsValid = (f: File): boolean => {\r\n    return fileTypeIsValid(f.type) && fileSizeIsValid(f.size);\r\n  };\r\n\r\n  const fileTypeIsValid = (mime: string): mime is SupportedMimeType => {\r\n    return acceptedTypes.includes(mime as SupportedMimeType);\r\n  };\r\n\r\n  const fileSizeIsValid = (bytes: number): boolean => {\r\n    if (!sizeLimitBytes) {\r\n      return true;\r\n    }\r\n    return bytes <= sizeLimitBytes;\r\n  };\r\n\r\n  const handleDragEnter = (ev: React.DragEvent) => {\r\n    const files = ev.dataTransfer.items;\r\n    if (files.length > 0 && !fileTypeIsValid(files[0].type)) {\r\n      setUiState(UIState.Invalid);\r\n    } else {\r\n      setUiState(UIState.Hover);\r\n    }\r\n  };\r\n\r\n  const handleDragLeave = (ev: React.DragEvent) => {\r\n    const dropArea = ev.currentTarget,\r\n      elLeaving = ev.relatedTarget as Element;\r\n    if (dropArea.contains(elLeaving)) {\r\n      return;\r\n    }\r\n    setUiState(UIState.Idle);\r\n  };\r\n\r\n  const handleOver = (ev: React.DragEvent) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (ev: React.DragEvent) => {\r\n    ev.preventDefault();\r\n    handleDragLeave(ev);\r\n    const files = ev.dataTransfer.files;\r\n    validateAndUpload(files[0]);\r\n  };\r\n\r\n  const areaHandlers = {\r\n    onDragEnter: handleDragEnter,\r\n    onDragLeave: handleDragLeave,\r\n    onDragOver: handleOver,\r\n    onDrop: handleDrop,\r\n  };\r\n\r\n  const handleInput = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = ev.currentTarget.files || [];\r\n    validateAndUpload(files[0]);\r\n  };\r\n\r\n  const validateAndUpload = (file: File) => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    if (!fileIsValid(file)) {\r\n      handleError && handleError();\r\n      return;\r\n    }\r\n    void uploadFile(file);\r\n  };\r\n\r\n  const uploadFile = async (file: File) => {\r\n    setUiState(UIState.Uploading);\r\n    handleSuccess(file);\r\n  };\r\n\r\n  const buttonEl = () => {\r\n    const v = uiState == UIState.Idle ? 'visible' : 'hidden';\r\n    return (\r\n      <div style={{ visibility: v }}>\r\n        <Button\r\n          hoverable={true}\r\n          buttonSize='small'\r\n          flavor='text'\r\n          onClick={promptForFile}\r\n        >\r\n          <UploadIcon style={{ marginRight: '0.5em' }} /> Select file to upload\r\n        </Button>\r\n        <input\r\n          type='file'\r\n          accept={acceptedTypes.join(',')}\r\n          className={styles.fileInput}\r\n          ref={fileRef}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const states = {\r\n    idle: (\r\n      <div\r\n        className={styles.dropArea}\r\n        {...areaHandlers}\r\n      >\r\n        <ImageDefaultIcon className={styles.icon} />\r\n        <p>Drag file here, or</p>\r\n        {buttonEl()}\r\n      </div>\r\n    ),\r\n    hover: (\r\n      <div\r\n        className={`${styles.dropArea} ${styles.fileHover}`}\r\n        {...areaHandlers}\r\n      >\r\n        <ImageDefaultIcon className={styles.icon} />\r\n        <p>Drop photo to upload</p>\r\n        {buttonEl()}\r\n      </div>\r\n    ),\r\n    invalid: (\r\n      <div\r\n        className={`${styles.dropArea} ${styles.invalid}`}\r\n        {...areaHandlers}\r\n      >\r\n        <ImageDefaultIcon className={styles.icon} />\r\n        <p>Unsupported file type</p>\r\n        {buttonEl()}\r\n      </div>\r\n    ),\r\n    uploading: (\r\n      <div\r\n        className={styles.dropArea}\r\n        {...areaHandlers}\r\n      >\r\n        <Spinner />\r\n        <p style={{ marginTop: '3em' }}>Uploading file</p>\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  return states[uiState];\r\n}\r\n", "import cn from 'classnames';\r\nimport React from 'react';\r\n\r\nimport { useDetectClickOutside, useDomRef } from '../../hooks';\r\nimport { noop } from '../../utils';\r\nimport { Portal } from '../portal';\r\nimport { CloseButton, CloseButtonProps } from './CloseButton';\r\nimport { ModalContext } from './context';\r\n// @ts-ignore\r\nimport styles from './Modal.module.scss';\r\n\r\n// Disables scroll for an element.\r\n// Adds extra padding to prevent layout shifting\r\n// caused by hiding the scrollbar.\r\nfunction disableScrollHandlers<T extends HTMLElement>(el: T) {\r\n  let oldPaddingRightPx: string;\r\n  let oldOverflow: string;\r\n\r\n  const hideScrollbar = () => {\r\n    oldPaddingRightPx = getComputedStyle(el).paddingRight;\r\n    oldOverflow = getComputedStyle(el).overflow;\r\n    const oldWidth = el.clientWidth;\r\n    el.style.overflow = 'hidden';\r\n    const currentWidth = el.clientWidth;\r\n    const oldPaddingRight = Number.parseInt(oldPaddingRightPx.replace('px', ''));\r\n    el.style.paddingRight = currentWidth - oldWidth + oldPaddingRight + 'px';\r\n  };\r\n\r\n  const revertScrollbar = () => {\r\n    el.style.overflow = oldOverflow;\r\n    if (oldPaddingRightPx) {\r\n      el.style.paddingRight = oldPaddingRightPx;\r\n    }\r\n  };\r\n\r\n  return { hideScrollbar, revertScrollbar };\r\n}\r\n\r\nexport type ModalProps = {\r\n  ref?: React.Ref<ModalElement>;\r\n  children: React.ReactNode;\r\n  trigger?: React.ReactNode;\r\n  active?: boolean;\r\n  rootSelector?: string;\r\n  className?: string;\r\n  triggerClassname?: string;\r\n  modalClassname?: string;\r\n  handleOpen?: () => void;\r\n  handleClose?: () => void;\r\n};\r\n\r\nexport interface ModalElement {\r\n  open: () => void;\r\n  close: () => void;\r\n}\r\n\r\nexport type ModalComponent = React.ForwardRefExoticComponent<\r\n  React.PropsWithoutRef<ModalProps> & React.RefAttributes<ModalElement>\r\n> & { CloseButton?: (props: CloseButtonProps) => JSX.Element | null };\r\n\r\nconst Modal: ModalComponent = React.forwardRef(\r\n  (\r\n    {\r\n      active,\r\n      trigger,\r\n      children,\r\n      rootSelector,\r\n      className,\r\n      triggerClassname,\r\n      modalClassname,\r\n      handleOpen,\r\n      handleClose,\r\n    }: ModalProps,\r\n    ref: React.Ref<ModalElement>,\r\n  ): JSX.Element => {\r\n    const isFirstRun = React.useRef(true);\r\n    const backdropRef = React.useRef<HTMLDivElement | null>(null);\r\n    const containerRef = React.useRef<HTMLDivElement | null>(null);\r\n    const backdropDismissTriggerRef = React.useRef<HTMLDivElement | null>(null);\r\n    const rootEl = useDomRef(rootSelector);\r\n\r\n    const [isActive, setIsActive] = useDetectClickOutside(backdropDismissTriggerRef, !!active, () => {\r\n      if (typeof handleClose === 'function') {\r\n        handleClose();\r\n      }\r\n    });\r\n\r\n    const open = React.useCallback(() => {\r\n      setIsActive(true);\r\n      if (typeof handleOpen === 'function') {\r\n        handleOpen();\r\n      }\r\n    }, [setIsActive, handleOpen]);\r\n\r\n    const close = React.useCallback(() => {\r\n      setIsActive(false);\r\n      if (typeof handleClose === 'function') {\r\n        handleClose();\r\n      }\r\n    }, [setIsActive, handleClose]);\r\n\r\n    React.useEffect(() => {\r\n      if (isFirstRun.current) {\r\n        isFirstRun.current = false;\r\n        return;\r\n      }\r\n\r\n      active ? open() : close();\r\n    }, [active]);\r\n\r\n    React.useLayoutEffect(() => {\r\n      if (typeof window === 'undefined') {\r\n        return noop;\r\n      }\r\n\r\n      const onKeyDown = (e: KeyboardEvent) => {\r\n        if (e.key !== 'Escape') {\r\n          return;\r\n        }\r\n        close();\r\n      };\r\n\r\n      const currentRootEl = rootEl.current;\r\n      const { revertScrollbar, hideScrollbar } = disableScrollHandlers(document.body);\r\n\r\n      if (isActive) {\r\n        window.addEventListener('keydown', onKeyDown);\r\n        currentRootEl?.setAttribute('inert', '');\r\n        currentRootEl?.setAttribute('aria-hidden', '');\r\n        containerRef?.current?.focus();\r\n        hideScrollbar();\r\n      }\r\n\r\n      return () => {\r\n        window?.removeEventListener('keydown', onKeyDown);\r\n        currentRootEl?.removeAttribute('inert');\r\n        currentRootEl?.removeAttribute('aria-hidden');\r\n        revertScrollbar();\r\n      };\r\n    }, [isActive, close, rootEl]);\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n      open,\r\n      close,\r\n    }));\r\n\r\n    return (\r\n      <>\r\n        {trigger && (\r\n          <div\r\n            className={cn(styles.trigger, triggerClassname)}\r\n            onClick={() => open()}\r\n          >\r\n            {trigger}\r\n          </div>\r\n        )}\r\n        {isActive && (\r\n          <Portal>\r\n            <div\r\n              ref={backdropRef}\r\n              className={cn(styles.backdrop, className)}\r\n              tabIndex={-1}\r\n            >\r\n              <div\r\n                ref={containerRef}\r\n                aria-modal='true'\r\n                role='dialog'\r\n                tabIndex={-1}\r\n                className={cn(styles.container, modalClassname)}\r\n              >\r\n                <ModalContext.Provider value={{ open, close }}>\r\n                  <div\r\n                    className={styles.backdropDismissWrapper}\r\n                    ref={backdropDismissTriggerRef}\r\n                  >\r\n                    {children}\r\n                  </div>\r\n                </ModalContext.Provider>\r\n              </div>\r\n            </div>\r\n          </Portal>\r\n        )}\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nModal.displayName = 'Modal';\r\nModal.CloseButton = CloseButton;\r\n\r\nexport { Modal };\r\n", "import React from 'react';\r\n\r\nimport { ModalContext } from './context';\r\n\r\nexport type CloseButtonProps = {\r\n  children: React.ReactNode;\r\n  handleClick?: (e: React.MouseEvent) => void;\r\n};\r\n\r\nconst CloseButton = ({ children, handleClick, ...rest }: CloseButtonProps): JSX.Element | null => {\r\n  const { close } = React.useContext(ModalContext);\r\n\r\n  const onClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (typeof close === 'function') {\r\n      close();\r\n    }\r\n\r\n    if (typeof handleClick === 'function') {\r\n      handleClick(e);\r\n    }\r\n  };\r\n\r\n  const child = React.Children.only(children) as React.ReactElement<{\r\n    onClick: (e: React.MouseEvent) => void;\r\n  }>;\r\n\r\n  if (React.isValidElement(child)) {\r\n    return React.cloneElement(child, {\r\n      ...rest,\r\n      onClick,\r\n    });\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nCloseButton.displayName = 'CloseButton';\r\n\r\nexport { CloseButton };\r\n", "import React from 'react';\r\n\r\nimport { noop } from '../../utils';\r\n\r\nexport const ModalContext = React.createContext({\r\n  open: noop,\r\n  close: noop,\r\n});\r\n", "import { List } from '@clerk/shared/components/list';\nimport { Tag, VerificationStatusTag } from '@clerk/shared/components/tag';\nimport React from 'react';\nimport { useCoreUser } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\n\nexport function ProfileEmailAddresses(): JSX.Element {\n  const { navigate } = useNavigate();\n  const user = useCoreUser();\n\n  return (\n    <List.Item\n      className='cl-list-item'\n      key='email'\n      itemTitle='Email'\n      onClick={() => navigate('email-addresses')}\n    >\n      {user.emailAddresses.length === 0 ? (\n        <div className='cl-empty-list-item'>None</div>\n      ) : (\n        <div className='cl-list-item-entry'>\n          {user.emailAddresses.map(emailIdent => (\n            <div key={emailIdent.id}>\n              {emailIdent.emailAddress}\n              {user.isPrimaryIdentification(emailIdent) && <Tag color='primary'>Primary</Tag>}\n              {emailIdent.verification.status && (\n                <VerificationStatusTag\n                  className='cl-tag'\n                  status={emailIdent.verification.status}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </List.Item>\n  );\n}\n", "import { List } from '@clerk/shared/components/list';\nimport { PhoneViewer } from '@clerk/shared/components/phoneInput';\nimport { Tag, VerificationStatusTag } from '@clerk/shared/components/tag';\nimport React from 'react';\nimport { useCoreUser } from 'ui/contexts';\nimport { useNavigate } from 'ui/hooks';\n\nexport function ProfilePhoneNumbers(): JSX.Element {\n  const { navigate } = useNavigate();\n  const user = useCoreUser();\n\n  return (\n    <List.Item\n      className='cl-list-item'\n      key='phone-number'\n      itemTitle='Phone number'\n      onClick={() => navigate('phone-numbers')}\n    >\n      {user.phoneNumbers.length === 0 ? (\n        <div className='cl-empty-list-item'>None</div>\n      ) : (\n        <div className='cl-list-item-entry'>\n          {user.phoneNumbers.map(phoneIdent => (\n            <div key={phoneIdent.id}>\n              <PhoneViewer phoneNumber={phoneIdent.phoneNumber} />\n              {user.isPrimaryIdentification(phoneIdent) && <Tag color='primary'>Primary</Tag>}\n              {phoneIdent.verification.status && (\n                <VerificationStatusTag\n                  className='cl-tag'\n                  status={phoneIdent.verification.status}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </List.Item>\n  );\n}\n", "import { LoaderFunction, redirect, useLoaderData } from \"remix\";\r\nimport { getAuth } from \"@clerk/remix/ssr.server\";\r\nimport { users } from \"@clerk/remix/api.server\";\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { userId } = await getAuth(request);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/sign-in?redirect_url=\" + request.url);\r\n  }\r\n\r\n  const user = await users.getUser(userId);\r\n  return { serialisedUser: JSON.stringify(user) };\r\n};\r\n\r\nexport default function SsrDemoPage() {\r\n  const { serialisedUser } = useLoaderData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"main\">\r\n        <h1 className=\"title\">SSR Demo page with /api.server</h1>\r\n        <p className=\"description\">This route has a loader that fetches the user on the server-side.</p>\r\n        <p className=\"description\">\r\n          If you only intend to use the `user` object on the client-side, you most probably want to simply use the\r\n          `useUser` hook instead.\r\n        </p>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useLoaderData hook</h2>\r\n          <p className=\"description\">\r\n            The loader uses getAuth to get the userId and users.getUser to fetch the user object\r\n          </p>\r\n          <pre>{JSON.stringify({ serialisedUser }, null, 2)}</pre>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "// import { UserProfile } from \"@clerk/remix\";\r\n\r\n// export default function UserProfilePage() {\r\n//   return <UserProfile path=\"/user\" routing=\"path\" />;\r\n// }\r\n\r\nimport { Outlet } from \"remix\";\r\nimport { DefaultNavBarLinks } from \"@clerk/clerk-js/src/ui/userProfile/NavBarLinks\";\r\nimport { EnvironmentProvider } from \"@clerk/clerk-js/src/ui/contexts/EnvironmentContext\";\r\nimport { CoreClerkContextWrapper } from \"@clerk/clerk-js/src/ui/contexts/CoreClerkContextWrapper\";\r\nimport { useClerk } from \"@clerk/remix\";\r\n// import Clerk from '@clerk/clerk-js';\r\n\r\nconst AttributeData = {\r\n  enabled: true,\r\n  required: true,\r\n  name: \"username\" as const,\r\n  verifications: [],\r\n  used_for_first_factor: true,\r\n  first_factors: [],\r\n  used_for_second_factor: true,\r\n  second_factors: [],\r\n  verify_at_sign_up: true,\r\n};\r\n\r\nexport default function UserProfilePage() {\r\n  const clerk = useClerk();\r\n  return (\r\n    <CoreClerkContextWrapper\r\n      // @ts-ignore\r\n      clerk={clerk}\r\n    >\r\n      <EnvironmentProvider\r\n        value={{\r\n          // @ts-ignore\r\n          userSettings: {\r\n            attributes: {\r\n              username: AttributeData,\r\n              email_address: AttributeData,\r\n              web3_wallet: AttributeData,\r\n              first_name: AttributeData,\r\n              last_name: AttributeData,\r\n              password: AttributeData,\r\n              phone_number: AttributeData,\r\n            },\r\n          },\r\n          // @ts-ignore\r\n          authConfig: {},\r\n          // @ts-ignore\r\n          displayConfig: {},\r\n          isSingleSession: () => true,\r\n          isProduction: () => true,\r\n          onWindowLocationHost: () => true,\r\n        }}\r\n      >\r\n        <nav className=\"cl-navbar\">\r\n          <DefaultNavBarLinks />\r\n        </nav>\r\n        <div className=\"cl-main\">\r\n          <Outlet />\r\n        </div>\r\n      </EnvironmentProvider>\r\n    </CoreClerkContextWrapper>\r\n  );\r\n}\r\n", "// @ts-ignore\nimport { default as ShieldIcon } from '@clerk/shared/assets/icons/shield.svg';\n// @ts-ignore\nimport { default as UserIcon } from '@clerk/shared/assets/icons/user.svg';\nimport React from 'react';\nimport { Link, LinkProps } from 'ui/router';\n\nexport interface NavbarLinkOptions {\n  icon: JSX.Element;\n  index: boolean;\n  label: string;\n  to: string;\n}\n\nexport function NavbarLink(props: React.PropsWithChildren<Partial<LinkProps>>): JSX.Element {\n  return (\n    <Link\n      {...props}\n      className='cl-navbar-link'\n      activeClassName='cl-active'\n    />\n  );\n}\n\nconst DEFAULT_NAV_BAR_LINKS = [\n  {\n    to: 'account',\n    icon: <UserIcon />,\n    index: true,\n    label: 'Account',\n  },\n  {\n    to: 'security',\n    icon: <ShieldIcon />,\n    index: false,\n    label: 'Security',\n  },\n];\n\nexport function renderNavBarLinks(navLinks: NavbarLinkOptions[]): JSX.Element {\n  return (\n    <>\n      {navLinks.map(({ to, index, icon, label }, i) => {\n        return (\n          <NavbarLink\n            key={`link-${i}`}\n            to={to}\n            toIndex={index}\n            iconSvg={icon}\n          >\n            {label}\n          </NavbarLink>\n        );\n      })}\n    </>\n  );\n}\n\nexport function DefaultNavBarLinks(): JSX.Element {\n  return renderNavBarLinks(DEFAULT_NAV_BAR_LINKS);\n}\n", "import type { Clerk, LoadedClerk, Resources } from '@clerk/types';\nimport React from 'react';\nimport { CoreClientContext } from 'ui/contexts/CoreClientContext';\nimport { CoreSessionContext } from 'ui/contexts/CoreSessionContext';\nimport { CoreUserContext } from 'ui/contexts/CoreUserContext';\nimport { assertClerkSingletonExists } from 'ui/contexts/utils';\n\nimport { CoreClerkContext } from './CoreClerkContext';\n\ntype CoreClerkContextWrapperProps = {\n  clerk: Clerk;\n  children: React.ReactNode;\n};\n\ntype CoreClerkContextProviderState = Resources;\n\nexport function CoreClerkContextWrapper(props: CoreClerkContextWrapperProps): JSX.Element | null {\n  // TODO: Revise Clerk and LoadedClerk\n  const clerk = props.clerk as LoadedClerk;\n  assertClerkSingletonExists(clerk);\n\n  const [state, setState] = React.useState<CoreClerkContextProviderState>({\n    client: clerk.client,\n    session: clerk.session,\n    user: clerk.user,\n  });\n\n  React.useEffect(() => {\n    return clerk.addListener(e => setState({ ...e }));\n  }, []);\n\n  const { client, session, user } = state;\n  const clientCtx = React.useMemo(() => ({ value: client }), [client]);\n  const sessionCtx = React.useMemo(() => ({ value: session }), [session]);\n  const userCtx = React.useMemo(() => ({ value: user }), [user]);\nconsole.log('prov')\n  return (\n    <CoreClerkContext.Provider value={clerk}>\n      <CoreClientContext.Provider value={clientCtx}>\n        <CoreSessionContext.Provider value={sessionCtx}>\n          <CoreUserContext.Provider value={userCtx}>{props.children}</CoreUserContext.Provider>\n        </CoreSessionContext.Provider>\n      </CoreClientContext.Provider>\n    </CoreClerkContext.Provider>\n  );\n}\n", "import { SignIn } from \"@clerk/remix\";\r\n\r\nexport default function SignInPage() {\r\n  return <SignIn path=\"/sign-in\" routing=\"path\" />;\r\n}\r\n", "import { SignUp } from \"@clerk/remix\";\r\n\r\nexport default function SignUpPage() {\r\n  return <SignUp path=\"/sign-up\" routing=\"path\" />;\r\n}\r\n", "import { useUser } from \"@clerk/remix\";\r\nimport { LoaderFunction, redirect, useLoaderData } from \"remix\";\r\nimport { getAuth } from \"@clerk/remix/ssr.server\";\r\n\r\nconst mockGetPosts = (userId: string) => {\r\n  return Promise.resolve([{ title: \"A Post\", content: \"Hello from Clerk + Remix\" }]);\r\n};\r\n\r\nexport const loader: LoaderFunction = async ({ request }) => {\r\n  const { userId, sessionId, getToken } = await getAuth(request);\r\n  console.log(\"Use getAuth() to access the auth state:\", userId, sessionId, getToken);\r\n\r\n  if (!userId) {\r\n    return redirect(\"/sign-in?redirect_url=\" + request.url);\r\n  }\r\n\r\n  const posts = await mockGetPosts(userId);\r\n  return { posts };\r\n};\r\n\r\nexport default function SsrDemoPage() {\r\n  const { isSignedIn, isLoaded, user } = useUser();\r\n  const { posts } = useLoaderData();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <main className=\"main\">\r\n        <h1 className=\"title\">SSR Demo page</h1>\r\n        <p className=\"description\">\r\n          This page and any displayed data are fully rendered on the server side. Reload this page to try it out.\r\n        </p>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useLoaderData hook</h2>\r\n          <p className=\"description\">\r\n            The loader uses getAuth to get the userId and fetch the posts from a remote database\r\n          </p>\r\n          <pre>{JSON.stringify({ posts }, null, 2)}</pre>\r\n        </div>\r\n\r\n        <div className=\"preContainer\">\r\n          <h2>useUser hook</h2>\r\n          <p className=\"description\">\r\n            Passing {`{ loadeUser: true }`} to the root loader makes all Clerk data available both during SSR and CSR\r\n          </p>\r\n          <pre>{JSON.stringify({ isLoaded })}</pre>\r\n          <pre>{JSON.stringify({ isSignedIn })}</pre>\r\n          <pre>{JSON.stringify({ user }, null, 2)}</pre>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n", "import { SignedIn, SignedOut } from \"@clerk/remix\";\r\nimport { Link } from \"remix\";\r\n\r\nconst ClerkFeatures = () => (\r\n  <Link to=\"/user\">\r\n    <a className=\"cardContent\">\r\n      <img src=\"/icons/layout.svg\" />\r\n      <div>\r\n        <h3>Explore features provided by Clerk</h3>\r\n        <p>Interact with the user button, user profile, and more to preview what your users will see</p>\r\n      </div>\r\n      <div className=\"arrow\">\r\n        <img src=\"/icons/arrow-right.svg\" />\r\n      </div>\r\n    </a>\r\n  </Link>\r\n);\r\n\r\nconst SsrDemoLink = () => (\r\n  <Link to=\"/ssr-demo\">\r\n    <a className=\"cardContent\">\r\n      <img src=\"/icons/layout.svg\" />\r\n      <div>\r\n        <h3>Visit the SSR demo page</h3>\r\n        <p>\r\n          See how Clerk hydrates the auth state during SSR and CSR, enabling server-side generation even for\r\n          authenticated pages\r\n        </p>\r\n      </div>\r\n      <div className=\"arrow\">\r\n        <img src=\"/icons/arrow-right.svg\" />\r\n      </div>\r\n    </a>\r\n  </Link>\r\n);\r\n\r\nconst SignupLink = () => (\r\n  <Link to=\"/sign-up\">\r\n    <a className=\"cardContent\">\r\n      <img src=\"/icons/user-plus.svg\" />\r\n      <div>\r\n        <h3>Sign up for an account</h3>\r\n        <p>Sign up and sign in to explore all the features provided by Clerk out-of-the-box</p>\r\n      </div>\r\n      <div className=\"arrow\">\r\n        <img src=\"/icons/arrow-right.svg\" />\r\n      </div>\r\n    </a>\r\n  </Link>\r\n);\r\n\r\n// Main component using <SignedIn> and <SignedOut>\r\n//\r\n// The SignedIn and SignedOut components are used to control rendering depending\r\n// on whether or not a visitor is signed in.\r\n//\r\n// https://docs.clerk.dev/frontend/react/signedin-and-signedout\r\nconst Main = () => (\r\n  <main className=\"main\">\r\n    <h1 className=\"title\">Welcome to your new app</h1>\r\n    <SignedIn>\r\n      <p className=\"description\">You have successfully signed in</p>\r\n    </SignedIn>\r\n    <SignedOut>\r\n      <p className=\"description\">Sign up for an account to get started</p>\r\n    </SignedOut>\r\n\r\n    <div className=\"cards\">\r\n      <SignedIn>\r\n        <div className=\"card\">\r\n          <ClerkFeatures />\r\n        </div>\r\n      </SignedIn>\r\n      <SignedIn>\r\n        <div className=\"card\">\r\n          <SsrDemoLink />\r\n        </div>\r\n      </SignedIn>\r\n      <SignedOut>\r\n        <div className=\"card\">\r\n          <SignupLink />\r\n        </div>\r\n      </SignedOut>\r\n      <div className=\"card\">\r\n        <a href=\"https://dashboard.clerk.dev\" target=\"_blank\" rel=\"noreferrer\" className=\"cardContent\">\r\n          <img src=\"/icons/settings.svg\" />\r\n          <div>\r\n            <h3>Configure settings for your app</h3>\r\n            <p>Visit Clerk to manage instances and configure settings for user management, theme, and more</p>\r\n          </div>\r\n          <div className=\"arrow\">\r\n            <img src=\"/icons/arrow-right.svg\" />\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"links\">\r\n      <a href=\"https://docs.clerk.dev\" target=\"_blank\" rel=\"noreferrer\" className=\"link\">\r\n        <span className=\"linkText\">Read Clerk documentation</span>\r\n      </a>\r\n      <a href=\"https://remixjs.org/docs\" target=\"_blank\" rel=\"noreferrer\" className=\"link\">\r\n        <span className=\"linkText\">Read Remix documentation</span>\r\n      </a>\r\n    </div>\r\n  </main>\r\n);\r\n\r\nconst Footer = () => (\r\n  <footer className=\"footer\">\r\n    <a href=\"https://github.com/clerkinc/clerk-remix-starter\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n      Powered by <img src=\"/clerk.svg\" alt=\"Clerk.dev\" className=\"footer-logo\" />\r\n      +\r\n      <img src=\"/remix.svg\" alt=\"Remix\" className=\"footer-logo-remix\" />\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default function Index() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Main />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n", "export default {'version':'fb91ae02','entry':{'module':'/build/entry.client-EU5YX4IZ.js','imports':['/build/_shared/chunk-6FLRCJET.js','/build/_shared/chunk-4LV577HX.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-XBV6MVWD.js','imports':['/build/_shared/chunk-SGWMXHOQ.js','/build/_shared/chunk-NEHUZ6K4.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-SUIBKLDD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in/$':{'id':'routes/sign-in/$','parentId':'root','path':'sign-in/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in/$-AVK4QJEZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up/$':{'id':'routes/sign-up/$','parentId':'root','path':'sign-up/*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up/$-P3KV27VX.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-demo':{'id':'routes/ssr-demo','parentId':'root','path':'ssr-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-demo-LI3KGLRL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/ssr-user-demo':{'id':'routes/ssr-user-demo','parentId':'root','path':'ssr-user-demo','index':undefined,'caseSensitive':undefined,'module':'/build/routes/ssr-user-demo-LCBMQ6RL.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/connected-accounts':{'id':'routes/user/account/connected-accounts','parentId':'root','path':'user/account/connected-accounts','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/connected-accounts-WMQBFZU5.js','imports':['/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/connected-accounts.$id':{'id':'routes/user/account/connected-accounts.$id','parentId':'root','path':'user/account/connected-accounts/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/connected-accounts.$id-6IIGUCKZ.js','imports':['/build/_shared/chunk-CLJLSYFE.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/email-addresses':{'id':'routes/user/account/email-addresses','parentId':'root','path':'user/account/email-addresses','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/email-addresses-SFPWPHHF.js','imports':['/build/_shared/chunk-A64NPIW4.js','/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/email-addresses.$id':{'id':'routes/user/account/email-addresses.$id','parentId':'root','path':'user/account/email-addresses/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/email-addresses.$id-ME3JWIPU.js','imports':['/build/_shared/chunk-2X4F5XFP.js','/build/_shared/chunk-BOJRUGU2.js','/build/_shared/chunk-A64NPIW4.js','/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-N2UWA4LD.js','/build/_shared/chunk-FGNGNTIH.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-OWZAKF4N.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/email-addresses.add':{'id':'routes/user/account/email-addresses.add','parentId':'root','path':'user/account/email-addresses/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/email-addresses.add-VDPGUAAW.js','imports':['/build/_shared/chunk-2X4F5XFP.js','/build/_shared/chunk-5WAPULM6.js','/build/_shared/chunk-Z63C7PTY.js','/build/_shared/chunk-FGNGNTIH.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-OWZAKF4N.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/first-name':{'id':'routes/user/account/first-name','parentId':'root','path':'user/account/first-name','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/first-name-ADNCSZ3Z.js','imports':['/build/_shared/chunk-XMWKFWKW.js','/build/_shared/chunk-Z63C7PTY.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/index':{'id':'routes/user/account/index','parentId':'root','path':'user/account','index':true,'caseSensitive':undefined,'module':'/build/routes/user/account/index-7Y2MV4SR.js','imports':['/build/_shared/chunk-CLJLSYFE.js','/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-XFK2P3MF.js','/build/_shared/chunk-N2UWA4LD.js','/build/_shared/chunk-OWZAKF4N.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/last-name':{'id':'routes/user/account/last-name','parentId':'root','path':'user/account/last-name','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/last-name-XWXNKI4W.js','imports':['/build/_shared/chunk-XMWKFWKW.js','/build/_shared/chunk-Z63C7PTY.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/phone-numbers':{'id':'routes/user/account/phone-numbers','parentId':'root','path':'user/account/phone-numbers','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/phone-numbers-OZ3RNYLK.js','imports':['/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-N2UWA4LD.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/phone-numbers.$id':{'id':'routes/user/account/phone-numbers.$id','parentId':'root','path':'user/account/phone-numbers/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/phone-numbers.$id-ZAMAFDXG.js','imports':['/build/_shared/chunk-BOJRUGU2.js','/build/_shared/chunk-A64NPIW4.js','/build/_shared/chunk-WSYYE7JC.js','/build/_shared/chunk-B32SKUT3.js','/build/_shared/chunk-N2UWA4LD.js','/build/_shared/chunk-FGNGNTIH.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-OWZAKF4N.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/phone-numbers.add':{'id':'routes/user/account/phone-numbers.add','parentId':'root','path':'user/account/phone-numbers/add','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/phone-numbers.add-KGPTZKS4.js','imports':['/build/_shared/chunk-XFK2P3MF.js','/build/_shared/chunk-5WAPULM6.js','/build/_shared/chunk-Z63C7PTY.js','/build/_shared/chunk-N2UWA4LD.js','/build/_shared/chunk-FGNGNTIH.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-OWZAKF4N.js','/build/_shared/chunk-CMHFKBQC.js','/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-KHRWC5V4.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/account/username':{'id':'routes/user/account/username','parentId':'root','path':'user/account/username','index':undefined,'caseSensitive':undefined,'module':'/build/routes/user/account/username-6WRNH2FD.js','imports':['/build/_shared/chunk-XMWKFWKW.js','/build/_shared/chunk-Z63C7PTY.js','/build/_shared/chunk-OUPYFSA3.js','/build/_shared/chunk-ZSAKNUET.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/user/index':{'id':'routes/user/index','parentId':'root','path':'user','index':true,'caseSensitive':undefined,'module':'/build/routes/user/index-CTYOUOAL.js','imports':['/build/_shared/chunk-5SBDXQVU.js','/build/_shared/chunk-UETO4JUS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-FB91AE02.js'};"],
  "mappings": "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",
  "names": []
}
